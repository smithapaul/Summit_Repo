DROP PROCEDURE CSMRT_OWNER.PS_ISIR_00_2_EC_P
/

--
-- PS_ISIR_00_2_EC_P  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CSMRT_OWNER."PS_ISIR_00_2_EC_P" AUTHID CURRENT_USER IS

------------------------------------------------------------------------
-- George Adams
--
-- Loads stage table PS_ISIR_00_2_EC from PeopleSoft table PS_ISIR_00_2_EC.
--
-- V01  SMT-xxxx 04/04/2017,    Jim Doucette
--                              Converted from PS_ISIR_00_2_EC.SQL
--
------------------------------------------------------------------------

        strMartId                       Varchar2(50)    := 'CSW';
        strProcessName                  Varchar2(100)   := 'PS_ISIR_00_2_EC';
        intProcessSid                   Integer;
        dtProcessStart                  Date            := SYSDATE;
        strMessage01                    Varchar2(4000);
        strMessage02                    Varchar2(512);
        strMessage03                    Varchar2(512)   :='';
        strNewLine                      Varchar2(2)     := chr(13) || chr(10);
        strSqlCommand                   Varchar2(32767) :='';
        strSqlDynamic                   Varchar2(32767) :='';
        strClientInfo                   Varchar2(100);
        intRowCount                     Integer;
        intTotalRowCount                Integer         := 0;
        numSqlCode                      Number;
        strSqlErrm                      Varchar2(4000);
        intTries                        Integer;

BEGIN
strSqlCommand := 'DBMS_APPLICATION_INFO.SET_CLIENT_INFO';
DBMS_APPLICATION_INFO.SET_CLIENT_INFO (strProcessName);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_INIT';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_INIT
        (
                i_MartId                => strMartId,
                i_ProcessName           => strProcessName,
                i_ProcessStartTime      => dtProcessStart,
                o_ProcessSid            => intProcessSid
        );

strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);


strSqlCommand   := 'update START_DT on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Reading',
       START_DT = sysdate,
       END_DT = NULL
 where TABLE_NAME = 'PS_ISIR_00_2_EC'
;

strSqlCommand := 'commit';
commit;


strSqlCommand   := 'update NEW_MAX_SCN on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Merging',
       NEW_MAX_SCN = (select /*+ full(S) */ max(ORA_ROWSCN) from SYSADM.PS_ISIR_00_2_EC@SASOURCE S)
 where TABLE_NAME = 'PS_ISIR_00_2_EC'
;

strSqlCommand := 'commit';
commit;


strMessage01    := 'Merging data into CSSTG_OWNER.PS_ISIR_00_2_EC';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'merge into CSSTG_OWNER.PS_ISIR_00_2_EC';
merge /*+ use_hash(S,T) */ into CSSTG_OWNER.PS_ISIR_00_2_EC T
using (select /*+ full(S) */
nvl(trim(ECTRANSID),'-') ECTRANSID,
nvl(ECQUEUEINSTANCE,0) ECQUEUEINSTANCE,
nvl(trim(ECTRANSINOUTSW),'-') ECTRANSINOUTSW,
nvl(ISIR_SEQ_NO,0) ISIR_SEQ_NO,
nvl(trim(ORIG_SSN),'-') ORIG_SSN,
nvl(trim(NAME_CD),'-') NAME_CD,
nvl(trim(IWD_TRANS_NBR),'-') IWD_TRANS_NBR,
nvl(trim(IWD_EARLY_ANALYSIS),'-') IWD_EARLY_ANALYSIS,
nvl(trim(IWD_ELEC_APP_SOURC),'-') IWD_ELEC_APP_SOURC,
nvl(trim(IWD_APP_VERSION_NO),'-') IWD_APP_VERSION_NO,
nvl(trim(IWD_ETI_DEST_CODE),'-') IWD_ETI_DEST_CODE,
nvl(trim(REJ_OVR_IND_STDNT),'-') REJ_OVR_IND_STDNT,
nvl(trim(REJ_OVR_STDNT_NAME),'-') REJ_OVR_STDNT_NAME,
nvl(trim(REJ_OVR_BIG_FAMILY),'-') REJ_OVR_BIG_FAMILY,
nvl(trim(IWD_ASSUM_OVER_1),'-') IWD_ASSUM_OVER_1,
nvl(trim(IWD_ASSUM_OVER_2),'-') IWD_ASSUM_OVER_2,
nvl(trim(IWD_ASSUM_OVER_3),'-') IWD_ASSUM_OVER_3,
nvl(trim(IWD_ASSUM_OVER_4),'-') IWD_ASSUM_OVER_4,
nvl(trim(IWD_ASSUM_OVER_5),'-') IWD_ASSUM_OVER_5,
nvl(trim(IWD_ASSUM_OVER_6),'-') IWD_ASSUM_OVER_6,
nvl(trim(IWD_ASSUM_OVER_7),'-') IWD_ASSUM_OVER_7,
to_date(to_char(IWD_APP_RECV_DT_O,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') IWD_APP_RECV_DT_O,
nvl(trim(IWD_RECORD_TYPE),'-') IWD_RECORD_TYPE,
nvl(trim(IWD_HIST_CORR_APP),'-') IWD_HIST_CORR_APP,
nvl(trim(SYSTEM_GENERATED),'-') SYSTEM_GENERATED,
nvl(trim(DUPLICATE_REQUEST),'-') DUPLICATE_REQUEST,
nvl(trim(IWD_PAR_98_TAXSTAT),'-') IWD_PAR_98_TAXSTAT,
nvl(trim(IWD_STU_98_TAXSTAT),'-') IWD_STU_98_TAXSTAT,
nvl(trim(IWD_GRAD_FLAG),'-') IWD_GRAD_FLAG,
nvl(trim(AUTO_ZERO_EFC),'-') AUTO_ZERO_EFC,
nvl(trim(SAR_C_FLAG),'-') SAR_C_FLAG,
nvl(trim(IWD_SIMPLE_NEEDTST),'-') IWD_SIMPLE_NEEDTST,
nvl(trim(DEPNDNCY_STAT),'-') DEPNDNCY_STAT,
nvl(trim(IWD_REJECT_CODES),'-') IWD_REJECT_CODES,
nvl(trim(SS_MATCH),'-') SS_MATCH,
nvl(trim(SS_REGISTRATION),'-') SS_REGISTRATION,
nvl(trim(INS_MATCH),'-') INS_MATCH,
nvl(trim(IWD_INS_VERIF_NUM),'-') IWD_INS_VERIF_NUM,
nvl(trim(SSN_MATCH),'-') SSN_MATCH,
nvl(trim(SSA_CITIZENSHP_IND),'-') SSA_CITIZENSHP_IND,
to_date(to_char(IWD_SSN_DT_DEATH_O,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') IWD_SSN_DT_DEATH_O,
nvl(trim(NSLDS_MATCH),'-') NSLDS_MATCH,
nvl(trim(VA_MATCH),'-') VA_MATCH,
nvl(trim(VERIFCATION_TYPE),'-') VERIFCATION_TYPE,
nvl(trim(VERF_SELECTION_IND),'-') VERF_SELECTION_IND,
nvl(trim(IWD_SUB_APP_FLAG),'-') IWD_SUB_APP_FLAG,
nvl(trim(APP_SOURCE_CODE),'-') APP_SOURCE_CODE,
nvl(trim(APP_SOURCE_SITE),'-') APP_SOURCE_SITE,
nvl(trim(TRANS_SOURCE_CD),'-') TRANS_SOURCE_CD,
nvl(trim(TRANS_SOURCE_SITE),'-') TRANS_SOURCE_SITE,
to_date(to_char(TRANS_PROCESS_DT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') TRANS_PROCESS_DT,
nvl(trim(IWD_COMP_BTCH_NBR),'-') IWD_COMP_BTCH_NBR,
nvl(trim(IWD_CORRECTIONS),'-') IWD_CORRECTIONS,
nvl(trim(IWD_HIGHLIGHT),'-') IWD_HIGHLIGHT,
nvl(trim(IWD_PAID_EFC),'-') IWD_PAID_EFC,
nvl(trim(IWD_PRIMARY_EFC),'-') IWD_PRIMARY_EFC,
nvl(trim(IWD_SECONDARY_EFC),'-') IWD_SECONDARY_EFC,
nvl(trim(PELL_PAID_EFC_TYPE),'-') PELL_PAID_EFC_TYPE,
nvl(trim(FORMULA_TYPE),'-') FORMULA_TYPE,
nvl(trim(FORMULA_TYPE_SEC),'-') FORMULA_TYPE_SEC,
nvl(trim(PRM_ALT_MONTH_1),'-') PRM_ALT_MONTH_1,
nvl(trim(PRM_ALT_MONTH_2),'-') PRM_ALT_MONTH_2,
nvl(trim(PRM_ALT_MONTH_3),'-') PRM_ALT_MONTH_3,
nvl(trim(PRM_ALT_MONTH_4),'-') PRM_ALT_MONTH_4,
nvl(trim(PRM_ALT_MONTH_5),'-') PRM_ALT_MONTH_5,
nvl(trim(PRM_ALT_MONTH_6),'-') PRM_ALT_MONTH_6,
nvl(trim(PRM_ALT_MONTH_7),'-') PRM_ALT_MONTH_7,
nvl(trim(PRM_ALT_MONTH_8),'-') PRM_ALT_MONTH_8,
nvl(trim(PRM_ALT_MONTH_10),'-') PRM_ALT_MONTH_10,
nvl(trim(PRM_ALT_MONTH_11),'-') PRM_ALT_MONTH_11,
nvl(trim(PRM_ALT_MONTH_12),'-') PRM_ALT_MONTH_12,
nvl(trim(SEC_ALT_MONTH_1),'-') SEC_ALT_MONTH_1,
nvl(trim(SEC_ALT_MONTH_2),'-') SEC_ALT_MONTH_2,
nvl(trim(SEC_ALT_MONTH_3),'-') SEC_ALT_MONTH_3,
nvl(trim(SEC_ALT_MONTH_4),'-') SEC_ALT_MONTH_4,
nvl(trim(SEC_ALT_MONTH_5),'-') SEC_ALT_MONTH_5,
nvl(trim(SEC_ALT_MONTH_6),'-') SEC_ALT_MONTH_6,
nvl(trim(SEC_ALT_MONTH_7),'-') SEC_ALT_MONTH_7,
nvl(trim(SEC_ALT_MONTH_8),'-') SEC_ALT_MONTH_8,
nvl(trim(SEC_ALT_MONTH_10),'-') SEC_ALT_MONTH_10,
nvl(trim(SEC_ALT_MONTH_11),'-') SEC_ALT_MONTH_11,
nvl(trim(SEC_ALT_MONTH_12),'-') SEC_ALT_MONTH_12,
nvl(trim(TOTAL_INCOME_CH),'-') TOTAL_INCOME_CH,
nvl(trim(ALWNC_AGAINST_TICH),'-') ALWNC_AGAINST_TICH,
nvl(trim(STATE_TAX_ALWNC_CH),'-') STATE_TAX_ALWNC_CH,
nvl(trim(EMPLOYMENT_ALWNCCH),'-') EMPLOYMENT_ALWNCCH,
nvl(trim(INC_PROTECTN_AL_CH),'-') INC_PROTECTN_AL_CH,
nvl(trim(AVAILABLE_INCOMECH),'-') AVAILABLE_INCOMECH,
nvl(trim(CONTRIB_AVAIL_INCH),'-') CONTRIB_AVAIL_INCH,
nvl(trim(DESCRTN_NETWRTHCH),'-') DESCRTN_NETWRTHCH,
nvl(trim(IWD_EFC_NET_WORTH),'-') IWD_EFC_NET_WORTH,
nvl(trim(AST_PROTECTN_ALWCH),'-') AST_PROTECTN_ALWCH,
nvl(trim(CONTRIB_FROM_ASSCH),'-') CONTRIB_FROM_ASSCH,
nvl(trim(ADJ_AVAILABLEIN_CH),'-') ADJ_AVAILABLEIN_CH,
nvl(trim(TOTAL_STU_CONT_CH),'-') TOTAL_STU_CONT_CH,
nvl(trim(TOTAL_PAR_CONT_CH),'-') TOTAL_PAR_CONT_CH,
nvl(trim(ADJ_PAR_CONTRIB_CH),'-') ADJ_PAR_CONTRIB_CH,
nvl(trim(STU_TOTAL_INC_CH),'-') STU_TOTAL_INC_CH,
nvl(trim(IWD_SATI),'-') IWD_SATI,
nvl(trim(DEP_STU_I_CONT_CH),'-') DEP_STU_I_CONT_CH,
nvl(trim(IWD_SDNW),'-') IWD_SDNW,
nvl(trim(DEP_STU_A_CONRB_CH),'-') DEP_STU_A_CONRB_CH,
nvl(trim(FISAP_TOT_INC_CH),'-') FISAP_TOT_INC_CH,
nvl(trim(IWD_SEC_TI),'-') IWD_SEC_TI,
nvl(trim(IWD_SEC_ATI),'-') IWD_SEC_ATI,
nvl(trim(IWD_SEC_STX),'-') IWD_SEC_STX,
nvl(trim(IWD_SEC_EA),'-') IWD_SEC_EA,
nvl(trim(IWD_SEC_IPA),'-') IWD_SEC_IPA,
nvl(trim(IWD_SEC_AI),'-') IWD_SEC_AI,
nvl(trim(IWD_SEC_CAI),'-') IWD_SEC_CAI,
nvl(trim(IWD_SEC_DNW),'-') IWD_SEC_DNW,
nvl(trim(IWD_SEC_NW),'-') IWD_SEC_NW,
nvl(trim(IWD_SEC_APA),'-') IWD_SEC_APA,
nvl(trim(IWD_SEC_PCA),'-') IWD_SEC_PCA,
nvl(trim(IWD_SEC_AAI),'-') IWD_SEC_AAI,
nvl(trim(IWD_SEC_TSC),'-') IWD_SEC_TSC,
nvl(trim(IWD_SEC_TPC),'-') IWD_SEC_TPC,
nvl(trim(IWD_SEC_PC),'-') IWD_SEC_PC,
nvl(trim(IWD_SEC_STI),'-') IWD_SEC_STI,
nvl(trim(IWD_SEC_SATI),'-') IWD_SEC_SATI,
nvl(trim(IWD_SEC_SIC),'-') IWD_SEC_SIC,
nvl(trim(IWD_SEC_SDNW),'-') IWD_SEC_SDNW,
nvl(trim(IWD_SEC_SCA),'-') IWD_SEC_SCA,
nvl(trim(IWD_SEC_FTI),'-') IWD_SEC_FTI,
nvl(trim(ASMD_CITIZENSHIP),'-') ASMD_CITIZENSHIP,
nvl(trim(IWD_ASSUM_STU_MS),'-') IWD_ASSUM_STU_MS,
nvl(trim(IWD_ASSUMED_DOBPR),'-') IWD_ASSUMED_DOBPR,
nvl(trim(IWD_STU_MARRIED),'-') IWD_STU_MARRIED,
nvl(trim(IWD_ASSUMED_VA_ST),'-') IWD_ASSUMED_VA_ST,
nvl(trim(IWD_ASSUMED_DEP),'-') IWD_ASSUMED_DEP,
nvl(trim(IWD_ASSUMED_FAM_NO),'-') IWD_ASSUMED_FAM_NO,
nvl(trim(IWD_ASSUMED_COL_NO),'-') IWD_ASSUMED_COL_NO,
nvl(trim(IWD_ASSUMED_AGI),'-') IWD_ASSUMED_AGI,
nvl(trim(IWD_ASSUMED_IFW),'-') IWD_ASSUMED_IFW,
nvl(trim(IWD_ASSUM_IFW_SPS),'-') IWD_ASSUM_IFW_SPS,
nvl(trim(IWD_ASS_STU_EIC),'-') IWD_ASS_STU_EIC,
nvl(trim(IWD_ASS_STU_WKB),'-') IWD_ASS_STU_WKB,
nvl(trim(IWD_ASS_STU_TAX),'-') IWD_ASS_STU_TAX,
nvl(trim(IWD_ASS_PAR_MS),'-') IWD_ASS_PAR_MS,
nvl(trim(IWD_ASS_PAR_FAM_NO),'-') IWD_ASS_PAR_FAM_NO,
nvl(trim(IWD_ASS_PAR_COL_NO),'-') IWD_ASS_PAR_COL_NO,
nvl(trim(IWD_ASS_PAR_AGI),'-') IWD_ASS_PAR_AGI,
nvl(trim(IWD_ASS_FTHR_INC),'-') IWD_ASS_FTHR_INC,
nvl(trim(IWD_ASS_MOM_INC),'-') IWD_ASS_MOM_INC,
nvl(trim(IWD_ASS_PAR_EIC),'-') IWD_ASS_PAR_EIC,
nvl(trim(IWD_ASS_PAR_WKB),'-') IWD_ASS_PAR_WKB,
nvl(trim(IWD_ASS_PAR_TAXPD),'-') IWD_ASS_PAR_TAXPD,
nvl(trim(IWD_COMMENT_CDS),'-') IWD_COMMENT_CDS,
nvl(trim(IWD_SAR_ACK_COMCDS),'-') IWD_SAR_ACK_COMCDS,
nvl(trim(PELL_ELIGIBILITY),'-') PELL_ELIGIBILITY,
nvl(trim(CPS_REPROCESS_CD),'-') CPS_REPROCESS_CD,
nvl(trim(SFA_TRANS_TYPE),'-') SFA_TRANS_TYPE,
nvl(trim(ELEC_INSTITUT_IND),'-') ELEC_INSTITUT_IND,
nvl(trim(MULTI_INSTITUTION),'-') MULTI_INSTITUTION,
to_date(to_char(DUPLICATE_DATE_O,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') DUPLICATE_DATE_O,
nvl(trim(IWD_PROC_REC_TYPE),'-') IWD_PROC_REC_TYPE,
nvl(trim(PRISONER_MATCH),'-') PRISONER_MATCH,
nvl(trim(IWD_PAR_XX_TAXSTAT),'-') IWD_PAR_XX_TAXSTAT,
nvl(trim(IWD_STU_XX_TAXSTAT),'-') IWD_STU_XX_TAXSTAT,
nvl(trim(VERIFICATION_SELEC),'-') VERIFICATION_SELEC,
nvl(trim(IWD_APP_SOURCE),'-') IWD_APP_SOURCE,
nvl(trim(IWD_TRANS_SOURCE),'-') IWD_TRANS_SOURCE,
nvl(trim(IWD_PAR_WK_C),'-') IWD_PAR_WK_C,
nvl(trim(IWD_STD_EMAIL),'-') IWD_STD_EMAIL,
nvl(trim(IWD_SOURCE_CORR),'-') IWD_SOURCE_CORR,
nvl(trim(IWD_EFC_CHNG_FLAG),'-') IWD_EFC_CHNG_FLAG,
nvl(trim(IWD_SEC_INS_MATCH),'-') IWD_SEC_INS_MATCH,
nvl(trim(IWD_SEC_INS_VNUM),'-') IWD_SEC_INS_VNUM,
nvl(trim(IWD_ASS_CHILDREN),'-') IWD_ASS_CHILDREN,
nvl(trim(IWD_DUP_SSN_CD),'-') IWD_DUP_SSN_CD,
nvl(trim(IWD_ASS_STU_WKC),'-') IWD_ASS_STU_WKC,
nvl(trim(IWD_ASS_PAR_WKC),'-') IWD_ASS_PAR_WKC,
nvl(trim(IWD_ASS_FATHER_SSN),'-') IWD_ASS_FATHER_SSN,
nvl(trim(IWD_ASS_MOTHER_SSN),'-') IWD_ASS_MOTHER_SSN,
nvl(trim(VERIF_TRK_FLG),'-') VERIF_TRK_FLG,
nvl(trim(REJ_OVR_BIRTH_YEAR),'-') REJ_OVR_BIRTH_YEAR,
nvl(trim(REJ_OVR_TAX_RANGE),'-') REJ_OVR_TAX_RANGE,
nvl(trim(IWD_DATA_VERIFY),'-') IWD_DATA_VERIFY,
nvl(trim(ADDR_ONLY_CHNG_FLG),'-') ADDR_ONLY_CHNG_FLG,
nvl(trim(ISIR_CPS_PUSHED),'-') ISIR_CPS_PUSHED,
nvl(trim(ISIR_SAR_C_CHNG),'-') ISIR_SAR_C_CHNG,
nvl(trim(FATHER_SSN_MATCH),'-') FATHER_SSN_MATCH,
nvl(trim(MOTHER_SSN_MATCH),'-') MOTHER_SSN_MATCH,
nvl(trim(MULTI_INSTITUTION1),'-') MULTI_INSTITUTION1,
nvl(trim(MULTI_INSTITUTION2),'-') MULTI_INSTITUTION2,
nvl(trim(MULTI_INSTITUTION3),'-') MULTI_INSTITUTION3,
nvl(trim(MULTI_INSTITUTION4),'-') MULTI_INSTITUTION4,
nvl(trim(MULTI_INSTITUTION5),'-') MULTI_INSTITUTION5,
nvl(trim(MULTI_INSTITUTION6),'-') MULTI_INSTITUTION6,
nvl(trim(ISIR_ETI),'-') ISIR_ETI,
nvl(trim(REJ_OVR_TAXRNG_DEP),'-') REJ_OVR_TAXRNG_DEP,
nvl(trim(SFA_REJ_OVR_TX_STU),'-') SFA_REJ_OVR_TX_STU,
nvl(trim(SFA_REJ_OVR_TX_PAR),'-') SFA_REJ_OVR_TX_PAR,
nvl(trim(SFA_REJ_OVR_DADSSN),'-') SFA_REJ_OVR_DADSSN,
nvl(trim(SFA_REJ_OVR_MOMSSN),'-') SFA_REJ_OVR_MOMSSN,
nvl(trim(SFA_REJ_ST_CHG_FLG),'-') SFA_REJ_ST_CHG_FLG,
nvl(trim(SFA_VF_SEL_CHG_FLG),'-') SFA_VF_SEL_CHG_FLG,
nvl(trim(SFA_REJ_OVR_MR_STU),'-') SFA_REJ_OVR_MR_STU,
nvl(trim(SFA_REJ_OVR_NO_TAX),'-') SFA_REJ_OVR_NO_TAX,
nvl(trim(SFA_IW_SIGNREJ_EFC),'-') SFA_IW_SIGNREJ_EFC,
nvl(trim(SFA_MULTI_INST7),'-') SFA_MULTI_INST7,
nvl(trim(SFA_MULTI_INST8),'-') SFA_MULTI_INST8,
nvl(trim(SFA_MULTI_INST9),'-') SFA_MULTI_INST9,
nvl(trim(SFA_MULTI_INST10),'-') SFA_MULTI_INST10,
nvl(trim(SFA_SPL_CIRCUM_FLG),'-') SFA_SPL_CIRCUM_FLG,
nvl(trim(SFA_ASM_YTH_SCHOOL),'-') SFA_ASM_YTH_SCHOOL,
nvl(trim(SFA_ASM_YTH_HUD),'-') SFA_ASM_YTH_HUD,
nvl(trim(SFA_ASM_RISK_HOME),'-') SFA_ASM_RISK_HOME,
nvl(trim(SFA_DOD_MATCH),'-') SFA_DOD_MATCH,
to_date(to_char(SFA_DOD_PARENT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') SFA_DOD_PARENT,
nvl(trim(SFA_STU_IRS_REQUST),'-') SFA_STU_IRS_REQUST,
nvl(trim(SFA_PAR_IRS_REQUST),'-') SFA_PAR_IRS_REQUST,
nvl(trim(SFA_HIGH_SCHL_FLAG),'-') SFA_HIGH_SCHL_FLAG,
nvl(trim(SFA_REJ_OVR_MAR_ST),'-') SFA_REJ_OVR_MAR_ST,
nvl(trim(SFA_STU_ASM_ASSET),'-') SFA_STU_ASM_ASSET,
nvl(trim(SFA_PAR_ASM_ASSET),'-') SFA_PAR_ASM_ASSET,
nvl(trim(SFA_STU_IRS_AGI),'-') SFA_STU_IRS_AGI,
nvl(trim(SFA_STU_IRS_FIT),'-') SFA_STU_IRS_FIT,
nvl(trim(SFA_PAR_IRS_AGI),'-') SFA_PAR_IRS_AGI,
nvl(trim(SFA_PAR_IRS_FIT),'-') SFA_PAR_IRS_FIT,
nvl(trim(SFA_STU_IRS_DISP),'-') SFA_STU_IRS_DISP,
nvl(trim(SFA_PAR_IRS_DISP),'-') SFA_PAR_IRS_DISP
from SYSADM.PS_ISIR_00_2_EC@SASOURCE S
where ORA_ROWSCN > (select OLD_MAX_SCN from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_ISIR_00_2_EC') ) S
   on (
T.ECTRANSID = S.ECTRANSID and
T.ECQUEUEINSTANCE = S.ECQUEUEINSTANCE and
T.ECTRANSINOUTSW = S.ECTRANSINOUTSW and
T.ISIR_SEQ_NO = S.ISIR_SEQ_NO and
T.SRC_SYS_ID = 'CS90')
when matched then update set
T.ORIG_SSN = S.ORIG_SSN,
T.NAME_CD = S.NAME_CD,
T.IWD_TRANS_NBR = S.IWD_TRANS_NBR,
T.IWD_EARLY_ANALYSIS = S.IWD_EARLY_ANALYSIS,
T.IWD_ELEC_APP_SOURC = S.IWD_ELEC_APP_SOURC,
T.IWD_APP_VERSION_NO = S.IWD_APP_VERSION_NO,
T.IWD_ETI_DEST_CODE = S.IWD_ETI_DEST_CODE,
T.REJ_OVR_IND_STDNT = S.REJ_OVR_IND_STDNT,
T.REJ_OVR_STDNT_NAME = S.REJ_OVR_STDNT_NAME,
T.REJ_OVR_BIG_FAMILY = S.REJ_OVR_BIG_FAMILY,
T.IWD_ASSUM_OVER_1 = S.IWD_ASSUM_OVER_1,
T.IWD_ASSUM_OVER_2 = S.IWD_ASSUM_OVER_2,
T.IWD_ASSUM_OVER_3 = S.IWD_ASSUM_OVER_3,
T.IWD_ASSUM_OVER_4 = S.IWD_ASSUM_OVER_4,
T.IWD_ASSUM_OVER_5 = S.IWD_ASSUM_OVER_5,
T.IWD_ASSUM_OVER_6 = S.IWD_ASSUM_OVER_6,
T.IWD_ASSUM_OVER_7 = S.IWD_ASSUM_OVER_7,
T.IWD_APP_RECV_DT_O = S.IWD_APP_RECV_DT_O,
T.IWD_RECORD_TYPE = S.IWD_RECORD_TYPE,
T.IWD_HIST_CORR_APP = S.IWD_HIST_CORR_APP,
T.SYSTEM_GENERATED = S.SYSTEM_GENERATED,
T.DUPLICATE_REQUEST = S.DUPLICATE_REQUEST,
T.IWD_PAR_98_TAXSTAT = S.IWD_PAR_98_TAXSTAT,
T.IWD_STU_98_TAXSTAT = S.IWD_STU_98_TAXSTAT,
T.IWD_GRAD_FLAG = S.IWD_GRAD_FLAG,
T.AUTO_ZERO_EFC = S.AUTO_ZERO_EFC,
T.SAR_C_FLAG = S.SAR_C_FLAG,
T.IWD_SIMPLE_NEEDTST = S.IWD_SIMPLE_NEEDTST,
T.DEPNDNCY_STAT = S.DEPNDNCY_STAT,
T.IWD_REJECT_CODES = S.IWD_REJECT_CODES,
T.SS_MATCH = S.SS_MATCH,
T.SS_REGISTRATION = S.SS_REGISTRATION,
T.INS_MATCH = S.INS_MATCH,
T.IWD_INS_VERIF_NUM = S.IWD_INS_VERIF_NUM,
T.SSN_MATCH = S.SSN_MATCH,
T.SSA_CITIZENSHP_IND = S.SSA_CITIZENSHP_IND,
T.IWD_SSN_DT_DEATH_O = S.IWD_SSN_DT_DEATH_O,
T.NSLDS_MATCH = S.NSLDS_MATCH,
T.VA_MATCH = S.VA_MATCH,
T.VERIFCATION_TYPE = S.VERIFCATION_TYPE,
T.VERF_SELECTION_IND = S.VERF_SELECTION_IND,
T.IWD_SUB_APP_FLAG = S.IWD_SUB_APP_FLAG,
T.APP_SOURCE_CODE = S.APP_SOURCE_CODE,
T.APP_SOURCE_SITE = S.APP_SOURCE_SITE,
T.TRANS_SOURCE_CD = S.TRANS_SOURCE_CD,
T.TRANS_SOURCE_SITE = S.TRANS_SOURCE_SITE,
T.TRANS_PROCESS_DT = S.TRANS_PROCESS_DT,
T.IWD_COMP_BTCH_NBR = S.IWD_COMP_BTCH_NBR,
T.IWD_CORRECTIONS = S.IWD_CORRECTIONS,
T.IWD_HIGHLIGHT = S.IWD_HIGHLIGHT,
T.IWD_PAID_EFC = S.IWD_PAID_EFC,
T.IWD_PRIMARY_EFC = S.IWD_PRIMARY_EFC,
T.IWD_SECONDARY_EFC = S.IWD_SECONDARY_EFC,
T.PELL_PAID_EFC_TYPE = S.PELL_PAID_EFC_TYPE,
T.FORMULA_TYPE = S.FORMULA_TYPE,
T.FORMULA_TYPE_SEC = S.FORMULA_TYPE_SEC,
T.PRM_ALT_MONTH_1 = S.PRM_ALT_MONTH_1,
T.PRM_ALT_MONTH_2 = S.PRM_ALT_MONTH_2,
T.PRM_ALT_MONTH_3 = S.PRM_ALT_MONTH_3,
T.PRM_ALT_MONTH_4 = S.PRM_ALT_MONTH_4,
T.PRM_ALT_MONTH_5 = S.PRM_ALT_MONTH_5,
T.PRM_ALT_MONTH_6 = S.PRM_ALT_MONTH_6,
T.PRM_ALT_MONTH_7 = S.PRM_ALT_MONTH_7,
T.PRM_ALT_MONTH_8 = S.PRM_ALT_MONTH_8,
T.PRM_ALT_MONTH_10 = S.PRM_ALT_MONTH_10,
T.PRM_ALT_MONTH_11 = S.PRM_ALT_MONTH_11,
T.PRM_ALT_MONTH_12 = S.PRM_ALT_MONTH_12,
T.SEC_ALT_MONTH_1 = S.SEC_ALT_MONTH_1,
T.SEC_ALT_MONTH_2 = S.SEC_ALT_MONTH_2,
T.SEC_ALT_MONTH_3 = S.SEC_ALT_MONTH_3,
T.SEC_ALT_MONTH_4 = S.SEC_ALT_MONTH_4,
T.SEC_ALT_MONTH_5 = S.SEC_ALT_MONTH_5,
T.SEC_ALT_MONTH_6 = S.SEC_ALT_MONTH_6,
T.SEC_ALT_MONTH_7 = S.SEC_ALT_MONTH_7,
T.SEC_ALT_MONTH_8 = S.SEC_ALT_MONTH_8,
T.SEC_ALT_MONTH_10 = S.SEC_ALT_MONTH_10,
T.SEC_ALT_MONTH_11 = S.SEC_ALT_MONTH_11,
T.SEC_ALT_MONTH_12 = S.SEC_ALT_MONTH_12,
T.TOTAL_INCOME_CH = S.TOTAL_INCOME_CH,
T.ALWNC_AGAINST_TICH = S.ALWNC_AGAINST_TICH,
T.STATE_TAX_ALWNC_CH = S.STATE_TAX_ALWNC_CH,
T.EMPLOYMENT_ALWNCCH = S.EMPLOYMENT_ALWNCCH,
T.INC_PROTECTN_AL_CH = S.INC_PROTECTN_AL_CH,
T.AVAILABLE_INCOMECH = S.AVAILABLE_INCOMECH,
T.CONTRIB_AVAIL_INCH = S.CONTRIB_AVAIL_INCH,
T.DESCRTN_NETWRTHCH = S.DESCRTN_NETWRTHCH,
T.IWD_EFC_NET_WORTH = S.IWD_EFC_NET_WORTH,
T.AST_PROTECTN_ALWCH = S.AST_PROTECTN_ALWCH,
T.CONTRIB_FROM_ASSCH = S.CONTRIB_FROM_ASSCH,
T.ADJ_AVAILABLEIN_CH = S.ADJ_AVAILABLEIN_CH,
T.TOTAL_STU_CONT_CH = S.TOTAL_STU_CONT_CH,
T.TOTAL_PAR_CONT_CH = S.TOTAL_PAR_CONT_CH,
T.ADJ_PAR_CONTRIB_CH = S.ADJ_PAR_CONTRIB_CH,
T.STU_TOTAL_INC_CH = S.STU_TOTAL_INC_CH,
T.IWD_SATI = S.IWD_SATI,
T.DEP_STU_I_CONT_CH = S.DEP_STU_I_CONT_CH,
T.IWD_SDNW = S.IWD_SDNW,
T.DEP_STU_A_CONRB_CH = S.DEP_STU_A_CONRB_CH,
T.FISAP_TOT_INC_CH = S.FISAP_TOT_INC_CH,
T.IWD_SEC_TI = S.IWD_SEC_TI,
T.IWD_SEC_ATI = S.IWD_SEC_ATI,
T.IWD_SEC_STX = S.IWD_SEC_STX,
T.IWD_SEC_EA = S.IWD_SEC_EA,
T.IWD_SEC_IPA = S.IWD_SEC_IPA,
T.IWD_SEC_AI = S.IWD_SEC_AI,
T.IWD_SEC_CAI = S.IWD_SEC_CAI,
T.IWD_SEC_DNW = S.IWD_SEC_DNW,
T.IWD_SEC_NW = S.IWD_SEC_NW,
T.IWD_SEC_APA = S.IWD_SEC_APA,
T.IWD_SEC_PCA = S.IWD_SEC_PCA,
T.IWD_SEC_AAI = S.IWD_SEC_AAI,
T.IWD_SEC_TSC = S.IWD_SEC_TSC,
T.IWD_SEC_TPC = S.IWD_SEC_TPC,
T.IWD_SEC_PC = S.IWD_SEC_PC,
T.IWD_SEC_STI = S.IWD_SEC_STI,
T.IWD_SEC_SATI = S.IWD_SEC_SATI,
T.IWD_SEC_SIC = S.IWD_SEC_SIC,
T.IWD_SEC_SDNW = S.IWD_SEC_SDNW,
T.IWD_SEC_SCA = S.IWD_SEC_SCA,
T.IWD_SEC_FTI = S.IWD_SEC_FTI,
T.ASMD_CITIZENSHIP = S.ASMD_CITIZENSHIP,
T.IWD_ASSUM_STU_MS = S.IWD_ASSUM_STU_MS,
T.IWD_ASSUMED_DOBPR = S.IWD_ASSUMED_DOBPR,
T.IWD_STU_MARRIED = S.IWD_STU_MARRIED,
T.IWD_ASSUMED_VA_ST = S.IWD_ASSUMED_VA_ST,
T.IWD_ASSUMED_DEP = S.IWD_ASSUMED_DEP,
T.IWD_ASSUMED_FAM_NO = S.IWD_ASSUMED_FAM_NO,
T.IWD_ASSUMED_COL_NO = S.IWD_ASSUMED_COL_NO,
T.IWD_ASSUMED_AGI = S.IWD_ASSUMED_AGI,
T.IWD_ASSUMED_IFW = S.IWD_ASSUMED_IFW,
T.IWD_ASSUM_IFW_SPS = S.IWD_ASSUM_IFW_SPS,
T.IWD_ASS_STU_EIC = S.IWD_ASS_STU_EIC,
T.IWD_ASS_STU_WKB = S.IWD_ASS_STU_WKB,
T.IWD_ASS_STU_TAX = S.IWD_ASS_STU_TAX,
T.IWD_ASS_PAR_MS = S.IWD_ASS_PAR_MS,
T.IWD_ASS_PAR_FAM_NO = S.IWD_ASS_PAR_FAM_NO,
T.IWD_ASS_PAR_COL_NO = S.IWD_ASS_PAR_COL_NO,
T.IWD_ASS_PAR_AGI = S.IWD_ASS_PAR_AGI,
T.IWD_ASS_FTHR_INC = S.IWD_ASS_FTHR_INC,
T.IWD_ASS_MOM_INC = S.IWD_ASS_MOM_INC,
T.IWD_ASS_PAR_EIC = S.IWD_ASS_PAR_EIC,
T.IWD_ASS_PAR_WKB = S.IWD_ASS_PAR_WKB,
T.IWD_ASS_PAR_TAXPD = S.IWD_ASS_PAR_TAXPD,
T.IWD_COMMENT_CDS = S.IWD_COMMENT_CDS,
T.IWD_SAR_ACK_COMCDS = S.IWD_SAR_ACK_COMCDS,
T.PELL_ELIGIBILITY = S.PELL_ELIGIBILITY,
T.CPS_REPROCESS_CD = S.CPS_REPROCESS_CD,
T.SFA_TRANS_TYPE = S.SFA_TRANS_TYPE,
T.ELEC_INSTITUT_IND = S.ELEC_INSTITUT_IND,
T.MULTI_INSTITUTION = S.MULTI_INSTITUTION,
T.DUPLICATE_DATE_O = S.DUPLICATE_DATE_O,
T.IWD_PROC_REC_TYPE = S.IWD_PROC_REC_TYPE,
T.PRISONER_MATCH = S.PRISONER_MATCH,
T.IWD_PAR_XX_TAXSTAT = S.IWD_PAR_XX_TAXSTAT,
T.IWD_STU_XX_TAXSTAT = S.IWD_STU_XX_TAXSTAT,
T.VERIFICATION_SELEC = S.VERIFICATION_SELEC,
T.IWD_APP_SOURCE = S.IWD_APP_SOURCE,
T.IWD_TRANS_SOURCE = S.IWD_TRANS_SOURCE,
T.IWD_PAR_WK_C = S.IWD_PAR_WK_C,
T.IWD_STD_EMAIL = S.IWD_STD_EMAIL,
T.IWD_SOURCE_CORR = S.IWD_SOURCE_CORR,
T.IWD_EFC_CHNG_FLAG = S.IWD_EFC_CHNG_FLAG,
T.IWD_SEC_INS_MATCH = S.IWD_SEC_INS_MATCH,
T.IWD_SEC_INS_VNUM = S.IWD_SEC_INS_VNUM,
T.IWD_ASS_CHILDREN = S.IWD_ASS_CHILDREN,
T.IWD_DUP_SSN_CD = S.IWD_DUP_SSN_CD,
T.IWD_ASS_STU_WKC = S.IWD_ASS_STU_WKC,
T.IWD_ASS_PAR_WKC = S.IWD_ASS_PAR_WKC,
T.IWD_ASS_FATHER_SSN = S.IWD_ASS_FATHER_SSN,
T.IWD_ASS_MOTHER_SSN = S.IWD_ASS_MOTHER_SSN,
T.VERIF_TRK_FLG = S.VERIF_TRK_FLG,
T.REJ_OVR_BIRTH_YEAR = S.REJ_OVR_BIRTH_YEAR,
T.REJ_OVR_TAX_RANGE = S.REJ_OVR_TAX_RANGE,
T.IWD_DATA_VERIFY = S.IWD_DATA_VERIFY,
T.ADDR_ONLY_CHNG_FLG = S.ADDR_ONLY_CHNG_FLG,
T.ISIR_CPS_PUSHED = S.ISIR_CPS_PUSHED,
T.ISIR_SAR_C_CHNG = S.ISIR_SAR_C_CHNG,
T.FATHER_SSN_MATCH = S.FATHER_SSN_MATCH,
T.MOTHER_SSN_MATCH = S.MOTHER_SSN_MATCH,
T.MULTI_INSTITUTION1 = S.MULTI_INSTITUTION1,
T.MULTI_INSTITUTION2 = S.MULTI_INSTITUTION2,
T.MULTI_INSTITUTION3 = S.MULTI_INSTITUTION3,
T.MULTI_INSTITUTION4 = S.MULTI_INSTITUTION4,
T.MULTI_INSTITUTION5 = S.MULTI_INSTITUTION5,
T.MULTI_INSTITUTION6 = S.MULTI_INSTITUTION6,
T.ISIR_ETI = S.ISIR_ETI,
T.REJ_OVR_TAXRNG_DEP = S.REJ_OVR_TAXRNG_DEP,
T.SFA_REJ_OVR_TX_STU = S.SFA_REJ_OVR_TX_STU,
T.SFA_REJ_OVR_TX_PAR = S.SFA_REJ_OVR_TX_PAR,
T.SFA_REJ_OVR_DADSSN = S.SFA_REJ_OVR_DADSSN,
T.SFA_REJ_OVR_MOMSSN = S.SFA_REJ_OVR_MOMSSN,
T.SFA_REJ_ST_CHG_FLG = S.SFA_REJ_ST_CHG_FLG,
T.SFA_VF_SEL_CHG_FLG = S.SFA_VF_SEL_CHG_FLG,
T.SFA_REJ_OVR_MR_STU = S.SFA_REJ_OVR_MR_STU,
T.SFA_REJ_OVR_NO_TAX = S.SFA_REJ_OVR_NO_TAX,
T.SFA_IW_SIGNREJ_EFC = S.SFA_IW_SIGNREJ_EFC,
T.SFA_MULTI_INST7 = S.SFA_MULTI_INST7,
T.SFA_MULTI_INST8 = S.SFA_MULTI_INST8,
T.SFA_MULTI_INST9 = S.SFA_MULTI_INST9,
T.SFA_MULTI_INST10 = S.SFA_MULTI_INST10,
T.SFA_SPL_CIRCUM_FLG = S.SFA_SPL_CIRCUM_FLG,
T.SFA_ASM_YTH_SCHOOL = S.SFA_ASM_YTH_SCHOOL,
T.SFA_ASM_YTH_HUD = S.SFA_ASM_YTH_HUD,
T.SFA_ASM_RISK_HOME = S.SFA_ASM_RISK_HOME,
T.SFA_DOD_MATCH = S.SFA_DOD_MATCH,
T.SFA_DOD_PARENT = S.SFA_DOD_PARENT,
T.SFA_STU_IRS_REQUST = S.SFA_STU_IRS_REQUST,
T.SFA_PAR_IRS_REQUST = S.SFA_PAR_IRS_REQUST,
T.SFA_HIGH_SCHL_FLAG = S.SFA_HIGH_SCHL_FLAG,
T.SFA_REJ_OVR_MAR_ST = S.SFA_REJ_OVR_MAR_ST,
T.SFA_STU_ASM_ASSET = S.SFA_STU_ASM_ASSET,
T.SFA_PAR_ASM_ASSET = S.SFA_PAR_ASM_ASSET,
T.SFA_STU_IRS_AGI = S.SFA_STU_IRS_AGI,
T.SFA_STU_IRS_FIT = S.SFA_STU_IRS_FIT,
T.SFA_PAR_IRS_AGI = S.SFA_PAR_IRS_AGI,
T.SFA_PAR_IRS_FIT = S.SFA_PAR_IRS_FIT,
T.SFA_STU_IRS_DISP = S.SFA_STU_IRS_DISP,
T.SFA_PAR_IRS_DISP = S.SFA_PAR_IRS_DISP,
T.DATA_ORIGIN = 'S',
T.LASTUPD_EW_DTTM = sysdate,
T.BATCH_SID   = 1234
where
T.ORIG_SSN <> S.ORIG_SSN or
T.NAME_CD <> S.NAME_CD or
T.IWD_TRANS_NBR <> S.IWD_TRANS_NBR or
T.IWD_EARLY_ANALYSIS <> S.IWD_EARLY_ANALYSIS or
T.IWD_ELEC_APP_SOURC <> S.IWD_ELEC_APP_SOURC or
T.IWD_APP_VERSION_NO <> S.IWD_APP_VERSION_NO or
T.IWD_ETI_DEST_CODE <> S.IWD_ETI_DEST_CODE or
T.REJ_OVR_IND_STDNT <> S.REJ_OVR_IND_STDNT or
T.REJ_OVR_STDNT_NAME <> S.REJ_OVR_STDNT_NAME or
T.REJ_OVR_BIG_FAMILY <> S.REJ_OVR_BIG_FAMILY or
T.IWD_ASSUM_OVER_1 <> S.IWD_ASSUM_OVER_1 or
T.IWD_ASSUM_OVER_2 <> S.IWD_ASSUM_OVER_2 or
T.IWD_ASSUM_OVER_3 <> S.IWD_ASSUM_OVER_3 or
T.IWD_ASSUM_OVER_4 <> S.IWD_ASSUM_OVER_4 or
T.IWD_ASSUM_OVER_5 <> S.IWD_ASSUM_OVER_5 or
T.IWD_ASSUM_OVER_6 <> S.IWD_ASSUM_OVER_6 or
T.IWD_ASSUM_OVER_7 <> S.IWD_ASSUM_OVER_7 or
nvl(trim(T.IWD_APP_RECV_DT_O),0) <> nvl(trim(S.IWD_APP_RECV_DT_O),0) or
T.IWD_RECORD_TYPE <> S.IWD_RECORD_TYPE or
T.IWD_HIST_CORR_APP <> S.IWD_HIST_CORR_APP or
T.SYSTEM_GENERATED <> S.SYSTEM_GENERATED or
T.DUPLICATE_REQUEST <> S.DUPLICATE_REQUEST or
T.IWD_PAR_98_TAXSTAT <> S.IWD_PAR_98_TAXSTAT or
T.IWD_STU_98_TAXSTAT <> S.IWD_STU_98_TAXSTAT or
T.IWD_GRAD_FLAG <> S.IWD_GRAD_FLAG or
T.AUTO_ZERO_EFC <> S.AUTO_ZERO_EFC or
T.SAR_C_FLAG <> S.SAR_C_FLAG or
T.IWD_SIMPLE_NEEDTST <> S.IWD_SIMPLE_NEEDTST or
T.DEPNDNCY_STAT <> S.DEPNDNCY_STAT or
T.IWD_REJECT_CODES <> S.IWD_REJECT_CODES or
T.SS_MATCH <> S.SS_MATCH or
T.SS_REGISTRATION <> S.SS_REGISTRATION or
T.INS_MATCH <> S.INS_MATCH or
T.IWD_INS_VERIF_NUM <> S.IWD_INS_VERIF_NUM or
T.SSN_MATCH <> S.SSN_MATCH or
T.SSA_CITIZENSHP_IND <> S.SSA_CITIZENSHP_IND or
nvl(trim(T.IWD_SSN_DT_DEATH_O),0) <> nvl(trim(S.IWD_SSN_DT_DEATH_O),0) or
T.NSLDS_MATCH <> S.NSLDS_MATCH or
T.VA_MATCH <> S.VA_MATCH or
T.VERIFCATION_TYPE <> S.VERIFCATION_TYPE or
T.VERF_SELECTION_IND <> S.VERF_SELECTION_IND or
T.IWD_SUB_APP_FLAG <> S.IWD_SUB_APP_FLAG or
T.APP_SOURCE_CODE <> S.APP_SOURCE_CODE or
T.APP_SOURCE_SITE <> S.APP_SOURCE_SITE or
T.TRANS_SOURCE_CD <> S.TRANS_SOURCE_CD or
T.TRANS_SOURCE_SITE <> S.TRANS_SOURCE_SITE or
nvl(trim(T.TRANS_PROCESS_DT),0) <> nvl(trim(S.TRANS_PROCESS_DT),0) or
T.IWD_COMP_BTCH_NBR <> S.IWD_COMP_BTCH_NBR or
T.IWD_CORRECTIONS <> S.IWD_CORRECTIONS or
T.IWD_HIGHLIGHT <> S.IWD_HIGHLIGHT or
T.IWD_PAID_EFC <> S.IWD_PAID_EFC or
T.IWD_PRIMARY_EFC <> S.IWD_PRIMARY_EFC or
T.IWD_SECONDARY_EFC <> S.IWD_SECONDARY_EFC or
T.PELL_PAID_EFC_TYPE <> S.PELL_PAID_EFC_TYPE or
T.FORMULA_TYPE <> S.FORMULA_TYPE or
T.FORMULA_TYPE_SEC <> S.FORMULA_TYPE_SEC or
T.PRM_ALT_MONTH_1 <> S.PRM_ALT_MONTH_1 or
T.PRM_ALT_MONTH_2 <> S.PRM_ALT_MONTH_2 or
T.PRM_ALT_MONTH_3 <> S.PRM_ALT_MONTH_3 or
T.PRM_ALT_MONTH_4 <> S.PRM_ALT_MONTH_4 or
T.PRM_ALT_MONTH_5 <> S.PRM_ALT_MONTH_5 or
T.PRM_ALT_MONTH_6 <> S.PRM_ALT_MONTH_6 or
T.PRM_ALT_MONTH_7 <> S.PRM_ALT_MONTH_7 or
T.PRM_ALT_MONTH_8 <> S.PRM_ALT_MONTH_8 or
T.PRM_ALT_MONTH_10 <> S.PRM_ALT_MONTH_10 or
T.PRM_ALT_MONTH_11 <> S.PRM_ALT_MONTH_11 or
T.PRM_ALT_MONTH_12 <> S.PRM_ALT_MONTH_12 or
T.SEC_ALT_MONTH_1 <> S.SEC_ALT_MONTH_1 or
T.SEC_ALT_MONTH_2 <> S.SEC_ALT_MONTH_2 or
T.SEC_ALT_MONTH_3 <> S.SEC_ALT_MONTH_3 or
T.SEC_ALT_MONTH_4 <> S.SEC_ALT_MONTH_4 or
T.SEC_ALT_MONTH_5 <> S.SEC_ALT_MONTH_5 or
T.SEC_ALT_MONTH_6 <> S.SEC_ALT_MONTH_6 or
T.SEC_ALT_MONTH_7 <> S.SEC_ALT_MONTH_7 or
T.SEC_ALT_MONTH_8 <> S.SEC_ALT_MONTH_8 or
T.SEC_ALT_MONTH_10 <> S.SEC_ALT_MONTH_10 or
T.SEC_ALT_MONTH_11 <> S.SEC_ALT_MONTH_11 or
T.SEC_ALT_MONTH_12 <> S.SEC_ALT_MONTH_12 or
T.TOTAL_INCOME_CH <> S.TOTAL_INCOME_CH or
T.ALWNC_AGAINST_TICH <> S.ALWNC_AGAINST_TICH or
T.STATE_TAX_ALWNC_CH <> S.STATE_TAX_ALWNC_CH or
T.EMPLOYMENT_ALWNCCH <> S.EMPLOYMENT_ALWNCCH or
T.INC_PROTECTN_AL_CH <> S.INC_PROTECTN_AL_CH or
T.AVAILABLE_INCOMECH <> S.AVAILABLE_INCOMECH or
T.CONTRIB_AVAIL_INCH <> S.CONTRIB_AVAIL_INCH or
T.DESCRTN_NETWRTHCH <> S.DESCRTN_NETWRTHCH or
T.IWD_EFC_NET_WORTH <> S.IWD_EFC_NET_WORTH or
T.AST_PROTECTN_ALWCH <> S.AST_PROTECTN_ALWCH or
T.CONTRIB_FROM_ASSCH <> S.CONTRIB_FROM_ASSCH or
T.ADJ_AVAILABLEIN_CH <> S.ADJ_AVAILABLEIN_CH or
T.TOTAL_STU_CONT_CH <> S.TOTAL_STU_CONT_CH or
T.TOTAL_PAR_CONT_CH <> S.TOTAL_PAR_CONT_CH or
T.ADJ_PAR_CONTRIB_CH <> S.ADJ_PAR_CONTRIB_CH or
T.STU_TOTAL_INC_CH <> S.STU_TOTAL_INC_CH or
T.IWD_SATI <> S.IWD_SATI or
T.DEP_STU_I_CONT_CH <> S.DEP_STU_I_CONT_CH or
T.IWD_SDNW <> S.IWD_SDNW or
T.DEP_STU_A_CONRB_CH <> S.DEP_STU_A_CONRB_CH or
T.FISAP_TOT_INC_CH <> S.FISAP_TOT_INC_CH or
T.IWD_SEC_TI <> S.IWD_SEC_TI or
T.IWD_SEC_ATI <> S.IWD_SEC_ATI or
T.IWD_SEC_STX <> S.IWD_SEC_STX or
T.IWD_SEC_EA <> S.IWD_SEC_EA or
T.IWD_SEC_IPA <> S.IWD_SEC_IPA or
T.IWD_SEC_AI <> S.IWD_SEC_AI or
T.IWD_SEC_CAI <> S.IWD_SEC_CAI or
T.IWD_SEC_DNW <> S.IWD_SEC_DNW or
T.IWD_SEC_NW <> S.IWD_SEC_NW or
T.IWD_SEC_APA <> S.IWD_SEC_APA or
T.IWD_SEC_PCA <> S.IWD_SEC_PCA or
T.IWD_SEC_AAI <> S.IWD_SEC_AAI or
T.IWD_SEC_TSC <> S.IWD_SEC_TSC or
T.IWD_SEC_TPC <> S.IWD_SEC_TPC or
T.IWD_SEC_PC <> S.IWD_SEC_PC or
T.IWD_SEC_STI <> S.IWD_SEC_STI or
T.IWD_SEC_SATI <> S.IWD_SEC_SATI or
T.IWD_SEC_SIC <> S.IWD_SEC_SIC or
T.IWD_SEC_SDNW <> S.IWD_SEC_SDNW or
T.IWD_SEC_SCA <> S.IWD_SEC_SCA or
T.IWD_SEC_FTI <> S.IWD_SEC_FTI or
T.ASMD_CITIZENSHIP <> S.ASMD_CITIZENSHIP or
T.IWD_ASSUM_STU_MS <> S.IWD_ASSUM_STU_MS or
T.IWD_ASSUMED_DOBPR <> S.IWD_ASSUMED_DOBPR or
T.IWD_STU_MARRIED <> S.IWD_STU_MARRIED or
T.IWD_ASSUMED_VA_ST <> S.IWD_ASSUMED_VA_ST or
T.IWD_ASSUMED_DEP <> S.IWD_ASSUMED_DEP or
T.IWD_ASSUMED_FAM_NO <> S.IWD_ASSUMED_FAM_NO or
T.IWD_ASSUMED_COL_NO <> S.IWD_ASSUMED_COL_NO or
T.IWD_ASSUMED_AGI <> S.IWD_ASSUMED_AGI or
T.IWD_ASSUMED_IFW <> S.IWD_ASSUMED_IFW or
T.IWD_ASSUM_IFW_SPS <> S.IWD_ASSUM_IFW_SPS or
T.IWD_ASS_STU_EIC <> S.IWD_ASS_STU_EIC or
T.IWD_ASS_STU_WKB <> S.IWD_ASS_STU_WKB or
T.IWD_ASS_STU_TAX <> S.IWD_ASS_STU_TAX or
T.IWD_ASS_PAR_MS <> S.IWD_ASS_PAR_MS or
T.IWD_ASS_PAR_FAM_NO <> S.IWD_ASS_PAR_FAM_NO or
T.IWD_ASS_PAR_COL_NO <> S.IWD_ASS_PAR_COL_NO or
T.IWD_ASS_PAR_AGI <> S.IWD_ASS_PAR_AGI or
T.IWD_ASS_FTHR_INC <> S.IWD_ASS_FTHR_INC or
T.IWD_ASS_MOM_INC <> S.IWD_ASS_MOM_INC or
T.IWD_ASS_PAR_EIC <> S.IWD_ASS_PAR_EIC or
T.IWD_ASS_PAR_WKB <> S.IWD_ASS_PAR_WKB or
T.IWD_ASS_PAR_TAXPD <> S.IWD_ASS_PAR_TAXPD or
T.IWD_COMMENT_CDS <> S.IWD_COMMENT_CDS or
T.IWD_SAR_ACK_COMCDS <> S.IWD_SAR_ACK_COMCDS or
T.PELL_ELIGIBILITY <> S.PELL_ELIGIBILITY or
T.CPS_REPROCESS_CD <> S.CPS_REPROCESS_CD or
T.SFA_TRANS_TYPE <> S.SFA_TRANS_TYPE or
T.ELEC_INSTITUT_IND <> S.ELEC_INSTITUT_IND or
T.MULTI_INSTITUTION <> S.MULTI_INSTITUTION or
nvl(trim(T.DUPLICATE_DATE_O),0) <> nvl(trim(S.DUPLICATE_DATE_O),0) or
T.IWD_PROC_REC_TYPE <> S.IWD_PROC_REC_TYPE or
T.PRISONER_MATCH <> S.PRISONER_MATCH or
T.IWD_PAR_XX_TAXSTAT <> S.IWD_PAR_XX_TAXSTAT or
T.IWD_STU_XX_TAXSTAT <> S.IWD_STU_XX_TAXSTAT or
T.VERIFICATION_SELEC <> S.VERIFICATION_SELEC or
T.IWD_APP_SOURCE <> S.IWD_APP_SOURCE or
T.IWD_TRANS_SOURCE <> S.IWD_TRANS_SOURCE or
T.IWD_PAR_WK_C <> S.IWD_PAR_WK_C or
T.IWD_STD_EMAIL <> S.IWD_STD_EMAIL or
T.IWD_SOURCE_CORR <> S.IWD_SOURCE_CORR or
T.IWD_EFC_CHNG_FLAG <> S.IWD_EFC_CHNG_FLAG or
T.IWD_SEC_INS_MATCH <> S.IWD_SEC_INS_MATCH or
T.IWD_SEC_INS_VNUM <> S.IWD_SEC_INS_VNUM or
T.IWD_ASS_CHILDREN <> S.IWD_ASS_CHILDREN or
T.IWD_DUP_SSN_CD <> S.IWD_DUP_SSN_CD or
T.IWD_ASS_STU_WKC <> S.IWD_ASS_STU_WKC or
T.IWD_ASS_PAR_WKC <> S.IWD_ASS_PAR_WKC or
T.IWD_ASS_FATHER_SSN <> S.IWD_ASS_FATHER_SSN or
T.IWD_ASS_MOTHER_SSN <> S.IWD_ASS_MOTHER_SSN or
T.VERIF_TRK_FLG <> S.VERIF_TRK_FLG or
T.REJ_OVR_BIRTH_YEAR <> S.REJ_OVR_BIRTH_YEAR or
T.REJ_OVR_TAX_RANGE <> S.REJ_OVR_TAX_RANGE or
T.IWD_DATA_VERIFY <> S.IWD_DATA_VERIFY or
T.ADDR_ONLY_CHNG_FLG <> S.ADDR_ONLY_CHNG_FLG or
T.ISIR_CPS_PUSHED <> S.ISIR_CPS_PUSHED or
T.ISIR_SAR_C_CHNG <> S.ISIR_SAR_C_CHNG or
T.FATHER_SSN_MATCH <> S.FATHER_SSN_MATCH or
T.MOTHER_SSN_MATCH <> S.MOTHER_SSN_MATCH or
T.MULTI_INSTITUTION1 <> S.MULTI_INSTITUTION1 or
T.MULTI_INSTITUTION2 <> S.MULTI_INSTITUTION2 or
T.MULTI_INSTITUTION3 <> S.MULTI_INSTITUTION3 or
T.MULTI_INSTITUTION4 <> S.MULTI_INSTITUTION4 or
T.MULTI_INSTITUTION5 <> S.MULTI_INSTITUTION5 or
T.MULTI_INSTITUTION6 <> S.MULTI_INSTITUTION6 or
T.ISIR_ETI <> S.ISIR_ETI or
T.REJ_OVR_TAXRNG_DEP <> S.REJ_OVR_TAXRNG_DEP or
T.SFA_REJ_OVR_TX_STU <> S.SFA_REJ_OVR_TX_STU or
T.SFA_REJ_OVR_TX_PAR <> S.SFA_REJ_OVR_TX_PAR or
T.SFA_REJ_OVR_DADSSN <> S.SFA_REJ_OVR_DADSSN or
T.SFA_REJ_OVR_MOMSSN <> S.SFA_REJ_OVR_MOMSSN or
T.SFA_REJ_ST_CHG_FLG <> S.SFA_REJ_ST_CHG_FLG or
T.SFA_VF_SEL_CHG_FLG <> S.SFA_VF_SEL_CHG_FLG or
T.SFA_REJ_OVR_MR_STU <> S.SFA_REJ_OVR_MR_STU or
T.SFA_REJ_OVR_NO_TAX <> S.SFA_REJ_OVR_NO_TAX or
T.SFA_IW_SIGNREJ_EFC <> S.SFA_IW_SIGNREJ_EFC or
T.SFA_MULTI_INST7 <> S.SFA_MULTI_INST7 or
T.SFA_MULTI_INST8 <> S.SFA_MULTI_INST8 or
T.SFA_MULTI_INST9 <> S.SFA_MULTI_INST9 or
T.SFA_MULTI_INST10 <> S.SFA_MULTI_INST10 or
T.SFA_SPL_CIRCUM_FLG <> S.SFA_SPL_CIRCUM_FLG or
T.SFA_ASM_YTH_SCHOOL <> S.SFA_ASM_YTH_SCHOOL or
T.SFA_ASM_YTH_HUD <> S.SFA_ASM_YTH_HUD or
T.SFA_ASM_RISK_HOME <> S.SFA_ASM_RISK_HOME or
T.SFA_DOD_MATCH <> S.SFA_DOD_MATCH or
nvl(trim(T.SFA_DOD_PARENT),0) <> nvl(trim(S.SFA_DOD_PARENT),0) or
T.SFA_STU_IRS_REQUST <> S.SFA_STU_IRS_REQUST or
T.SFA_PAR_IRS_REQUST <> S.SFA_PAR_IRS_REQUST or
T.SFA_HIGH_SCHL_FLAG <> S.SFA_HIGH_SCHL_FLAG or
T.SFA_REJ_OVR_MAR_ST <> S.SFA_REJ_OVR_MAR_ST or
T.SFA_STU_ASM_ASSET <> S.SFA_STU_ASM_ASSET or
T.SFA_PAR_ASM_ASSET <> S.SFA_PAR_ASM_ASSET or
T.SFA_STU_IRS_AGI <> S.SFA_STU_IRS_AGI or
T.SFA_STU_IRS_FIT <> S.SFA_STU_IRS_FIT or
T.SFA_PAR_IRS_AGI <> S.SFA_PAR_IRS_AGI or
T.SFA_PAR_IRS_FIT <> S.SFA_PAR_IRS_FIT or
T.SFA_STU_IRS_DISP <> S.SFA_STU_IRS_DISP or
T.SFA_PAR_IRS_DISP <> S.SFA_PAR_IRS_DISP or
T.DATA_ORIGIN = 'D'
when not matched then
insert (
T.ECTRANSID,
T.ECQUEUEINSTANCE,
T.ECTRANSINOUTSW,
T.ISIR_SEQ_NO,
T.SRC_SYS_ID,
T.ORIG_SSN,
T.NAME_CD,
T.IWD_TRANS_NBR,
T.IWD_EARLY_ANALYSIS,
T.IWD_ELEC_APP_SOURC,
T.IWD_APP_VERSION_NO,
T.IWD_ETI_DEST_CODE,
T.REJ_OVR_IND_STDNT,
T.REJ_OVR_STDNT_NAME,
T.REJ_OVR_BIG_FAMILY,
T.IWD_ASSUM_OVER_1,
T.IWD_ASSUM_OVER_2,
T.IWD_ASSUM_OVER_3,
T.IWD_ASSUM_OVER_4,
T.IWD_ASSUM_OVER_5,
T.IWD_ASSUM_OVER_6,
T.IWD_ASSUM_OVER_7,
T.IWD_APP_RECV_DT_O,
T.IWD_RECORD_TYPE,
T.IWD_HIST_CORR_APP,
T.SYSTEM_GENERATED,
T.DUPLICATE_REQUEST,
T.IWD_PAR_98_TAXSTAT,
T.IWD_STU_98_TAXSTAT,
T.IWD_GRAD_FLAG,
T.AUTO_ZERO_EFC,
T.SAR_C_FLAG,
T.IWD_SIMPLE_NEEDTST,
T.DEPNDNCY_STAT,
T.IWD_REJECT_CODES,
T.SS_MATCH,
T.SS_REGISTRATION,
T.INS_MATCH,
T.IWD_INS_VERIF_NUM,
T.SSN_MATCH,
T.SSA_CITIZENSHP_IND,
T.IWD_SSN_DT_DEATH_O,
T.NSLDS_MATCH,
T.VA_MATCH,
T.VERIFCATION_TYPE,
T.VERF_SELECTION_IND,
T.IWD_SUB_APP_FLAG,
T.APP_SOURCE_CODE,
T.APP_SOURCE_SITE,
T.TRANS_SOURCE_CD,
T.TRANS_SOURCE_SITE,
T.TRANS_PROCESS_DT,
T.IWD_COMP_BTCH_NBR,
T.IWD_CORRECTIONS,
T.IWD_HIGHLIGHT,
T.IWD_PAID_EFC,
T.IWD_PRIMARY_EFC,
T.IWD_SECONDARY_EFC,
T.PELL_PAID_EFC_TYPE,
T.FORMULA_TYPE,
T.FORMULA_TYPE_SEC,
T.PRM_ALT_MONTH_1,
T.PRM_ALT_MONTH_2,
T.PRM_ALT_MONTH_3,
T.PRM_ALT_MONTH_4,
T.PRM_ALT_MONTH_5,
T.PRM_ALT_MONTH_6,
T.PRM_ALT_MONTH_7,
T.PRM_ALT_MONTH_8,
T.PRM_ALT_MONTH_10,
T.PRM_ALT_MONTH_11,
T.PRM_ALT_MONTH_12,
T.SEC_ALT_MONTH_1,
T.SEC_ALT_MONTH_2,
T.SEC_ALT_MONTH_3,
T.SEC_ALT_MONTH_4,
T.SEC_ALT_MONTH_5,
T.SEC_ALT_MONTH_6,
T.SEC_ALT_MONTH_7,
T.SEC_ALT_MONTH_8,
T.SEC_ALT_MONTH_10,
T.SEC_ALT_MONTH_11,
T.SEC_ALT_MONTH_12,
T.TOTAL_INCOME_CH,
T.ALWNC_AGAINST_TICH,
T.STATE_TAX_ALWNC_CH,
T.EMPLOYMENT_ALWNCCH,
T.INC_PROTECTN_AL_CH,
T.AVAILABLE_INCOMECH,
T.CONTRIB_AVAIL_INCH,
T.DESCRTN_NETWRTHCH,
T.IWD_EFC_NET_WORTH,
T.AST_PROTECTN_ALWCH,
T.CONTRIB_FROM_ASSCH,
T.ADJ_AVAILABLEIN_CH,
T.TOTAL_STU_CONT_CH,
T.TOTAL_PAR_CONT_CH,
T.ADJ_PAR_CONTRIB_CH,
T.STU_TOTAL_INC_CH,
T.IWD_SATI,
T.DEP_STU_I_CONT_CH,
T.IWD_SDNW,
T.DEP_STU_A_CONRB_CH,
T.FISAP_TOT_INC_CH,
T.IWD_SEC_TI,
T.IWD_SEC_ATI,
T.IWD_SEC_STX,
T.IWD_SEC_EA,
T.IWD_SEC_IPA,
T.IWD_SEC_AI,
T.IWD_SEC_CAI,
T.IWD_SEC_DNW,
T.IWD_SEC_NW,
T.IWD_SEC_APA,
T.IWD_SEC_PCA,
T.IWD_SEC_AAI,
T.IWD_SEC_TSC,
T.IWD_SEC_TPC,
T.IWD_SEC_PC,
T.IWD_SEC_STI,
T.IWD_SEC_SATI,
T.IWD_SEC_SIC,
T.IWD_SEC_SDNW,
T.IWD_SEC_SCA,
T.IWD_SEC_FTI,
T.ASMD_CITIZENSHIP,
T.IWD_ASSUM_STU_MS,
T.IWD_ASSUMED_DOBPR,
T.IWD_STU_MARRIED,
T.IWD_ASSUMED_VA_ST,
T.IWD_ASSUMED_DEP,
T.IWD_ASSUMED_FAM_NO,
T.IWD_ASSUMED_COL_NO,
T.IWD_ASSUMED_AGI,
T.IWD_ASSUMED_IFW,
T.IWD_ASSUM_IFW_SPS,
T.IWD_ASS_STU_EIC,
T.IWD_ASS_STU_WKB,
T.IWD_ASS_STU_TAX,
T.IWD_ASS_PAR_MS,
T.IWD_ASS_PAR_FAM_NO,
T.IWD_ASS_PAR_COL_NO,
T.IWD_ASS_PAR_AGI,
T.IWD_ASS_FTHR_INC,
T.IWD_ASS_MOM_INC,
T.IWD_ASS_PAR_EIC,
T.IWD_ASS_PAR_WKB,
T.IWD_ASS_PAR_TAXPD,
T.IWD_COMMENT_CDS,
T.IWD_SAR_ACK_COMCDS,
T.PELL_ELIGIBILITY,
T.CPS_REPROCESS_CD,
T.SFA_TRANS_TYPE,
T.ELEC_INSTITUT_IND,
T.MULTI_INSTITUTION,
T.DUPLICATE_DATE_O,
T.IWD_PROC_REC_TYPE,
T.PRISONER_MATCH,
T.IWD_PAR_XX_TAXSTAT,
T.IWD_STU_XX_TAXSTAT,
T.VERIFICATION_SELEC,
T.IWD_APP_SOURCE,
T.IWD_TRANS_SOURCE,
T.IWD_PAR_WK_C,
T.IWD_STD_EMAIL,
T.IWD_SOURCE_CORR,
T.IWD_EFC_CHNG_FLAG,
T.IWD_SEC_INS_MATCH,
T.IWD_SEC_INS_VNUM,
T.IWD_ASS_CHILDREN,
T.IWD_DUP_SSN_CD,
T.IWD_ASS_STU_WKC,
T.IWD_ASS_PAR_WKC,
T.IWD_ASS_FATHER_SSN,
T.IWD_ASS_MOTHER_SSN,
T.VERIF_TRK_FLG,
T.REJ_OVR_BIRTH_YEAR,
T.REJ_OVR_TAX_RANGE,
T.IWD_DATA_VERIFY,
T.ADDR_ONLY_CHNG_FLG,
T.ISIR_CPS_PUSHED,
T.ISIR_SAR_C_CHNG,
T.FATHER_SSN_MATCH,
T.MOTHER_SSN_MATCH,
T.MULTI_INSTITUTION1,
T.MULTI_INSTITUTION2,
T.MULTI_INSTITUTION3,
T.MULTI_INSTITUTION4,
T.MULTI_INSTITUTION5,
T.MULTI_INSTITUTION6,
T.ISIR_ETI,
T.REJ_OVR_TAXRNG_DEP,
T.SFA_REJ_OVR_TX_STU,
T.SFA_REJ_OVR_TX_PAR,
T.SFA_REJ_OVR_DADSSN,
T.SFA_REJ_OVR_MOMSSN,
T.SFA_REJ_ST_CHG_FLG,
T.SFA_VF_SEL_CHG_FLG,
T.SFA_REJ_OVR_MR_STU,
T.SFA_REJ_OVR_NO_TAX,
T.SFA_IW_SIGNREJ_EFC,
T.SFA_MULTI_INST7,
T.SFA_MULTI_INST8,
T.SFA_MULTI_INST9,
T.SFA_MULTI_INST10,
T.SFA_SPL_CIRCUM_FLG,
T.SFA_ASM_YTH_SCHOOL,
T.SFA_ASM_YTH_HUD,
T.SFA_ASM_RISK_HOME,
T.SFA_DOD_MATCH,
T.SFA_DOD_PARENT,
T.SFA_STU_IRS_REQUST,
T.SFA_PAR_IRS_REQUST,
T.SFA_HIGH_SCHL_FLAG,
T.SFA_REJ_OVR_MAR_ST,
T.SFA_STU_ASM_ASSET,
T.SFA_PAR_ASM_ASSET,
T.SFA_STU_IRS_AGI,
T.SFA_STU_IRS_FIT,
T.SFA_PAR_IRS_AGI,
T.SFA_PAR_IRS_FIT,
T.SFA_STU_IRS_DISP,
T.SFA_PAR_IRS_DISP,
T.LOAD_ERROR,
T.DATA_ORIGIN,
T.CREATED_EW_DTTM,
T.LASTUPD_EW_DTTM,
T.BATCH_SID
)
values (
S.ECTRANSID,
S.ECQUEUEINSTANCE,
S.ECTRANSINOUTSW,
S.ISIR_SEQ_NO,
'CS90',
S.ORIG_SSN,
S.NAME_CD,
S.IWD_TRANS_NBR,
S.IWD_EARLY_ANALYSIS,
S.IWD_ELEC_APP_SOURC,
S.IWD_APP_VERSION_NO,
S.IWD_ETI_DEST_CODE,
S.REJ_OVR_IND_STDNT,
S.REJ_OVR_STDNT_NAME,
S.REJ_OVR_BIG_FAMILY,
S.IWD_ASSUM_OVER_1,
S.IWD_ASSUM_OVER_2,
S.IWD_ASSUM_OVER_3,
S.IWD_ASSUM_OVER_4,
S.IWD_ASSUM_OVER_5,
S.IWD_ASSUM_OVER_6,
S.IWD_ASSUM_OVER_7,
S.IWD_APP_RECV_DT_O,
S.IWD_RECORD_TYPE,
S.IWD_HIST_CORR_APP,
S.SYSTEM_GENERATED,
S.DUPLICATE_REQUEST,
S.IWD_PAR_98_TAXSTAT,
S.IWD_STU_98_TAXSTAT,
S.IWD_GRAD_FLAG,
S.AUTO_ZERO_EFC,
S.SAR_C_FLAG,
S.IWD_SIMPLE_NEEDTST,
S.DEPNDNCY_STAT,
S.IWD_REJECT_CODES,
S.SS_MATCH,
S.SS_REGISTRATION,
S.INS_MATCH,
S.IWD_INS_VERIF_NUM,
S.SSN_MATCH,
S.SSA_CITIZENSHP_IND,
S.IWD_SSN_DT_DEATH_O,
S.NSLDS_MATCH,
S.VA_MATCH,
S.VERIFCATION_TYPE,
S.VERF_SELECTION_IND,
S.IWD_SUB_APP_FLAG,
S.APP_SOURCE_CODE,
S.APP_SOURCE_SITE,
S.TRANS_SOURCE_CD,
S.TRANS_SOURCE_SITE,
S.TRANS_PROCESS_DT,
S.IWD_COMP_BTCH_NBR,
S.IWD_CORRECTIONS,
S.IWD_HIGHLIGHT,
S.IWD_PAID_EFC,
S.IWD_PRIMARY_EFC,
S.IWD_SECONDARY_EFC,
S.PELL_PAID_EFC_TYPE,
S.FORMULA_TYPE,
S.FORMULA_TYPE_SEC,
S.PRM_ALT_MONTH_1,
S.PRM_ALT_MONTH_2,
S.PRM_ALT_MONTH_3,
S.PRM_ALT_MONTH_4,
S.PRM_ALT_MONTH_5,
S.PRM_ALT_MONTH_6,
S.PRM_ALT_MONTH_7,
S.PRM_ALT_MONTH_8,
S.PRM_ALT_MONTH_10,
S.PRM_ALT_MONTH_11,
S.PRM_ALT_MONTH_12,
S.SEC_ALT_MONTH_1,
S.SEC_ALT_MONTH_2,
S.SEC_ALT_MONTH_3,
S.SEC_ALT_MONTH_4,
S.SEC_ALT_MONTH_5,
S.SEC_ALT_MONTH_6,
S.SEC_ALT_MONTH_7,
S.SEC_ALT_MONTH_8,
S.SEC_ALT_MONTH_10,
S.SEC_ALT_MONTH_11,
S.SEC_ALT_MONTH_12,
S.TOTAL_INCOME_CH,
S.ALWNC_AGAINST_TICH,
S.STATE_TAX_ALWNC_CH,
S.EMPLOYMENT_ALWNCCH,
S.INC_PROTECTN_AL_CH,
S.AVAILABLE_INCOMECH,
S.CONTRIB_AVAIL_INCH,
S.DESCRTN_NETWRTHCH,
S.IWD_EFC_NET_WORTH,
S.AST_PROTECTN_ALWCH,
S.CONTRIB_FROM_ASSCH,
S.ADJ_AVAILABLEIN_CH,
S.TOTAL_STU_CONT_CH,
S.TOTAL_PAR_CONT_CH,
S.ADJ_PAR_CONTRIB_CH,
S.STU_TOTAL_INC_CH,
S.IWD_SATI,
S.DEP_STU_I_CONT_CH,
S.IWD_SDNW,
S.DEP_STU_A_CONRB_CH,
S.FISAP_TOT_INC_CH,
S.IWD_SEC_TI,
S.IWD_SEC_ATI,
S.IWD_SEC_STX,
S.IWD_SEC_EA,
S.IWD_SEC_IPA,
S.IWD_SEC_AI,
S.IWD_SEC_CAI,
S.IWD_SEC_DNW,
S.IWD_SEC_NW,
S.IWD_SEC_APA,
S.IWD_SEC_PCA,
S.IWD_SEC_AAI,
S.IWD_SEC_TSC,
S.IWD_SEC_TPC,
S.IWD_SEC_PC,
S.IWD_SEC_STI,
S.IWD_SEC_SATI,
S.IWD_SEC_SIC,
S.IWD_SEC_SDNW,
S.IWD_SEC_SCA,
S.IWD_SEC_FTI,
S.ASMD_CITIZENSHIP,
S.IWD_ASSUM_STU_MS,
S.IWD_ASSUMED_DOBPR,
S.IWD_STU_MARRIED,
S.IWD_ASSUMED_VA_ST,
S.IWD_ASSUMED_DEP,
S.IWD_ASSUMED_FAM_NO,
S.IWD_ASSUMED_COL_NO,
S.IWD_ASSUMED_AGI,
S.IWD_ASSUMED_IFW,
S.IWD_ASSUM_IFW_SPS,
S.IWD_ASS_STU_EIC,
S.IWD_ASS_STU_WKB,
S.IWD_ASS_STU_TAX,
S.IWD_ASS_PAR_MS,
S.IWD_ASS_PAR_FAM_NO,
S.IWD_ASS_PAR_COL_NO,
S.IWD_ASS_PAR_AGI,
S.IWD_ASS_FTHR_INC,
S.IWD_ASS_MOM_INC,
S.IWD_ASS_PAR_EIC,
S.IWD_ASS_PAR_WKB,
S.IWD_ASS_PAR_TAXPD,
S.IWD_COMMENT_CDS,
S.IWD_SAR_ACK_COMCDS,
S.PELL_ELIGIBILITY,
S.CPS_REPROCESS_CD,
S.SFA_TRANS_TYPE,
S.ELEC_INSTITUT_IND,
S.MULTI_INSTITUTION,
S.DUPLICATE_DATE_O,
S.IWD_PROC_REC_TYPE,
S.PRISONER_MATCH,
S.IWD_PAR_XX_TAXSTAT,
S.IWD_STU_XX_TAXSTAT,
S.VERIFICATION_SELEC,
S.IWD_APP_SOURCE,
S.IWD_TRANS_SOURCE,
S.IWD_PAR_WK_C,
S.IWD_STD_EMAIL,
S.IWD_SOURCE_CORR,
S.IWD_EFC_CHNG_FLAG,
S.IWD_SEC_INS_MATCH,
S.IWD_SEC_INS_VNUM,
S.IWD_ASS_CHILDREN,
S.IWD_DUP_SSN_CD,
S.IWD_ASS_STU_WKC,
S.IWD_ASS_PAR_WKC,
S.IWD_ASS_FATHER_SSN,
S.IWD_ASS_MOTHER_SSN,
S.VERIF_TRK_FLG,
S.REJ_OVR_BIRTH_YEAR,
S.REJ_OVR_TAX_RANGE,
S.IWD_DATA_VERIFY,
S.ADDR_ONLY_CHNG_FLG,
S.ISIR_CPS_PUSHED,
S.ISIR_SAR_C_CHNG,
S.FATHER_SSN_MATCH,
S.MOTHER_SSN_MATCH,
S.MULTI_INSTITUTION1,
S.MULTI_INSTITUTION2,
S.MULTI_INSTITUTION3,
S.MULTI_INSTITUTION4,
S.MULTI_INSTITUTION5,
S.MULTI_INSTITUTION6,
S.ISIR_ETI,
S.REJ_OVR_TAXRNG_DEP,
S.SFA_REJ_OVR_TX_STU,
S.SFA_REJ_OVR_TX_PAR,
S.SFA_REJ_OVR_DADSSN,
S.SFA_REJ_OVR_MOMSSN,
S.SFA_REJ_ST_CHG_FLG,
S.SFA_VF_SEL_CHG_FLG,
S.SFA_REJ_OVR_MR_STU,
S.SFA_REJ_OVR_NO_TAX,
S.SFA_IW_SIGNREJ_EFC,
S.SFA_MULTI_INST7,
S.SFA_MULTI_INST8,
S.SFA_MULTI_INST9,
S.SFA_MULTI_INST10,
S.SFA_SPL_CIRCUM_FLG,
S.SFA_ASM_YTH_SCHOOL,
S.SFA_ASM_YTH_HUD,
S.SFA_ASM_RISK_HOME,
S.SFA_DOD_MATCH,
S.SFA_DOD_PARENT,
S.SFA_STU_IRS_REQUST,
S.SFA_PAR_IRS_REQUST,
S.SFA_HIGH_SCHL_FLAG,
S.SFA_REJ_OVR_MAR_ST,
S.SFA_STU_ASM_ASSET,
S.SFA_PAR_ASM_ASSET,
S.SFA_STU_IRS_AGI,
S.SFA_STU_IRS_FIT,
S.SFA_PAR_IRS_AGI,
S.SFA_PAR_IRS_FIT,
S.SFA_STU_IRS_DISP,
S.SFA_PAR_IRS_DISP,
'N',
'S',
sysdate,
sysdate,
1234)
;


strSqlCommand   := 'SET intRowCount';
intRowCount     := SQL%ROWCOUNT;

strSqlCommand := 'commit';
commit;

strMessage01    := '# of PS_ISIR_00_2_EC rows merged: ' || TO_CHAR(intRowCount,'999,999,999,999');
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_DETAIL';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_DETAIL
        (
                i_TargetTableName   => 'PS_ISIR_00_2_EC',
                i_Action            => 'MERGE',
                i_RowCount          => intRowCount
        );


strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update TABLE_STATUS on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Deleting',
       OLD_MAX_SCN = NEW_MAX_SCN
 where TABLE_NAME = 'PS_ISIR_00_2_EC';

strSqlCommand := 'commit';
commit;


strMessage01    := 'Updating DATA_ORIGIN on CSSTG_OWNER.PS_ISIR_00_2_EC';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update DATA_ORIGIN on CSSTG_OWNER.PS_ISIR_00_2_EC';
update CSSTG_OWNER.PS_ISIR_00_2_EC T
        set T.DATA_ORIGIN = 'D',
               T.LASTUPD_EW_DTTM = SYSDATE
 where T.DATA_ORIGIN <> 'D'
   and exists 
(select 1 from
(select ECTRANSID, ECQUEUEINSTANCE, ECTRANSINOUTSW, ISIR_SEQ_NO
   from CSSTG_OWNER.PS_ISIR_00_2_EC T2
  where (select DELETE_FLG from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_ISIR_00_2_EC') = 'Y'
  minus
 select ECTRANSID, ECQUEUEINSTANCE, ECTRANSINOUTSW, ISIR_SEQ_NO
   from SYSADM.PS_ISIR_00_2_EC@SASOURCE S2
  where (select DELETE_FLG from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_ISIR_00_2_EC') = 'Y'
   ) S
 where T.ECTRANSID = S.ECTRANSID
   and T.ECQUEUEINSTANCE = S.ECQUEUEINSTANCE
   and T.ECTRANSINOUTSW = S.ECTRANSINOUTSW
   and T.ISIR_SEQ_NO = S.ISIR_SEQ_NO
   and T.SRC_SYS_ID = 'CS90' 
   ) 
;

strSqlCommand   := 'SET intRowCount';
intRowCount     := SQL%ROWCOUNT;

strSqlCommand := 'commit';
commit;

strMessage01    := '# of PS_ISIR_00_2_EC rows updated: ' || TO_CHAR(intRowCount,'999,999,999,999');
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_DETAIL';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_DETAIL
        (
                i_TargetTableName   => 'PS_ISIR_00_2_EC',
                i_Action            => 'UPDATE',
                i_RowCount          => intRowCount
        );


strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update END_DT on CSSTG_OWNER.UM_STAGE_JOBS';

update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Complete',
       END_DT = SYSDATE
 where TABLE_NAME = 'PS_ISIR_00_2_EC'
;

strSqlCommand := 'commit';
commit;


strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_SUCCESS';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_SUCCESS;

strMessage01    := strProcessName || ' is complete.';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);


EXCEPTION
    WHEN OTHERS THEN
        numSqlCode := SQLCODE;
        strSqlErrm := SQLERRM;

        ROLLBACK;
  
        strMessage01 := 'Error code: ' || TO_CHAR(SQLCODE) || ' Error Message: ' || SQLERRM;
        strMessage02 := TO_CHAR(SQLCODE);
  
        COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_FAILURE
                       (i_SqlCommand    => strSqlCommand,
                        i_ErrorText     => strMessage01,
                        i_ErrorCode     => strMessage02,
                        i_ErrorMessage  => strSqlErrm
                       );
               
        strMessage01 := 'Error...'
                        || strNewLine   || 'SQL Command:   ' || strSqlCommand
                        || strNewLine   || 'Error code:    ' || numSqlCode
                        || strNewLine   || 'Error Message: ' || strSqlErrm;

        COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);
        RAISE_APPLICATION_ERROR( -20001, strMessage01);

END PS_ISIR_00_2_EC_P;
/
