DROP PROCEDURE CSMRT_OWNER.PS_STDNT_RTN_TIV_P
/

--
-- PS_STDNT_RTN_TIV_P  (Procedure) 
--
CREATE OR REPLACE PROCEDURE CSMRT_OWNER."PS_STDNT_RTN_TIV_P" AUTHID CURRENT_USER IS

------------------------------------------------------------------------
-- George Adams
--
-- Loads stage table PS_STDNT_RTN_TIV from PeopleSoft table PS_STDNT_RTN_TIV.
--
-- V01  SMT-xxxx 04/04/2017,    Jim Doucette
--                              Converted from PS_STDNT_RTN_TIV.SQL
--
------------------------------------------------------------------------

        strMartId                       Varchar2(50)    := 'CSW';
        strProcessName                  Varchar2(100)   := 'PS_STDNT_RTN_TIV';
        intProcessSid                   Integer;
        dtProcessStart                  Date            := SYSDATE;
        strMessage01                    Varchar2(4000);
        strMessage02                    Varchar2(512);
        strMessage03                    Varchar2(512)   :='';
        strNewLine                      Varchar2(2)     := chr(13) || chr(10);
        strSqlCommand                   Varchar2(32767) :='';
        strSqlDynamic                   Varchar2(32767) :='';
        strClientInfo                   Varchar2(100);
        intRowCount                     Integer;
        intTotalRowCount                Integer         := 0;
        numSqlCode                      Number;
        strSqlErrm                      Varchar2(4000);
        intTries                        Integer;

BEGIN
strSqlCommand := 'DBMS_APPLICATION_INFO.SET_CLIENT_INFO';
DBMS_APPLICATION_INFO.SET_CLIENT_INFO (strProcessName);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_INIT';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_INIT
        (
                i_MartId                => strMartId,
                i_ProcessName           => strProcessName,
                i_ProcessStartTime      => dtProcessStart,
                o_ProcessSid            => intProcessSid
        );

strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);


strSqlCommand   := 'update START_DT on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Reading',
       START_DT = sysdate,
       END_DT = NULL
 where TABLE_NAME = 'PS_STDNT_RTN_TIV'
;

strSqlCommand := 'commit';
commit;


strSqlCommand   := 'update NEW_MAX_SCN on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Merging',
       NEW_MAX_SCN = (select /*+ full(S) */ max(ORA_ROWSCN) from SYSADM.PS_STDNT_RTN_TIV@SASOURCE S)
 where TABLE_NAME = 'PS_STDNT_RTN_TIV'
;

strSqlCommand := 'commit';
commit;


strMessage01    := 'Merging data into CSSTG_OWNER.PS_STDNT_RTN_TIV';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'merge into CSSTG_OWNER.PS_STDNT_RTN_TIV';
merge /*+ use_hash(S,T) */ into CSSTG_OWNER.PS_STDNT_RTN_TIV T
using (select /*+ full(S) */
nvl(trim(INSTITUTION),'-') INSTITUTION,
nvl(trim(AID_YEAR),'-') AID_YEAR,
nvl(trim(EMPLID),'-') EMPLID,
nvl(trim(STRM),'-') STRM,
nvl(trim(RTRN_TIV_PGM_TYPE),'-') RTRN_TIV_PGM_TYPE,
nvl(trim(RTRN_TIV_STATUS),'-') RTRN_TIV_STATUS,
to_date(to_char(RTRN_TIV_WSTAT_DT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') RTRN_TIV_WSTAT_DT,
nvl(trim(RTRN_TIV_PERIOD_TP),'-') RTRN_TIV_PERIOD_TP,
to_date(to_char(RTRN_TIV_FORM_DT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') RTRN_TIV_FORM_DT,
nvl(trim(SESSION_CODE),'-') SESSION_CODE,
nvl(STU_TOT_WK_1,0) STU_TOT_WK_1,
nvl(STU_TOT_WK_2,0) STU_TOT_WK_2,
nvl(STU_TOT_WK_3,0) STU_TOT_WK_3,
nvl(STU_TOT_WK_4,0) STU_TOT_WK_4,
nvl(STU_TOT_WK_5,0) STU_TOT_WK_5,
nvl(STU_TOT_WK_6,0) STU_TOT_WK_6,
nvl(STU_TOT_WK_7,0) STU_TOT_WK_7,
nvl(STU_TOT_WK_8,0) STU_TOT_WK_8,
nvl(STU_TOT_WK_9,0) STU_TOT_WK_9,
nvl(STU_TOT_WK_10,0) STU_TOT_WK_10,
nvl(STU_TOT_WK_7_GRANT,0) STU_TOT_WK_7_GRANT,
nvl(TOTAL_TIV_DISB,0) TOTAL_TIV_DISB,
nvl(TOTAL_TIV_DISB_ALL,0) TOTAL_TIV_DISB_ALL,
to_date(to_char(WITHDRAW_DATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') WITHDRAW_DATE,
to_date(to_char(PERIOD_START_DT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') PERIOD_START_DT,
to_date(to_char(PERIOD_END_DT,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') PERIOD_END_DT,
nvl(RTRN_TIV_COMP_DAYS,0) RTRN_TIV_COMP_DAYS,
nvl(RTRN_TIV_TOT_DAYS,0) RTRN_TIV_TOT_DAYS,
nvl(RTRN_TIV_HDAY_ADJ,0) RTRN_TIV_HDAY_ADJ,
nvl(RTRN_TIV_HDAY_ADJ2,0) RTRN_TIV_HDAY_ADJ2,
nvl(RTRN_TIV_COMP_HRS,0) RTRN_TIV_COMP_HRS,
nvl(RTRN_TIV_TOT_HRS,0) RTRN_TIV_TOT_HRS,
nvl(RTRN_TIV_SCHD_HRS,0) RTRN_TIV_SCHD_HRS,
nvl(RTRN_TIV_CAL_PCT1,0) RTRN_TIV_CAL_PCT1,
nvl(RTRN_TIV_CAL_PCT2,0) RTRN_TIV_CAL_PCT2,
nvl(RTRN_TIV_CAL_PCT3,0) RTRN_TIV_CAL_PCT3,
nvl(RTRN_TIV_CAL_PCT,0) RTRN_TIV_CAL_PCT,
nvl(RTRN_TIV_AID_EARN,0) RTRN_TIV_AID_EARN,
nvl(TOT_AMT_DISB_RTN,0) TOT_AMT_DISB_RTN,
nvl(TOT_TIV_AID_RTRN,0) TOT_TIV_AID_RTRN,
nvl(INST_CHRG_BOARD,0) INST_CHRG_BOARD,
nvl(INST_CHRG_OTHER,0) INST_CHRG_OTHER,
nvl(INST_CHRG_TUIT_FEE,0) INST_CHRG_TUIT_FEE,
nvl(TOT_INST_CHARGES,0) TOT_INST_CHARGES,
nvl(TIV_AID_UNEARN_PCT,0) TIV_AID_UNEARN_PCT,
nvl(TOT_INST_UNEARN,0) TOT_INST_UNEARN,
nvl(TOT_AMT_SCHL_OWE,0) TOT_AMT_SCHL_OWE,
nvl(SCHL_RTN_WK_1,0) SCHL_RTN_WK_1,
nvl(SCHL_RTN_WK_2,0) SCHL_RTN_WK_2,
nvl(SCHL_RTN_WK_3,0) SCHL_RTN_WK_3,
nvl(SCHL_RTN_WK_4,0) SCHL_RTN_WK_4,
nvl(SCHL_RTN_WK_5,0) SCHL_RTN_WK_5,
nvl(SCHL_RTN_WK_6,0) SCHL_RTN_WK_6,
nvl(SCHL_RTN_WK_7,0) SCHL_RTN_WK_7,
nvl(SCHL_RTN_WK_8,0) SCHL_RTN_WK_8,
nvl(SCHL_RTN_WK_9,0) SCHL_RTN_WK_9,
nvl(SCHL_RTN_WK_10,0) SCHL_RTN_WK_10,
nvl(STU_NO_RTN_GRANT,0) STU_NO_RTN_GRANT,
nvl(TOT_AMT_STU_OWE,0) TOT_AMT_STU_OWE,
nvl(STU_RTN_WK_1,0) STU_RTN_WK_1,
nvl(STU_RTN_WK_2,0) STU_RTN_WK_2,
nvl(STU_RTN_WK_3,0) STU_RTN_WK_3,
nvl(STU_RTN_WK_4,0) STU_RTN_WK_4,
nvl(STU_RTN_WK_5,0) STU_RTN_WK_5,
nvl(STU_RTN_WK_6,0) STU_RTN_WK_6,
nvl(STU_RTN_WK_7,0) STU_RTN_WK_7,
nvl(STU_RTN_WK_8,0) STU_RTN_WK_8,
nvl(STU_RTN_WK_9,0) STU_RTN_WK_9,
nvl(STU_RTN_WK_10,0) STU_RTN_WK_10,
nvl(STU_RTN_WK_5_PRO,0) STU_RTN_WK_5_PRO,
nvl(STU_RTN_WK_6_PRO,0) STU_RTN_WK_6_PRO,
nvl(STU_RTN_WK_7_PRO,0) STU_RTN_WK_7_PRO,
nvl(RTRN_TIV_DAYS_PAST,0) RTRN_TIV_DAYS_PAST,
nvl(trim(RTRN_TIV_UNOFFW),'-') RTRN_TIV_UNOFFW,
nvl(PROCESS_INSTANCE,0) PROCESS_INSTANCE,
to_date(to_char(RTRN_TIV_PROC_DTTM,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') RTRN_TIV_PROC_DTTM,
to_date(to_char(LAST_UPDATE_DTTM,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') LAST_UPDATE_DTTM,
nvl(trim(OPRID),'-') OPRID,
nvl(SFA_DSB_TOT_WK1,0) SFA_DSB_TOT_WK1,
nvl(SFA_DSB_TOT_WK2,0) SFA_DSB_TOT_WK2,
nvl(SFA_DSB_TOT_WK3,0) SFA_DSB_TOT_WK3,
nvl(SFA_DSB_TOT_WK4,0) SFA_DSB_TOT_WK4,
nvl(SFA_DSB_TOT_WK5,0) SFA_DSB_TOT_WK5,
nvl(SFA_DSB_TOT_WK6,0) SFA_DSB_TOT_WK6,
nvl(SFA_DSB_TOT_WK7,0) SFA_DSB_TOT_WK7,
nvl(SFA_DSB_TOT_WK8,0) SFA_DSB_TOT_WK8,
nvl(SFA_DSB_TOT_WK9,0) SFA_DSB_TOT_WK9,
nvl(SFA_DSB_TOT_WK10,0) SFA_DSB_TOT_WK10,
nvl(SFA_SUB_TOT_A,0) SFA_SUB_TOT_A,
nvl(SFA_SUB_TOT_B,0) SFA_SUB_TOT_B,
nvl(SFA_SUB_TOT_C,0) SFA_SUB_TOT_C,
nvl(SFA_SUB_TOT_D,0) SFA_SUB_TOT_D,
nvl(SFA_SUB_TOT_F,0) SFA_SUB_TOT_F,
nvl(SFA_SUB_TOT_P,0) SFA_SUB_TOT_P,
nvl(SFA_SUB_TOT_R,0) SFA_SUB_TOT_R,
nvl(SFA_SUB_TOT_S,0) SFA_SUB_TOT_S,
nvl(SFA_SUB_TOT_T,0) SFA_SUB_TOT_T,
nvl(SFA_SUB_TOT_U,0) SFA_SUB_TOT_U,
nvl(trim(SFA_HERA_FLG),'-') SFA_HERA_FLG,
nvl(trim(SFA_RTIV_CHD_OVRDE),'-') SFA_RTIV_CHD_OVRDE,
nvl(trim(SFA_RTIV_TDH_OVRD),'-') SFA_RTIV_TDH_OVRD,
nvl(trim(SFA_RTIV_PADJ_OVRD),'-') SFA_RTIV_PADJ_OVRD,
nvl(trim(SFA_RTIV_DAY_OVRDE),'-') SFA_RTIV_DAY_OVRDE,
nvl(STU_TOT_WK_11,0) STU_TOT_WK_11,
nvl(SFA_DSB_TOT_WK11,0) SFA_DSB_TOT_WK11,
nvl(SCHL_RTN_WK_11,0) SCHL_RTN_WK_11,
nvl(STU_RTN_WK_11,0) STU_RTN_WK_11
  from SYSADM.PS_STDNT_RTN_TIV@SASOURCE S
 where ORA_ROWSCN > (select OLD_MAX_SCN from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_STDNT_RTN_TIV')
   and EMPLID between '00000000' and '99999999'
   and length(EMPLID) = 8 ) S
   on (
T.INSTITUTION = S.INSTITUTION and
T.AID_YEAR = S.AID_YEAR and
T.EMPLID = S.EMPLID and
T.STRM = S.STRM and
T.RTRN_TIV_PGM_TYPE = S.RTRN_TIV_PGM_TYPE and
T.SRC_SYS_ID = 'CS90')
when matched then update set
T.RTRN_TIV_STATUS = S.RTRN_TIV_STATUS,
T.RTRN_TIV_WSTAT_DT = S.RTRN_TIV_WSTAT_DT,
T.RTRN_TIV_PERIOD_TP = S.RTRN_TIV_PERIOD_TP,
T.RTRN_TIV_FORM_DT = S.RTRN_TIV_FORM_DT,
T.SESSION_CODE = S.SESSION_CODE,
T.STU_TOT_WK_1 = S.STU_TOT_WK_1,
T.STU_TOT_WK_2 = S.STU_TOT_WK_2,
T.STU_TOT_WK_3 = S.STU_TOT_WK_3,
T.STU_TOT_WK_4 = S.STU_TOT_WK_4,
T.STU_TOT_WK_5 = S.STU_TOT_WK_5,
T.STU_TOT_WK_6 = S.STU_TOT_WK_6,
T.STU_TOT_WK_7 = S.STU_TOT_WK_7,
T.STU_TOT_WK_8 = S.STU_TOT_WK_8,
T.STU_TOT_WK_9 = S.STU_TOT_WK_9,
T.STU_TOT_WK_10 = S.STU_TOT_WK_10,
T.STU_TOT_WK_7_GRANT = S.STU_TOT_WK_7_GRANT,
T.TOTAL_TIV_DISB = S.TOTAL_TIV_DISB,
T.TOTAL_TIV_DISB_ALL = S.TOTAL_TIV_DISB_ALL,
T.WITHDRAW_DATE = S.WITHDRAW_DATE,
T.PERIOD_START_DT = S.PERIOD_START_DT,
T.PERIOD_END_DT = S.PERIOD_END_DT,
T.RTRN_TIV_COMP_DAYS = S.RTRN_TIV_COMP_DAYS,
T.RTRN_TIV_TOT_DAYS = S.RTRN_TIV_TOT_DAYS,
T.RTRN_TIV_HDAY_ADJ = S.RTRN_TIV_HDAY_ADJ,
T.RTRN_TIV_HDAY_ADJ2 = S.RTRN_TIV_HDAY_ADJ2,
T.RTRN_TIV_COMP_HRS = S.RTRN_TIV_COMP_HRS,
T.RTRN_TIV_TOT_HRS = S.RTRN_TIV_TOT_HRS,
T.RTRN_TIV_SCHD_HRS = S.RTRN_TIV_SCHD_HRS,
T.RTRN_TIV_CAL_PCT1 = S.RTRN_TIV_CAL_PCT1,
T.RTRN_TIV_CAL_PCT2 = S.RTRN_TIV_CAL_PCT2,
T.RTRN_TIV_CAL_PCT3 = S.RTRN_TIV_CAL_PCT3,
T.RTRN_TIV_CAL_PCT = S.RTRN_TIV_CAL_PCT,
T.RTRN_TIV_AID_EARN = S.RTRN_TIV_AID_EARN,
T.TOT_AMT_DISB_RTN = S.TOT_AMT_DISB_RTN,
T.TOT_TIV_AID_RTRN = S.TOT_TIV_AID_RTRN,
T.INST_CHRG_BOARD = S.INST_CHRG_BOARD,
T.INST_CHRG_OTHER = S.INST_CHRG_OTHER,
T.INST_CHRG_TUIT_FEE = S.INST_CHRG_TUIT_FEE,
T.TOT_INST_CHARGES = S.TOT_INST_CHARGES,
T.TIV_AID_UNEARN_PCT = S.TIV_AID_UNEARN_PCT,
T.TOT_INST_UNEARN = S.TOT_INST_UNEARN,
T.TOT_AMT_SCHL_OWE = S.TOT_AMT_SCHL_OWE,
T.SCHL_RTN_WK_1 = S.SCHL_RTN_WK_1,
T.SCHL_RTN_WK_2 = S.SCHL_RTN_WK_2,
T.SCHL_RTN_WK_3 = S.SCHL_RTN_WK_3,
T.SCHL_RTN_WK_4 = S.SCHL_RTN_WK_4,
T.SCHL_RTN_WK_5 = S.SCHL_RTN_WK_5,
T.SCHL_RTN_WK_6 = S.SCHL_RTN_WK_6,
T.SCHL_RTN_WK_7 = S.SCHL_RTN_WK_7,
T.SCHL_RTN_WK_8 = S.SCHL_RTN_WK_8,
T.SCHL_RTN_WK_9 = S.SCHL_RTN_WK_9,
T.SCHL_RTN_WK_10 = S.SCHL_RTN_WK_10,
T.STU_NO_RTN_GRANT = S.STU_NO_RTN_GRANT,
T.TOT_AMT_STU_OWE = S.TOT_AMT_STU_OWE,
T.STU_RTN_WK_1 = S.STU_RTN_WK_1,
T.STU_RTN_WK_2 = S.STU_RTN_WK_2,
T.STU_RTN_WK_3 = S.STU_RTN_WK_3,
T.STU_RTN_WK_4 = S.STU_RTN_WK_4,
T.STU_RTN_WK_5 = S.STU_RTN_WK_5,
T.STU_RTN_WK_6 = S.STU_RTN_WK_6,
T.STU_RTN_WK_7 = S.STU_RTN_WK_7,
T.STU_RTN_WK_8 = S.STU_RTN_WK_8,
T.STU_RTN_WK_9 = S.STU_RTN_WK_9,
T.STU_RTN_WK_10 = S.STU_RTN_WK_10,
T.STU_RTN_WK_5_PRO = S.STU_RTN_WK_5_PRO,
T.STU_RTN_WK_6_PRO = S.STU_RTN_WK_6_PRO,
T.STU_RTN_WK_7_PRO = S.STU_RTN_WK_7_PRO,
T.RTRN_TIV_DAYS_PAST = S.RTRN_TIV_DAYS_PAST,
T.RTRN_TIV_UNOFFW = S.RTRN_TIV_UNOFFW,
T.PROCESS_INSTANCE = S.PROCESS_INSTANCE,
T.RTRN_TIV_PROC_DTTM = S.RTRN_TIV_PROC_DTTM,
T.LAST_UPDATE_DTTM = S.LAST_UPDATE_DTTM,
T.OPRID = S.OPRID,
T.SFA_DSB_TOT_WK1 = S.SFA_DSB_TOT_WK1,
T.SFA_DSB_TOT_WK2 = S.SFA_DSB_TOT_WK2,
T.SFA_DSB_TOT_WK3 = S.SFA_DSB_TOT_WK3,
T.SFA_DSB_TOT_WK4 = S.SFA_DSB_TOT_WK4,
T.SFA_DSB_TOT_WK5 = S.SFA_DSB_TOT_WK5,
T.SFA_DSB_TOT_WK6 = S.SFA_DSB_TOT_WK6,
T.SFA_DSB_TOT_WK7 = S.SFA_DSB_TOT_WK7,
T.SFA_DSB_TOT_WK8 = S.SFA_DSB_TOT_WK8,
T.SFA_DSB_TOT_WK9 = S.SFA_DSB_TOT_WK9,
T.SFA_DSB_TOT_WK10 = S.SFA_DSB_TOT_WK10,
T.SFA_SUB_TOT_A = S.SFA_SUB_TOT_A,
T.SFA_SUB_TOT_B = S.SFA_SUB_TOT_B,
T.SFA_SUB_TOT_C = S.SFA_SUB_TOT_C,
T.SFA_SUB_TOT_D = S.SFA_SUB_TOT_D,
T.SFA_SUB_TOT_F = S.SFA_SUB_TOT_F,
T.SFA_SUB_TOT_P = S.SFA_SUB_TOT_P,
T.SFA_SUB_TOT_R = S.SFA_SUB_TOT_R,
T.SFA_SUB_TOT_S = S.SFA_SUB_TOT_S,
T.SFA_SUB_TOT_T = S.SFA_SUB_TOT_T,
T.SFA_SUB_TOT_U = S.SFA_SUB_TOT_U,
T.SFA_HERA_FLG = S.SFA_HERA_FLG,
T.SFA_RTIV_CHD_OVRDE = S.SFA_RTIV_CHD_OVRDE,
T.SFA_RTIV_TDH_OVRD = S.SFA_RTIV_TDH_OVRD,
T.SFA_RTIV_PADJ_OVRD = S.SFA_RTIV_PADJ_OVRD,
T.SFA_RTIV_DAY_OVRDE = S.SFA_RTIV_DAY_OVRDE,
T.STU_TOT_WK_11 = S.STU_TOT_WK_11,
T.SFA_DSB_TOT_WK11 = S.SFA_DSB_TOT_WK11,
T.SCHL_RTN_WK_11 = S.SCHL_RTN_WK_11,
T.STU_RTN_WK_11 = S.STU_RTN_WK_11,
T.DATA_ORIGIN = 'S',
T.LASTUPD_EW_DTTM = sysdate,
T.BATCH_SID   = 1234
where
T.RTRN_TIV_STATUS <> S.RTRN_TIV_STATUS or
T.RTRN_TIV_WSTAT_DT <> S.RTRN_TIV_WSTAT_DT or
T.RTRN_TIV_PERIOD_TP <> S.RTRN_TIV_PERIOD_TP or
nvl(trim(T.RTRN_TIV_FORM_DT),0) <> nvl(trim(S.RTRN_TIV_FORM_DT),0) or
T.SESSION_CODE <> S.SESSION_CODE or
T.STU_TOT_WK_1 <> S.STU_TOT_WK_1 or
T.STU_TOT_WK_2 <> S.STU_TOT_WK_2 or
T.STU_TOT_WK_3 <> S.STU_TOT_WK_3 or
T.STU_TOT_WK_4 <> S.STU_TOT_WK_4 or
T.STU_TOT_WK_5 <> S.STU_TOT_WK_5 or
T.STU_TOT_WK_6 <> S.STU_TOT_WK_6 or
T.STU_TOT_WK_7 <> S.STU_TOT_WK_7 or
T.STU_TOT_WK_8 <> S.STU_TOT_WK_8 or
T.STU_TOT_WK_9 <> S.STU_TOT_WK_9 or
T.STU_TOT_WK_10 <> S.STU_TOT_WK_10 or
T.STU_TOT_WK_7_GRANT <> S.STU_TOT_WK_7_GRANT or
T.TOTAL_TIV_DISB <> S.TOTAL_TIV_DISB or
T.TOTAL_TIV_DISB_ALL <> S.TOTAL_TIV_DISB_ALL or
nvl(trim(T.WITHDRAW_DATE),0) <> nvl(trim(S.WITHDRAW_DATE),0) or
T.PERIOD_START_DT <> S.PERIOD_START_DT or
T.PERIOD_END_DT <> S.PERIOD_END_DT or
T.RTRN_TIV_COMP_DAYS <> S.RTRN_TIV_COMP_DAYS or
T.RTRN_TIV_TOT_DAYS <> S.RTRN_TIV_TOT_DAYS or
T.RTRN_TIV_HDAY_ADJ <> S.RTRN_TIV_HDAY_ADJ or
T.RTRN_TIV_HDAY_ADJ2 <> S.RTRN_TIV_HDAY_ADJ2 or
T.RTRN_TIV_COMP_HRS <> S.RTRN_TIV_COMP_HRS or
T.RTRN_TIV_TOT_HRS <> S.RTRN_TIV_TOT_HRS or
T.RTRN_TIV_SCHD_HRS <> S.RTRN_TIV_SCHD_HRS or
T.RTRN_TIV_CAL_PCT1 <> S.RTRN_TIV_CAL_PCT1 or
T.RTRN_TIV_CAL_PCT2 <> S.RTRN_TIV_CAL_PCT2 or
T.RTRN_TIV_CAL_PCT3 <> S.RTRN_TIV_CAL_PCT3 or
T.RTRN_TIV_CAL_PCT <> S.RTRN_TIV_CAL_PCT or
T.RTRN_TIV_AID_EARN <> S.RTRN_TIV_AID_EARN or
T.TOT_AMT_DISB_RTN <> S.TOT_AMT_DISB_RTN or
T.TOT_TIV_AID_RTRN <> S.TOT_TIV_AID_RTRN or
T.INST_CHRG_BOARD <> S.INST_CHRG_BOARD or
T.INST_CHRG_OTHER <> S.INST_CHRG_OTHER or
T.INST_CHRG_TUIT_FEE <> S.INST_CHRG_TUIT_FEE or
T.TOT_INST_CHARGES <> S.TOT_INST_CHARGES or
T.TIV_AID_UNEARN_PCT <> S.TIV_AID_UNEARN_PCT or
T.TOT_INST_UNEARN <> S.TOT_INST_UNEARN or
T.TOT_AMT_SCHL_OWE <> S.TOT_AMT_SCHL_OWE or
T.SCHL_RTN_WK_1 <> S.SCHL_RTN_WK_1 or
T.SCHL_RTN_WK_2 <> S.SCHL_RTN_WK_2 or
T.SCHL_RTN_WK_3 <> S.SCHL_RTN_WK_3 or
T.SCHL_RTN_WK_4 <> S.SCHL_RTN_WK_4 or
T.SCHL_RTN_WK_5 <> S.SCHL_RTN_WK_5 or
T.SCHL_RTN_WK_6 <> S.SCHL_RTN_WK_6 or
T.SCHL_RTN_WK_7 <> S.SCHL_RTN_WK_7 or
T.SCHL_RTN_WK_8 <> S.SCHL_RTN_WK_8 or
T.SCHL_RTN_WK_9 <> S.SCHL_RTN_WK_9 or
T.SCHL_RTN_WK_10 <> S.SCHL_RTN_WK_10 or
T.STU_NO_RTN_GRANT <> S.STU_NO_RTN_GRANT or
T.TOT_AMT_STU_OWE <> S.TOT_AMT_STU_OWE or
T.STU_RTN_WK_1 <> S.STU_RTN_WK_1 or
T.STU_RTN_WK_2 <> S.STU_RTN_WK_2 or
T.STU_RTN_WK_3 <> S.STU_RTN_WK_3 or
T.STU_RTN_WK_4 <> S.STU_RTN_WK_4 or
T.STU_RTN_WK_5 <> S.STU_RTN_WK_5 or
T.STU_RTN_WK_6 <> S.STU_RTN_WK_6 or
T.STU_RTN_WK_7 <> S.STU_RTN_WK_7 or
T.STU_RTN_WK_8 <> S.STU_RTN_WK_8 or
T.STU_RTN_WK_9 <> S.STU_RTN_WK_9 or
T.STU_RTN_WK_10 <> S.STU_RTN_WK_10 or
T.STU_RTN_WK_5_PRO <> S.STU_RTN_WK_5_PRO or
T.STU_RTN_WK_6_PRO <> S.STU_RTN_WK_6_PRO or
T.STU_RTN_WK_7_PRO <> S.STU_RTN_WK_7_PRO or
T.RTRN_TIV_DAYS_PAST <> S.RTRN_TIV_DAYS_PAST or
T.RTRN_TIV_UNOFFW <> S.RTRN_TIV_UNOFFW or
T.PROCESS_INSTANCE <> S.PROCESS_INSTANCE or
nvl(trim(T.RTRN_TIV_PROC_DTTM),0) <> nvl(trim(S.RTRN_TIV_PROC_DTTM),0) or
nvl(trim(T.LAST_UPDATE_DTTM),0) <> nvl(trim(S.LAST_UPDATE_DTTM),0) or
T.OPRID <> S.OPRID or
T.SFA_DSB_TOT_WK1 <> S.SFA_DSB_TOT_WK1 or
T.SFA_DSB_TOT_WK2 <> S.SFA_DSB_TOT_WK2 or
T.SFA_DSB_TOT_WK3 <> S.SFA_DSB_TOT_WK3 or
T.SFA_DSB_TOT_WK4 <> S.SFA_DSB_TOT_WK4 or
T.SFA_DSB_TOT_WK5 <> S.SFA_DSB_TOT_WK5 or
T.SFA_DSB_TOT_WK6 <> S.SFA_DSB_TOT_WK6 or
T.SFA_DSB_TOT_WK7 <> S.SFA_DSB_TOT_WK7 or
T.SFA_DSB_TOT_WK8 <> S.SFA_DSB_TOT_WK8 or
T.SFA_DSB_TOT_WK9 <> S.SFA_DSB_TOT_WK9 or
T.SFA_DSB_TOT_WK10 <> S.SFA_DSB_TOT_WK10 or
T.SFA_SUB_TOT_A <> S.SFA_SUB_TOT_A or
T.SFA_SUB_TOT_B <> S.SFA_SUB_TOT_B or
T.SFA_SUB_TOT_C <> S.SFA_SUB_TOT_C or
T.SFA_SUB_TOT_D <> S.SFA_SUB_TOT_D or
T.SFA_SUB_TOT_F <> S.SFA_SUB_TOT_F or
T.SFA_SUB_TOT_P <> S.SFA_SUB_TOT_P or
T.SFA_SUB_TOT_R <> S.SFA_SUB_TOT_R or
T.SFA_SUB_TOT_S <> S.SFA_SUB_TOT_S or
T.SFA_SUB_TOT_T <> S.SFA_SUB_TOT_T or
T.SFA_SUB_TOT_U <> S.SFA_SUB_TOT_U or
T.SFA_HERA_FLG <> S.SFA_HERA_FLG or
T.SFA_RTIV_CHD_OVRDE <> S.SFA_RTIV_CHD_OVRDE or
T.SFA_RTIV_TDH_OVRD <> S.SFA_RTIV_TDH_OVRD or
T.SFA_RTIV_PADJ_OVRD <> S.SFA_RTIV_PADJ_OVRD or
T.SFA_RTIV_DAY_OVRDE <> S.SFA_RTIV_DAY_OVRDE or
T.STU_TOT_WK_11 <> S.STU_TOT_WK_11 or
T.SFA_DSB_TOT_WK11 <> S.SFA_DSB_TOT_WK11 or
T.SCHL_RTN_WK_11 <> S.SCHL_RTN_WK_11 or
T.STU_RTN_WK_11 <> S.STU_RTN_WK_11 or
T.DATA_ORIGIN = 'D'
when not matched then
insert (
T.INSTITUTION,
T.AID_YEAR,
T.EMPLID,
T.STRM,
T.RTRN_TIV_PGM_TYPE,
T.SRC_SYS_ID,
T.RTRN_TIV_STATUS,
T.RTRN_TIV_WSTAT_DT,
T.RTRN_TIV_PERIOD_TP,
T.RTRN_TIV_FORM_DT,
T.SESSION_CODE,
T.STU_TOT_WK_1,
T.STU_TOT_WK_2,
T.STU_TOT_WK_3,
T.STU_TOT_WK_4,
T.STU_TOT_WK_5,
T.STU_TOT_WK_6,
T.STU_TOT_WK_7,
T.STU_TOT_WK_8,
T.STU_TOT_WK_9,
T.STU_TOT_WK_10,
T.STU_TOT_WK_7_GRANT,
T.TOTAL_TIV_DISB,
T.TOTAL_TIV_DISB_ALL,
T.WITHDRAW_DATE,
T.PERIOD_START_DT,
T.PERIOD_END_DT,
T.RTRN_TIV_COMP_DAYS,
T.RTRN_TIV_TOT_DAYS,
T.RTRN_TIV_HDAY_ADJ,
T.RTRN_TIV_HDAY_ADJ2,
T.RTRN_TIV_COMP_HRS,
T.RTRN_TIV_TOT_HRS,
T.RTRN_TIV_SCHD_HRS,
T.RTRN_TIV_CAL_PCT1,
T.RTRN_TIV_CAL_PCT2,
T.RTRN_TIV_CAL_PCT3,
T.RTRN_TIV_CAL_PCT,
T.RTRN_TIV_AID_EARN,
T.TOT_AMT_DISB_RTN,
T.TOT_TIV_AID_RTRN,
T.INST_CHRG_BOARD,
T.INST_CHRG_OTHER,
T.INST_CHRG_TUIT_FEE,
T.TOT_INST_CHARGES,
T.TIV_AID_UNEARN_PCT,
T.TOT_INST_UNEARN,
T.TOT_AMT_SCHL_OWE,
T.SCHL_RTN_WK_1,
T.SCHL_RTN_WK_2,
T.SCHL_RTN_WK_3,
T.SCHL_RTN_WK_4,
T.SCHL_RTN_WK_5,
T.SCHL_RTN_WK_6,
T.SCHL_RTN_WK_7,
T.SCHL_RTN_WK_8,
T.SCHL_RTN_WK_9,
T.SCHL_RTN_WK_10,
T.STU_NO_RTN_GRANT,
T.TOT_AMT_STU_OWE,
T.STU_RTN_WK_1,
T.STU_RTN_WK_2,
T.STU_RTN_WK_3,
T.STU_RTN_WK_4,
T.STU_RTN_WK_5,
T.STU_RTN_WK_6,
T.STU_RTN_WK_7,
T.STU_RTN_WK_8,
T.STU_RTN_WK_9,
T.STU_RTN_WK_10,
T.STU_RTN_WK_5_PRO,
T.STU_RTN_WK_6_PRO,
T.STU_RTN_WK_7_PRO,
T.RTRN_TIV_DAYS_PAST,
T.RTRN_TIV_UNOFFW,
T.PROCESS_INSTANCE,
T.RTRN_TIV_PROC_DTTM,
T.LAST_UPDATE_DTTM,
T.OPRID,
T.SFA_DSB_TOT_WK1,
T.SFA_DSB_TOT_WK2,
T.SFA_DSB_TOT_WK3,
T.SFA_DSB_TOT_WK4,
T.SFA_DSB_TOT_WK5,
T.SFA_DSB_TOT_WK6,
T.SFA_DSB_TOT_WK7,
T.SFA_DSB_TOT_WK8,
T.SFA_DSB_TOT_WK9,
T.SFA_DSB_TOT_WK10,
T.SFA_SUB_TOT_A,
T.SFA_SUB_TOT_B,
T.SFA_SUB_TOT_C,
T.SFA_SUB_TOT_D,
T.SFA_SUB_TOT_F,
T.SFA_SUB_TOT_P,
T.SFA_SUB_TOT_R,
T.SFA_SUB_TOT_S,
T.SFA_SUB_TOT_T,
T.SFA_SUB_TOT_U,
T.SFA_HERA_FLG,
T.SFA_RTIV_CHD_OVRDE,
T.SFA_RTIV_TDH_OVRD,
T.SFA_RTIV_PADJ_OVRD,
T.SFA_RTIV_DAY_OVRDE,
T.STU_TOT_WK_11,
T.SFA_DSB_TOT_WK11,
T.SCHL_RTN_WK_11,
T.STU_RTN_WK_11,
T.LOAD_ERROR,
T.DATA_ORIGIN,
T.CREATED_EW_DTTM,
T.LASTUPD_EW_DTTM,
T.BATCH_SID
)
values (
S.INSTITUTION,
S.AID_YEAR,
S.EMPLID,
S.STRM,
S.RTRN_TIV_PGM_TYPE,
'CS90',
S.RTRN_TIV_STATUS,
S.RTRN_TIV_WSTAT_DT,
S.RTRN_TIV_PERIOD_TP,
S.RTRN_TIV_FORM_DT,
S.SESSION_CODE,
S.STU_TOT_WK_1,
S.STU_TOT_WK_2,
S.STU_TOT_WK_3,
S.STU_TOT_WK_4,
S.STU_TOT_WK_5,
S.STU_TOT_WK_6,
S.STU_TOT_WK_7,
S.STU_TOT_WK_8,
S.STU_TOT_WK_9,
S.STU_TOT_WK_10,
S.STU_TOT_WK_7_GRANT,
S.TOTAL_TIV_DISB,
S.TOTAL_TIV_DISB_ALL,
S.WITHDRAW_DATE,
S.PERIOD_START_DT,
S.PERIOD_END_DT,
S.RTRN_TIV_COMP_DAYS,
S.RTRN_TIV_TOT_DAYS,
S.RTRN_TIV_HDAY_ADJ,
S.RTRN_TIV_HDAY_ADJ2,
S.RTRN_TIV_COMP_HRS,
S.RTRN_TIV_TOT_HRS,
S.RTRN_TIV_SCHD_HRS,
S.RTRN_TIV_CAL_PCT1,
S.RTRN_TIV_CAL_PCT2,
S.RTRN_TIV_CAL_PCT3,
S.RTRN_TIV_CAL_PCT,
S.RTRN_TIV_AID_EARN,
S.TOT_AMT_DISB_RTN,
S.TOT_TIV_AID_RTRN,
S.INST_CHRG_BOARD,
S.INST_CHRG_OTHER,
S.INST_CHRG_TUIT_FEE,
S.TOT_INST_CHARGES,
S.TIV_AID_UNEARN_PCT,
S.TOT_INST_UNEARN,
S.TOT_AMT_SCHL_OWE,
S.SCHL_RTN_WK_1,
S.SCHL_RTN_WK_2,
S.SCHL_RTN_WK_3,
S.SCHL_RTN_WK_4,
S.SCHL_RTN_WK_5,
S.SCHL_RTN_WK_6,
S.SCHL_RTN_WK_7,
S.SCHL_RTN_WK_8,
S.SCHL_RTN_WK_9,
S.SCHL_RTN_WK_10,
S.STU_NO_RTN_GRANT,
S.TOT_AMT_STU_OWE,
S.STU_RTN_WK_1,
S.STU_RTN_WK_2,
S.STU_RTN_WK_3,
S.STU_RTN_WK_4,
S.STU_RTN_WK_5,
S.STU_RTN_WK_6,
S.STU_RTN_WK_7,
S.STU_RTN_WK_8,
S.STU_RTN_WK_9,
S.STU_RTN_WK_10,
S.STU_RTN_WK_5_PRO,
S.STU_RTN_WK_6_PRO,
S.STU_RTN_WK_7_PRO,
S.RTRN_TIV_DAYS_PAST,
S.RTRN_TIV_UNOFFW,
S.PROCESS_INSTANCE,
S.RTRN_TIV_PROC_DTTM,
S.LAST_UPDATE_DTTM,
S.OPRID,
S.SFA_DSB_TOT_WK1,
S.SFA_DSB_TOT_WK2,
S.SFA_DSB_TOT_WK3,
S.SFA_DSB_TOT_WK4,
S.SFA_DSB_TOT_WK5,
S.SFA_DSB_TOT_WK6,
S.SFA_DSB_TOT_WK7,
S.SFA_DSB_TOT_WK8,
S.SFA_DSB_TOT_WK9,
S.SFA_DSB_TOT_WK10,
S.SFA_SUB_TOT_A,
S.SFA_SUB_TOT_B,
S.SFA_SUB_TOT_C,
S.SFA_SUB_TOT_D,
S.SFA_SUB_TOT_F,
S.SFA_SUB_TOT_P,
S.SFA_SUB_TOT_R,
S.SFA_SUB_TOT_S,
S.SFA_SUB_TOT_T,
S.SFA_SUB_TOT_U,
S.SFA_HERA_FLG,
S.SFA_RTIV_CHD_OVRDE,
S.SFA_RTIV_TDH_OVRD,
S.SFA_RTIV_PADJ_OVRD,
S.SFA_RTIV_DAY_OVRDE,
S.STU_TOT_WK_11,
S.SFA_DSB_TOT_WK11,
S.SCHL_RTN_WK_11,
S.STU_RTN_WK_11,
'N',
'S',
sysdate,
sysdate,
1234);


strSqlCommand   := 'SET intRowCount';
intRowCount     := SQL%ROWCOUNT;

strSqlCommand := 'commit';
commit;

strMessage01    := '# of PS_STDNT_RTN_TIV rows merged: ' || TO_CHAR(intRowCount,'999,999,999,999');
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_DETAIL';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_DETAIL
        (
                i_TargetTableName   => 'PS_STDNT_RTN_TIV',
                i_Action            => 'MERGE',
                i_RowCount          => intRowCount
        );


strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update TABLE_STATUS on CSSTG_OWNER.UM_STAGE_JOBS';
update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Deleting',
       OLD_MAX_SCN = NEW_MAX_SCN
 where TABLE_NAME = 'PS_STDNT_RTN_TIV';

strSqlCommand := 'commit';
commit;


strMessage01    := 'Updating DATA_ORIGIN on CSSTG_OWNER.PS_STDNT_RTN_TIV';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update DATA_ORIGIN on CSSTG_OWNER.PS_STDNT_RTN_TIV';
update CSSTG_OWNER.PS_STDNT_RTN_TIV T
   set T.DATA_ORIGIN = 'D',
       T.LASTUPD_EW_DTTM = SYSDATE
 where T.DATA_ORIGIN <> 'D'
   and exists 
(select 1 from
(select INSTITUTION, AID_YEAR, EMPLID, STRM, RTRN_TIV_PGM_TYPE
   from CSSTG_OWNER.PS_STDNT_RTN_TIV T2
  where (select DELETE_FLG from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_STDNT_RTN_TIV') = 'Y'
  minus
 select INSTITUTION, AID_YEAR, EMPLID, STRM, RTRN_TIV_PGM_TYPE
   from SYSADM.PS_STDNT_RTN_TIV@SASOURCE S2
  where (select DELETE_FLG from CSSTG_OWNER.UM_STAGE_JOBS where TABLE_NAME = 'PS_STDNT_RTN_TIV') = 'Y'
   ) S
 where T.INSTITUTION = S.INSTITUTION
   and T.AID_YEAR = S.AID_YEAR
   and T.EMPLID = S.EMPLID
   and T.STRM = S.STRM
   and T.RTRN_TIV_PGM_TYPE = S.RTRN_TIV_PGM_TYPE
   and T.SRC_SYS_ID = 'CS90' 
   ) 
;

strSqlCommand   := 'SET intRowCount';
intRowCount     := SQL%ROWCOUNT;

strSqlCommand := 'commit';
commit;

strMessage01    := '# of PS_STDNT_RTN_TIV rows updated: ' || TO_CHAR(intRowCount,'999,999,999,999');
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_DETAIL';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_DETAIL
        (
                i_TargetTableName   => 'PS_STDNT_RTN_TIV',
                i_Action            => 'UPDATE',
                i_RowCount          => intRowCount
        );


strMessage01    := 'Updating CSSTG_OWNER.UM_STAGE_JOBS';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'update END_DT on CSSTG_OWNER.UM_STAGE_JOBS';

update CSSTG_OWNER.UM_STAGE_JOBS
   set TABLE_STATUS = 'Complete',
       END_DT = SYSDATE
 where TABLE_NAME = 'PS_STDNT_RTN_TIV'
;

strSqlCommand := 'commit';
commit;


strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_SUCCESS';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_SUCCESS;

strMessage01    := strProcessName || ' is complete.';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);


EXCEPTION
    WHEN OTHERS THEN
        numSqlCode := SQLCODE;
        strSqlErrm := SQLERRM;

        ROLLBACK;
  
        strMessage01 := 'Error code: ' || TO_CHAR(SQLCODE) || ' Error Message: ' || SQLERRM;
        strMessage02 := TO_CHAR(SQLCODE);
  
        COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_FAILURE
                       (i_SqlCommand    => strSqlCommand,
                        i_ErrorText     => strMessage01,
                        i_ErrorCode     => strMessage02,
                        i_ErrorMessage  => strSqlErrm
                       );
               
        strMessage01 := 'Error...'
                        || strNewLine   || 'SQL Command:   ' || strSqlCommand
                        || strNewLine   || 'Error code:    ' || numSqlCode
                        || strNewLine   || 'Error Message: ' || strSqlErrm;

        COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);
        RAISE_APPLICATION_ERROR( -20001, strMessage01);

END PS_STDNT_RTN_TIV_P;
/
