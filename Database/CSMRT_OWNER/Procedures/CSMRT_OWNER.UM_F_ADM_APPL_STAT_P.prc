CREATE OR REPLACE PROCEDURE             "UM_F_ADM_APPL_STAT_P" AUTHID CURRENT_USER IS

------------------------------------------------------------------------
--George Adams
--Loads table                -- UM_F_ADM_APPL_STAT
--V01 12/12/2018             -- srikanth ,pabbu converted to proc from sql scripts

------------------------------------------------------------------------

        strMartId                       Varchar2(50)    := 'CSW';
        strProcessName                  Varchar2(100)   := 'UM_F_ADM_APPL_STAT';
        intProcessSid                   Integer;
        dtProcessStart                  Date            := SYSDATE;
        strMessage01                    Varchar2(4000);
        strMessage02                    Varchar2(512);
        strMessage03                    Varchar2(512)   :='';
        strNewLine                      Varchar2(2)     := chr(13) || chr(10);
        strSqlCommand                   Varchar2(32767) :='';
        strSqlDynamic                   Varchar2(32767) :='';
        strClientInfo                   Varchar2(100);
        intRowCount                     Integer;
        intTotalRowCount                Integer         := 0;
        numSqlCode                      Number;
        strSqlErrm                      Varchar2(4000);
        intTries                        Integer;

BEGIN
strSqlCommand := 'DBMS_APPLICATION_INFO.SET_CLIENT_INFO';
DBMS_APPLICATION_INFO.SET_CLIENT_INFO (strProcessName);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_INIT';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_INIT
        (
                i_MartId                => strMartId,
                i_ProcessName           => strProcessName,
                i_ProcessStartTime      => dtProcessStart,
                o_ProcessSid            => intProcessSid
        );

strMessage01    := 'Disabling Indexes for table CSMRT_OWNER.UM_F_ADM_APPL_STAT';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);
COMMON_OWNER.SMT_INDEX.ALL_UNUSABLE('CSMRT_OWNER','UM_F_ADM_APPL_STAT');

strSqlDynamic   := 'alter table CSMRT_OWNER.UM_F_ADM_APPL_STAT disable constraint PK_UM_F_ADM_APPL_STAT';
strSqlCommand   := 'SMT_UTILITY.EXECUTE_IMMEDIATE: ' || strSqlDynamic;
COMMON_OWNER.SMT_UTILITY.EXECUTE_IMMEDIATE
                (
                i_SqlStatement          => strSqlDynamic,
                i_MaxTries              => 10,
                i_WaitSeconds           => 10,
                o_Tries                 => intTries
                );
				
strMessage01    := 'Truncating table CSMRT_OWNER.UM_F_ADM_APPL_STAT';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlDynamic   := 'truncate table CSMRT_OWNER.UM_F_ADM_APPL_STAT';
strSqlCommand   := 'SMT_UTILITY.EXECUTE_IMMEDIATE: ' || strSqlDynamic;
COMMON_OWNER.SMT_UTILITY.EXECUTE_IMMEDIATE
                (
                i_SqlStatement          => strSqlDynamic,
                i_MaxTries              => 10,
                i_WaitSeconds           => 10,
                o_Tries                 => intTries
                );

strMessage01    := 'Inserting data into CSMRT_OWNER.UM_F_ADM_APPL_STAT';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand   := 'insert into CSMRT_OWNER.UM_F_ADM_APPL_STAT';				
insert into UM_F_ADM_APPL_STAT  
with 
SRVC as (select /*+ PARALLEL(16) INLINE */ 
                INSTITUTION_SID, PERSON_SID, min(PERSON_SID) MIN_PERSON_SID    -- Mar 2019 
           from UM_D_PERSON_SRVC_IND
          where DATA_ORIGIN <> 'D'
          group by INSTITUTION_SID, PERSON_SID),
F1 as (
select /*+ PARALLEL(16) INLINE */   
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT, 
to_number(to_char(F.EFFDT,'YYYYMMDD')) EFFDT_SID,     -- July 2018 
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,      -- Oct 2017 
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,     -- Oct 2017 
T.TERM_CD,
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID,
F.ACAD_PROG2_SID ACAD_PROG_UM2_SID, 
F.ACAD_PLAN2_SID ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN2_SID ACAD_SPLAN_UM2_SID, 
nvl((select min(ACAD_SPLAN_SID)
       from PS_F_ADM_APPL_STAT F2 
      where F.ACAD_CAR_CD = F2.ACAD_CAR_CD
        and F.STU_CAR_NBR = F2.STU_CAR_NBR
        and F.PERSON_ID = F2.PERSON_ID
        and F.ADM_APPL_NBR = F2.ADM_APPL_NBR
        and F.APPL_PROG_NBR = F2.APPL_PROG_NBR
        and F.ACAD_PLAN_CD = F2.ACAD_PLAN_CD
--        and F.ACAD_SPLAN_CD = F2.ACAD_SPLAN_CD    -- Sept 2019 
        and F.EFFDT = F2.EFFDT
        and F.EFFSEQ = F2.EFFSEQ
        and F.SRC_SYS_ID = F2.SRC_SYS_ID
        and F.ACAD_SPLAN_SID <> F2.ACAD_SPLAN_SID),2147483646) ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
nvl((select min(A.PERSON_SID) from UM_D_PERSON_ATHL A where A.PERSON_SID = F.APPLCNT_SID and substr(A.SPORT,1,1) = substr(F.INSTITUTION_CD,3,1) and A.DATA_ORIGIN <> 'D'),2147483646) PERSON_ATHL_SID,
--nvl((select min(S.PERSON_SID) from UM_D_PERSON_SRVC_IND S where S.PERSON_SID = F.APPLCNT_SID and S.INSTITUTION_CD = F.INSTITUTION_CD and S.DATA_ORIGIN <> 'D'),2147483646) PERSON_SRVC_IND_SID_OLD,
nvl(SRVC.MIN_PERSON_SID, 2147483646) PERSON_SRVC_IND_SID,    -- Mar 2019  
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID, 
F.ACTION_DT, 
to_number(to_char(F.ACTION_DT,'YYYYMMDD')) ACTION_DT_SID,     -- July 2018 
F.APPL_CMPLTN_FLG, 
F.APPL_CMPLTN_DT,  
to_number(to_char(F.APPL_CMPLTN_DT,'YYYYMMDD')) APPL_CMPLTN_DT_SID,     -- July 2018 
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
F.APPL_CNTR_SID, 
F.APPL_CREATE_DT,  
to_number(to_char(F.APPL_CREATE_DT,'YYYYMMDD')) APPL_CREATE_DT_SID,     -- July 2018 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT,  
to_number(to_char(F.APPL_UPDATE_DT,'YYYYMMDD')) APPL_UPDATE_DT_SID,     -- July 2018 
F.APPL_UPDATED_BY, 
F.APPL_DT,  
to_number(to_char(F.APPL_DT,'YYYYMMDD')) APPL_DT_SID,     -- July 2018 
F.APPL_MTHD_SID, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT,
case when  nvl(ISIR.PELL_ELIGIBILITY,'-') = 'Y' then 'Y' else 'N' end FA_PELL_ELIGIBILITY, --Nov 2021
case when  ISIR.ISIR_CNT = 1  then 'Y'  else 'N' end APPLIED_FLAG, --Nov 2021
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.LST_SCHL_ATTND_SID, 
F.LST_SCHL_GRDDT,  
to_number(to_char(F.LST_SCHL_GRDDT,'YYYYMMDD')) LST_SCHL_GRDDT_SID,     -- July 2018 
F.NOTIFICATION_PLAN, 
T.TERM_BEGIN_DT,        -- Apr 2018 
T.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
decode(F.UM_BHE_TRANS_CR,0,NULL,F.UM_BHE_TRANS_CR) UM_BHE_TRANS_CR,        -- Jan 2017 
decode(F.UM_BHE_TRANS_GPA,0,NULL,F.UM_BHE_TRANS_GPA) UM_BHE_TRANS_GPA,        -- Jan 2017 
substr(F.UM_CA_FIRST_GEN,1,1) UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR, 
F.EVAL_STAT_SID, 
F.EVALUATN_DT, 
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
nvl((to_number(to_char(E.ENRL_DT,'YYYYMMDD'))),0) ENROLL_DT_SID,           -- Convert to date???  
(case when nvl(E.CLASS_ENRL_CNT_SUM,0) > 0 then 1 
      when nvl(E.CLASS_ENRL_CNT_SUM,0) < 0 then -1 else 0 end) ENROLL_CNT,
nvl(E.TAKEN_UNIT_SUM,0) CREDIT_SUM,
ROW_NUMBER() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.APPL_PROG_NBR, F.ACAD_PROG_SID, F.ACAD_PLAN_SID, F.ACAD_SPLAN_SID, F.EFFDT, F.EFFSEQ, F.SRC_SYS_ID  
                       ORDER BY E.ENRL_DT desc, E.ENRL_FIRST_ORDER desc) ENROLL_ORDER       -- July 2018 
from PS_F_ADM_APPL_STAT F  
join PS_D_TERM T
  on ADMIT_TERM_SID = T.TERM_SID
join PS_D_PERSON P
  on F.APPLCNT_SID = P.PERSON_SID
 and upper(P.PERSON_NM) not like 'X%DUP%'
 and upper(P.PERSON_NM) not like 'XX%' 
 and upper(P.PERSON_NM) not like '%XXX%' 
  and P.DATA_ORIGIN <> 'D'
 left outer join CSMRT_OWNER.UM_F_FA_STDNT_AID_ISIR ISIR    -- Apr 2018 
   on F.INSTITUTION_CD = ISIR.INSTITUTION_CD
  and F.PERSON_ID = ISIR.PERSON_ID
  and nvl(T.AID_YEAR,'-') = ISIR.AID_YEAR
  and F.SRC_SYS_ID = ISIR.SRC_SYS_ID
 -- and nvl(ISIR.PELL_ELIGIBILITY,'-') = 'Y'
left outer join UM_F_STDNT_ENRL_HIST E   
  on E.PERSON_SID = F.APPLCNT_SID
 and E.TERM_SID = F.ADMIT_TERM_SID 
 and E.SRC_SYS_ID = F.SRC_SYS_ID
 and E.ENRL_DT <= F.EFFDT                   -- July 2018 
left outer join SRVC
  on F.INSTITUTION_SID = SRVC.INSTITUTION_SID      -- Mar 2019 
 and F.APPLCNT_SID = SRVC.PERSON_SID
--where F.ADM_APPL_NBR = '00642793'         -- Temp!!!
 ),
F3 as (
select /*+ PARALLEL(16) INLINE */   
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT_SID, 
F.EFFDT,         -- Dec 2015 
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD,
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID,
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID, 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT_SID, 
F.APPL_UPDATED_BY, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT, 
nvl(F.FA_PELL_ELIGIBILITY,'N') AS FA_PELL_ELIGIBILITY,     -- Apr 2018
Applied_flag, 
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
case when F.APPL_CMPLTN_DT_SID = 19000101 and F.APPL_MANUAL_CMPLTN_DT is null
     then 19000101
     else least(decode(F.APPL_CMPLTN_DT_SID,19000101,99991231,F.APPL_CMPLTN_DT_SID), nvl(to_number(to_char(F.APPL_MANUAL_CMPLTN_DT,'YYYYMMDD')),99991231)) 
 end MIN_CMPLTN_DT_SID,
greatest(F.APPL_CMPLTN_FLG, F.APPL_MANUAL_CMPLTN_FLG) MAX_CMPLTN_FLG, 
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR,
F.EVAL_STAT_SID, 
F.EVALUATN_DT, 
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
1 APPL_STAT_CNT,
A.PROG_ACN_CD,
R.PROG_ACN_RSN_CD,
S.PROG_STAT_CD,
AT.ADMIT_TYPE_ID,
decode(CHK.PERSON_SID,'','N','Y') CHKLST_FLAG,
F.ENROLL_DT_SID,
F.ENROLL_CNT,
F.CREDIT_SUM,
ROW_NUMBER() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID  
                       ORDER BY F.EFFDT_SID desc, F.EFFSEQ desc, F.APPL_PROG_NBR, F.ACAD_PROG_CD, F.ACAD_PLAN_CD, F.ACAD_SPLAN_CD) APPL_ORDER,     -- Used for MAX_TERM_FLG    
ROW_NUMBER() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID  
                       ORDER BY F.EFFDT_SID desc, F.EFFSEQ desc, F.APPL_PROG_NBR, F.ACAD_PROG_CD, F.ACAD_PLAN_CD, F.ACAD_SPLAN_CD) APPL_STAT_ORDER,   -- Used for 99 rows 
nvl(MAX(F.EFFDT_SID) OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID  
                               ORDER BY F.EFFDT_SID, F.EFFSEQ, F.ACAD_SPLAN_CD desc, F.APPL_PROG_NBR desc, F.ACAD_PROG_CD desc, F.ACAD_PLAN_CD desc     -- Oct 2017 
                           ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING),99991231) NEXT_EFFDT_SID,
nvl(MAX(F.EFFDT_SID) OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID  
                               ORDER BY F.EFFDT_SID, F.EFFSEQ, F.ACAD_SPLAN_CD desc, F.APPL_PROG_NBR desc, F.ACAD_PROG_CD desc, F.ACAD_PLAN_CD desc     -- Oct 2017 
                           ROWS BETWEEN 2 FOLLOWING AND 2 FOLLOWING),99991231) NEXT_EFFDT2_SID,
SUM(case when F.ACAD_SPLAN_SID < 2147483646 then 1 else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ) SPLAN_CNT
from F1 F
join PS_D_PROG_ACN A
  on F.PROG_ACN_SID = A.PROG_ACN_SID
 and F.INSTITUTION_CD = A.SETID               -- SETID added to key for PS_D_PROG_ACN_NEW!!!!!!!!!!!!!!  
join PS_D_PROG_ACN_RSN R
  on F.PROG_ACN_RSN_SID = R.PROG_ACN_RSN_SID
join PS_D_PROG_STAT S
  on F.PROG_STAT_SID = S.PROG_STAT_SID
join PS_D_ADMIT_TYPE AT
  on F.ADMIT_TYPE_SID = AT.ADMIT_TYPE_SID  
left outer join 
(select /*+ PARALLEL(16) use_hash(CF,CR,V) INLINE */  
distinct CF.PERSON_SID PERSON_SID, V.ADM_APPL_NBR
from PS_F_CHKLST_PERSON CF, PS_R_CHKLST_ITEM CR, PS_D_ITEM_CD CI, PS_D_VAR_DATA V
where CF.COMMON_ID = CR.COMMON_ID 
  and CF.SEQ_3C = CR.SEQ_3C 
  and CF.SRC_SYS_ID = CR.SRC_SYS_ID 
  and CR.ITEM_CD_SID = CI.ITEM_CD_SID
  and CF.VAR_DATA_SID = V.VAR_DATA_SID
  and CI.CHKLST_ITEM_CD = 'LGADEP'
  and CR.ITEM_STATUS in ('C','W')
  and V.ADM_APPL_NBR <> '-'
) CHK
   on F.APPLCNT_SID = CHK.PERSON_SID
  and F.ADM_APPL_NBR = CHK.ADM_APPL_NBR
where ENROLL_ORDER = 1),
F4 as (
select /*+ PARALLEL(16) INLINE */  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT_SID,
F.EFFDT,        -- Dec 2015 
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD, 
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID, 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT_SID, 
F.APPL_UPDATED_BY, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT, 
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
F.MAX_CMPLTN_FLG, 
F.MIN_CMPLTN_DT_SID, 
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR,
F.EVAL_STAT_SID,    
F.EVALUATN_DT, 
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
F.ENROLL_DT_SID,
F.ENROLL_CNT,
F.CREDIT_SUM, 
F.APPL_ORDER,
F.NEXT_EFFDT_SID 
from F3 F
  union all            -- Add completed application row(s) when most recent row and status = 'AP' 
select /*+ PARALLEL(16) INLINE */  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
--F.APPL_CMPLTN_DT_SID,        -- APPL_CMPLTN_DT_SID used as EFFDT_SID
F.MIN_CMPLTN_DT_SID,        -- MIN_CMPLTN_DT_SID used as EFFDT_SID Jan 2015
to_date(to_char(F.MIN_CMPLTN_DT_SID),'YYYYMMDD'),        -- MIN_CMPLTN_DT_SID used as EFFDT Dec 2015
77 EFFSEQ,                       -- 77 for added completion rows on 7/10/2012    
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD, 
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID,   -- Added 6/28/2012  
F.APPL_CREATION_BY,    -- Added 3/1/2013
F.APPL_UPDATE_DT_SID,   -- Added 6/28/2012 
F.APPL_UPDATED_BY,    -- Added 3/1/2013
F.APPL_FEE_AMT,     -- Added July 2014
F.APPL_FEE_DT,         -- Added July 2014 
F.APPL_FEE_PAID,     -- Added July 2014 
F.APPL_FEE_STATUS,     -- Added July 2014 
F.APPL_FEE_TYPE,     -- Added July 2014 
F.APP_FEE_STATUS,     -- Added July 2014 
F.AUDIT_ACTION,         -- Added Nov 2014 
F.AUDIT_DT,             -- Added Nov 2014 
F.AUDIT_OPRID,          -- Added Nov 2014
F.EXT_ADM_APPL_NBR,     -- Added Nov 2014 
F.WAIVE_AMT,         -- Added July 2014
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST,   -- Added 6/28/2012  
F.HOUSING_INTEREST,   -- Added 6/28/2012 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG,   -- Dec 2014  
F.APPL_MANUAL_CMPLTN_DT,    -- Dec 2014  
F.MAX_CMPLTN_FLG,           -- Added Jan 2015
F.MIN_CMPLTN_DT_SID,        -- Added Jan 2015
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR, 
F.EVAL_STAT_SID,    
F.EVALUATN_DT,   
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
F.ENROLL_DT_SID,
F.ENROLL_CNT,
F.CREDIT_SUM, 
F.APPL_ORDER,
F.NEXT_EFFDT_SID 
from F3 F
where F.EFFDT_SID < F.MIN_CMPLTN_DT_SID
  and F.PROG_STAT_CD = 'AP'
  and (F.MIN_CMPLTN_DT_SID < F.NEXT_EFFDT_SID or (F.EFFDT_SID = F.NEXT_EFFDT_SID and F.SPLAN_CNT >= 2 and F.MIN_CMPLTN_DT_SID < F.NEXT_EFFDT2_SID))
  union all            -- Add enrollment row(s) when most recent row and enrolled
select /*+ PARALLEL(16) INLINE use_hash(F, E) */  
E.PERSON_SID APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
--E.ENROLL_DT_SID EFFDT_SID,
to_number(to_char(E.ENRL_DT,'YYYYMMDD')) EFFDT_SID,
E.ENRL_DT EFFDT,                -- Dec 2015 
--decode(E.ENROLL_ORDER,0,88,99) EFFSEQ,          -- Modified 7/10/2012 
88 EFFSEQ,                        -- Dec 2015  
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD,  
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID,   -- Added 6/28/2012  
F.APPL_CREATION_BY,    -- Added 3/1/2013
F.APPL_UPDATE_DT_SID,   -- Added 6/28/2012 
F.APPL_UPDATED_BY,    -- Added 3/1/2013
F.APPL_FEE_AMT,     -- Added July 2014
F.APPL_FEE_DT,         -- Added July 2014 
F.APPL_FEE_PAID,     -- Added July 2014 
F.APPL_FEE_STATUS,     -- Added July 2014 
F.APPL_FEE_TYPE,     -- Added July 2014 
F.APP_FEE_STATUS,     -- Added July 2014 
F.AUDIT_ACTION,         -- Added Nov 2014 
F.AUDIT_DT,             -- Added Nov 2014 
F.AUDIT_OPRID,          -- Added Nov 2014
F.EXT_ADM_APPL_NBR,     -- Added Nov 2014 
F.WAIVE_AMT,         -- Added July 2014
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST,   -- Added 6/28/2012  
F.HOUSING_INTEREST,   -- Added 6/28/2012 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG,   -- Added Dec 2014  
F.APPL_MANUAL_CMPLTN_DT,    -- Added Dec 2014  
F.MAX_CMPLTN_FLG,           -- Added Jan 2015
F.MIN_CMPLTN_DT_SID,        -- Added Jan 2015
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR, 
F.EVAL_STAT_SID, 
F.EVALUATN_DT,  
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
--E.ENROLL_DT_SID,
(to_number(to_char(E.ENRL_DT,'YYYYMMDD'))) ENROLL_DT_SID,           -- Convert to date????????????????????????????????????  
--E.ENROLL_CNT,
(case when E.CLASS_ENRL_CNT > 0 then 1 
      when E.CLASS_ENRL_CNT < 0 then -1 else 0 end) ENROLL_CNT,
E.TAKEN_UNIT_SUM CREDIT_SUM, 
F.APPL_ORDER,
F.NEXT_EFFDT_SID 
from F3 F
--join UM_F_CLASS_ENRLMT_AGG_VW E
--  on E.PERSON_SID = F.APPLCNT_SID
-- and E.TERM_SID = F.ADMIT_TERM_SID
-- and E.ENROLL_DT_SID > F.EFFDT_SID 
-- and E.SRC_SYS_ID = F.SRC_SYS_ID
join UM_F_STDNT_ENRL_HIST E  
  on E.PERSON_SID = F.APPLCNT_SID
 and E.TERM_SID = F.ADMIT_TERM_SID
 and E.SRC_SYS_ID = F.SRC_SYS_ID
-- and E.ENRL_DT <= E.LAST_DROP_DT
-- and E.ENROLL_DT_SID > F.EFFDT_SID 
-- and to_number(to_char(E.ENRL_DT,'YYYYMMDD')) > F.EFFDT_SID 
 and E.ENRL_DT > F.EFFDT 
 and E.ENRL_DT < to_date(F.NEXT_EFFDT_SID,'YYYYMMDD')
 and ((to_number(to_char(E.ENRL_DT,'YYYYMMDD'))) > F.ENROLL_DT_SID or F.ENROLL_DT_SID = 0)  
 and E.SRC_SYS_ID = F.SRC_SYS_ID
 and ((E.CLASS_ENRL_CNT_PREV_SUM <= 0 and E.CLASS_ENRL_CNT_SUM > 0) or (E.CLASS_ENRL_CNT_PREV_SUM > 0 and E.CLASS_ENRL_CNT_SUM <= 0))
where F.PROG_STAT_CD in ('AC')             -- or not in ('CN','DE')???  
--  and F.EFFDT_SID <> F.NEXT_EFFDT_SID
--  and (F.APPL_STAT_ORDER = 1 or (F.APPL_STAT_ORDER = 2 and F.SPLAN_CNT >= 2))     -- Drop APPL_STAT_ORDER??????????????????????????
),
F41 as (
select /*+ PARALLEL(16) INLINE */  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT_SID,
F.EFFDT,  
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD, 
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID, 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT_SID, 
F.APPL_UPDATED_BY, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT, 
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
F.MAX_CMPLTN_FLG, 
F.MIN_CMPLTN_DT_SID, 
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR,
F.EVAL_STAT_SID,    
F.EVALUATN_DT, 
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
F.ENROLL_DT_SID,
F.ENROLL_CNT,
F.CREDIT_SUM, 
F.APPL_ORDER,
F.NEXT_EFFDT_SID,
ROW_NUMBER() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID  
                       ORDER BY F.EFFDT_SID desc, F.EFFSEQ desc, F.APPL_PROG_NBR, F.ACAD_PROG_CD, F.ACAD_PLAN_CD, F.ACAD_SPLAN_CD) APPL_STAT_ORDER 
  from F4 F),
F42 as (
select /*+ PARALLEL(16) INLINE */  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT_SID,
F.EFFDT,  
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD, 
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID, 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT_SID, 
F.APPL_UPDATED_BY, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT, 
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
F.MAX_CMPLTN_FLG, 
F.MIN_CMPLTN_DT_SID, 
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR,
F.EVAL_STAT_SID,    
F.EVALUATN_DT, 
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
F.ENROLL_DT_SID,
F.ENROLL_CNT,
F.CREDIT_SUM, 
F.APPL_ORDER,
F.NEXT_EFFDT_SID
  from F41 F
 union all  
select /*+ PARALLEL(16) INLINE use_hash(F, E) */     -- 99 row for incorrect an enroll count     -- Sep 2017  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
to_number(to_char(greatest(F.EFFDT+1, E.ENRL_DT),'YYYYMMDD')) EFFDT_SID,
greatest(F.EFFDT+1, E.ENRL_DT) EFFDT,   
99 EFFSEQ,                          
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD,  
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID,   -- Added 6/28/2012  
F.APPL_CREATION_BY,    -- Added 3/1/2013
F.APPL_UPDATE_DT_SID,   -- Added 6/28/2012 
F.APPL_UPDATED_BY,    -- Added 3/1/2013
F.APPL_FEE_AMT,     -- Added July 2014
F.APPL_FEE_DT,         -- Added July 2014 
F.APPL_FEE_PAID,     -- Added July 2014 
F.APPL_FEE_STATUS,     -- Added July 2014 
F.APPL_FEE_TYPE,     -- Added July 2014 
F.APP_FEE_STATUS,     -- Added July 2014 
F.AUDIT_ACTION,         -- Added Nov 2014 
F.AUDIT_DT,             -- Added Nov 2014 
F.AUDIT_OPRID,          -- Added Nov 2014
F.EXT_ADM_APPL_NBR,     -- Added Nov 2014 
F.WAIVE_AMT,         -- Added July 2014
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST,   -- Added 6/28/2012  
F.HOUSING_INTEREST,   -- Added 6/28/2012 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG,   -- Added Dec 2014  
F.APPL_MANUAL_CMPLTN_DT,    -- Added Dec 2014  
F.MAX_CMPLTN_FLG,           -- Added Jan 2015
F.MIN_CMPLTN_DT_SID,        -- Added Jan 2015
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR, 
F.EVAL_STAT_SID, 
F.EVALUATN_DT,  
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
(to_number(to_char(E.ENRL_DT,'YYYYMMDD'))) ENROLL_DT_SID,           -- Convert to date????????????????????????????????????  
E.TERM_ENRL_CNT ENROLL_CNT,
(case when E.TERM_ENRL_CNT = 0 then 0 else E.TAKEN_UNIT_SUM end) CREDIT_SUM,    -- ?????????????????????????????????????????????????????????  
F.APPL_ORDER,
F.NEXT_EFFDT_SID 
 from F41 F
 join UM_F_STDNT_ENRL_HIST E  
   on E.PERSON_SID = F.APPLCNT_SID
  and E.TERM_SID = F.ADMIT_TERM_SID
  and E.SRC_SYS_ID = F.SRC_SYS_ID
  and E.ENRL_LAST_ORDER = 1
where F.PROG_STAT_CD in ('AC') 
  and F.APPL_STAT_ORDER = 1
  and (case when F.ENROLL_CNT <= 0 then 0 else F.ENROLL_CNT end) <> E.TERM_ENRL_CNT),
F5 as (
select /*+ PARALLEL(16) INLINE */  
F.APPLCNT_SID, 
F.INSTITUTION_SID, 
F.ACAD_CAR_SID, 
F.STU_CAR_NBR, 
F.ADM_APPL_NBR, 
F.APPL_PROG_NBR,
F.ACAD_PROG_SID,
F.ACAD_PLAN_SID,
F.ACAD_SPLAN_SID,
F.EFFDT_SID,
F.EFFSEQ,
F.SRC_SYS_ID, 
F.PERSON_ID, 
F.INSTITUTION_CD, 
F.ACAD_CAR_CD, 
F.ACAD_PROG_CD, 
F.ACAD_PLAN_CD, 
F.PLAN_DECLARE_DT,
F.ACAD_SPLAN_CD,
F.SPLAN_DECLARE_DT,
F.TERM_CD,  
F.ADMIT_TERM_SID,
F.EXP_GRAD_TERM_SID, 
F.ADMIT_TYPE_SID, 
F.ACAD_LVL_SID, 
F.ACAD_LOAD_SID, 
F.ACAD_PROG_UM2_SID, 
F.ACAD_PLAN_UM2_SID, 
F.ACAD_SPLAN_UM2_SID, 
F.ACAD_SPLAN2_SID, 
F.AUDIT_OPRID_SID, 
F.CAMPUS_SID, 
F.PERSON_ATHL_SID,
F.PERSON_SRVC_IND_SID,
F.DUAL_ACAD_PROG_SID, 
F.JOINT_PROG_FLG, 
F.PROG_STAT_SID, 
F.PROG_ACN_SID, 
F.PROG_ACN_RSN_SID,
F.ACTION_DT_SID, 
MAX(case when F.PROG_ACN_CD = 'APPL' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) APPL_CNT,
MAX(case when F.PROG_ACN_CD = 'DENY' and F.PROG_ACN_RSN_CD not in ('INC') then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DENY_CNT,
MAX(case when F.PROG_ACN_CD in ('DDEF') and ((F.INSTITUTION_CD = 'UMBOS' and F.PROG_ACN_RSN_CD in ('EADA','EADY','RDDA','RDDY')) 
                                         or  (F.INSTITUTION_CD in ('UMDAR', 'UMLOW') and F.PROG_ACN_RSN_CD in ('EADY','EAEL','RDDR','RDDY','RDEL'))) then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) P_DENY_CNT,
MAX(case when F.PROG_ACN_CD in ('DDEF') and F.PROG_ACN_RSN_CD like 'EA%' and F.PROG_ACN_RSN_CD <> 'EADF' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) EARLY_CNT,
MAX(case when F.PROG_ACN_CD in ('DDEF') and F.PROG_ACN_RSN_CD like 'RD%' and F.PROG_ACN_RSN_CD <> 'RDWS' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) REG_CNT,
MAX(case when F.PROG_ACN_CD = 'RECN' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) RECN_CNT,
MAX(case when (F.PROG_ACN_CD = 'WAIT' or F.PROG_STAT_CD = 'WT') and F.PROG_ACN_RSN_CD not in ('ADSP','FIND') then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) WAIT_CNT,
MAX(case when F.PROG_ACN_CD in ('DDEF') and ((F.INSTITUTION_CD = 'UMBOS' and F.PROG_ACN_RSN_CD in ('EADP','EAEL','RDDP','RDEL','RDWL')) 
                       or (F.INSTITUTION_CD in ('UMDAR', 'UMLOW') and F.PROG_ACN_RSN_CD in ('RDWL','EAWL'))) then EFFDT_SID+(EFFSEQ/100) else 0 end)     -- Sept 2016 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) P_WAIT_CNT,
MAX(case when F.PROG_STAT_CD in ('CN','DE') then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) CANC_CNT,
MAX(case when (F.PROG_ACN_CD = 'DEIN' and F.PROG_ACN_RSN_CD in ('PEND')) or (F.INSTITUTION_CD <> 'UMDAR' and F.PROG_STAT_CD not in ('AC','PM')) then EFFDT_SID+(EFFSEQ/100) else 0 end) -- Changed Dec 2015  
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID        -- Lowell fix 12/16/2010 
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) NO_DEIN_CNT,
MAX(case when F.PROG_ACN_CD in ('ADMT','MATR') or F.PROG_STAT_CD in ('AC','AD','PM') or (F.PROG_ACN_CD = 'WAIT' and F.PROG_ACN_RSN_CD in ('ADSP','FIND')) then EFFDT_SID+(EFFSEQ/100) else 0 end)     -- Dartmouth fix 6/30/10  -- Lowell fix 10/18/10
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) ADMT_CNT,
MAX(case when F.PROG_ACN_CD in ('DDEF') and F.PROG_ACN_RSN_CD in ('EAAA','EAAD','EAAF','EAAH','EAAP','EAAR','EAIA','EAPQ','EATS','RDAA','RDAD','RDAF','RDAH','RDAP','RDAS','RDIA','RDTS') then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) P_ADMT_CNT,
MAX(case when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD = 'GRAD' and ((F.CHKLST_FLAG = 'Y' and F.PROG_ACN_CD <> 'APPL'))) then EFFDT_SID+(EFFSEQ/100)  -- Lowell fix 10/24/2013 
         when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD = 'UGRD' and F.PROG_ACN_CD = 'DEIN' and F.PROG_ACN_RSN_CD <> 'PEND') then EFFDT_SID+(EFFSEQ/100)
         when (F.INSTITUTION_CD <> 'UMLOW' and F.PROG_ACN_CD = 'DEIN' and F.PROG_ACN_RSN_CD <> 'PEND') then EFFDT_SID+(EFFSEQ/100) else 0 end)
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DEIN_CNT,
MAX(case when F.PROG_ACN_CD = 'MATR' and F.PROG_STAT_CD not in ('CN','DE') then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) MATR_CNT,
MAX(case when F.INSTITUTION_CD = 'UMBOS' and ( ( F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('DECL') )
                                          or   ( F.PROG_ACN_CD in ('ADRV') ) ) then EFFDT_SID+(EFFSEQ/100) 
         when F.INSTITUTION_CD = 'UMDAR' and ( ( F.PROG_ACN_CD in ('ADRV') and F.PROG_ACN_RSN_CD in ('-','NOSH') )
                                          or   ( F.PROG_ACN_CD in ('WADM') and F.PROG_ACN_RSN_CD in ('NOTA') )
                                          or   ( F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('-','DCLW','DECL','NDEP','NOTA','NOVI','NREF','PCE','REFD') ) ) then EFFDT_SID+(EFFSEQ/100)    -- Changed Dec 2015 
         when F.INSTITUTION_CD = 'UMLOW' and ( ( F.PROG_ACN_CD in ('ADRV') and F.PROG_ACN_RSN_CD in ('-') )
                                          or   ( F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('ADEC','NDEP','NREF','REFD') ) ) then EFFDT_SID+(EFFSEQ/100) else 0 end)    -- Added 7/20/2012 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DECL_CNT,
MAX(case when F.INSTITUTION_CD = 'UMBOS' and ( ( F.PROG_ACN_CD in ('WADM') and F.PROG_ACN_RSN_CD in ('-') ) 
                                          or   ( F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('PDEC') ) ) then EFFDT_SID+(EFFSEQ/100)
         when F.INSTITUTION_CD = 'UMDAR' and     F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('PDEC')     then EFFDT_SID+(EFFSEQ/100) 
         when F.INSTITUTION_CD = 'UMLOW' and     F.PROG_ACN_CD in ('WAPP') and F.PROG_ACN_RSN_CD in ('-','PDEC') then EFFDT_SID+(EFFSEQ/100) else 0 end)   -- Modified 7/20/2012   
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) WITH_CNT,
MAX(case when (F.PROG_STAT_CD not in ('AP')) then EFFDT_SID+(EFFSEQ/100) else 0 end)
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DEC_CNT, 
MAX(case when ((F.PROG_ACN_CD = 'WADM' and F.PROG_ACN_RSN_CD not in ('-','NOSH','NOTA','NRES','PRCL','UNIV'))) then EFFDT_SID+(EFFSEQ/100) else 0 end)  -- June 2019 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) NO_DEC_CNT, 
MAX(case when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD  = 'GRAD' and ((F.PROG_STAT_CD in ('CN','DE') and F.PROG_ACN_RSN_CD in ('CARE','CNOW','DUPL','FLSE','READ','REAS')) or (F.PROG_ACN_CD = 'WADM' and F.PROG_ACN_RSN_CD = 'UNIV'))) then EFFDT_SID+(EFFSEQ/100) 
         when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD <> 'GRAD' and  (F.PROG_STAT_CD in ('CN','DE') and F.PROG_ACN_RSN_CD in ('CARE','CNOW','DUPL','FLSE','READ','REAS')))                                                            then EFFDT_SID+(EFFSEQ/100)
         when (F.INSTITUTION_CD <> 'UMLOW'                             and  (F.PROG_STAT_CD in ('CN','DE') and F.PROG_ACN_RSN_CD in ('CARE','CNOW','DUPL','FLSE','READ','REAS')))                                                            then EFFDT_SID+(EFFSEQ/100) else 0 end)
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) NO_APPL_CNT,
MAX(case when ((F.MIN_CMPLTN_DT_SID <= F.EFFDT_SID and F.MAX_CMPLTN_FLG = 'Y') or (F.PROG_ACN_CD = 'DENY' and F.PROG_ACN_RSN_CD <> 'INC') or (F.PROG_STAT_CD in ('AC','AD','PM')) or (F.PROG_ACN_CD in ('ADMT','MATR'))) then EFFDT_SID+(EFFSEQ/100) else 0 end) -- Fix Feb 2014
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) COMP_CNT,
MAX(case when ((F.PROG_ACN_CD = 'DENY' and F.PROG_ACN_RSN_CD = 'INC') or (F.PROG_ACN_RSN_CD in ('COUT','DEAT','DECE','IGSW')) or (F.PROG_STAT_CD = 'AP' and F.PROG_ACN_CD = 'RECN')) then EFFDT_SID+(EFFSEQ/100) else 0 end) -- Fix Feb 2014
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) NO_COMP_CNT,
MAX(case when F.PROG_ACN_CD = 'ADRV' and F.PROG_ACN_RSN_CD <> 'NOSH' then EFFDT_SID+(EFFSEQ/100) else 0 end)                     -- Dartmouth fix 6/30/10 - Wrong?  Conflict with ADRV_ADMT_CNT!!!
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) ADRV_CNT,
MAX(case when F.PROG_ACN_CD = 'ADRV' and F.PROG_ACN_RSN_CD = 'NOSH' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) ADRV_ADMT_CNT,
MAX(case when F.PROG_ACN_CD = 'DDEF' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DDEF_CNT,
MAX(case when F.PROG_ACN_CD = 'DEFR' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DEFR_CNT,
MAX(case when F.PROG_ACN_CD = 'DDEF' and F.PROG_ACN_RSN_CD = 'EADF' then EFFDT_SID+(EFFSEQ/100) else 0 end) 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DEFR_REG_CNT,
MAX(case when F.ACAD_CAR_CD = 'UGRD' and F.PROG_STAT_CD = 'PM' then EFFDT_SID+(EFFSEQ/100) else 0 end)     -- Lowell fix 5/24/11 
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) PM_CNT,
MAX(case when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD = 'GRAD' and ((F.CHKLST_FLAG = 'Y' and F.PROG_ACN_CD <> 'APPL') or ENROLL_CNT = 1)) then F.TERM_CD  -- Lowell fix 5/12/2011 
         when (F.INSTITUTION_CD  = 'UMLOW' and F.ACAD_CAR_CD = 'UGRD' and F.PROG_ACN_CD = 'DEIN' and F.PROG_ACN_RSN_CD <> 'PEND') then F.TERM_CD
         when (F.INSTITUTION_CD <> 'UMLOW' and F.PROG_ACN_CD = 'DEIN' and F.PROG_ACN_RSN_CD <> 'PEND') then F.TERM_CD else '0000' end)
    OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID
              ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.EFFDT_SID, F.EFFSEQ 
          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) DEIN_TERM_CD, 
F.APPL_DT_SID,
F.APPL_CNTR_SID,
F.APPL_CREATE_DT_SID, 
F.APPL_CREATION_BY, 
F.APPL_UPDATE_DT_SID, 
F.APPL_UPDATED_BY, 
F.APPL_FEE_AMT, 
F.APPL_FEE_DT, 
F.APPL_FEE_PAID, 
F.APPL_FEE_STATUS, 
F.APPL_FEE_TYPE, 
F.APP_FEE_STATUS, 
F.AUDIT_ACTION, 
F.AUDIT_DT, 
F.AUDIT_OPRID, 
F.EXT_ADM_APPL_NBR, 
F.WAIVE_AMT, 
F.FA_PELL_ELIGIBILITY,     -- Apr 2018 
F.Applied_flag, 
F.FIN_AID_INTEREST, 
F.HOUSING_INTEREST, 
F.APPL_MTHD_SID,
F.APPL_CMPLTN_FLG,
F.APPL_CMPLTN_DT_SID,
F.APPL_MANUAL_CMPLTN_FLG, 
F.APPL_MANUAL_CMPLTN_DT, 
F.MAX_CMPLTN_FLG, 
F.MIN_CMPLTN_DT_SID, 
F.LST_SCHL_ATTND_SID,
F.LST_SCHL_GRDDT_SID,
F.NOTIFICATION_PLAN,
F.TERM_BEGIN_DT,        -- Apr 2018 
F.TERM_END_DT,          -- Apr 2018 
F.UM_BHE, 
F.UM_BHE_ENG, 
F.UM_BHE_SOCSCI, 
F.UM_BHE_SCI, 
F.UM_BHE_MATH, 
F.UM_BHE_ELT, 
F.UM_BHE_FRLG, 
F.UM_BHE_CMPLT, 
F.UM_BHE_EXP_VOCTEC, 
F.UM_BHE_EXP_ESL, 
F.UM_BHE_EXP_INTL, 
F.UM_BHE_PRECOLLEGE, 
F.UM_BHE_EXP_LD, 
F.UM_BHE_TRANS_CR, 
F.UM_BHE_TRANS_GPA,
F.UM_CA_FIRST_GEN,
F.UM_CA_TESTING_PLAN,
F.UM_RA_TA_INTEREST, 
F.STU_CAR_NBR_SR, 
F.EVAL_STAT_SID,     
F.EVALUATN_DT,   
F.UM_TCA_COMPLETE, 
F.UM_TCA_CREDITS,
F.APPL_STAT_CNT,
F.PROG_ACN_CD,
F.PROG_ACN_RSN_CD,
F.PROG_STAT_CD,
F.ADMIT_TYPE_ID,
F.CHKLST_FLAG,
F.ENROLL_DT_SID,
case when ENROLL_CNT = 1 then (F.ENROLL_DT_SID+(EFFSEQ/100)) else 0 end ENROLL_CNT,     -- ENROLL_CNT set to ENROLL_DT_SID exception dropped 
decode(ENROLL_CNT,1,F.CREDIT_SUM,0) CREDIT_SUM,
ROW_NUMBER() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, F.ADMIT_TERM_SID  
                       ORDER BY F.EFFDT_SID desc, F.EFFSEQ desc, F.ACAD_SPLAN_CD, F.APPL_PROG_NBR, F.ACAD_PROG_CD, F.ACAD_PLAN_CD) APPL_COUNT_ORDER,
F.APPL_ORDER, 
DENSE_RANK() OVER (PARTITION BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID 
                       ORDER BY F.APPLCNT_SID, F.INSTITUTION_SID, F.ACAD_CAR_SID, F.STU_CAR_NBR, F.ADM_APPL_NBR, F.SRC_SYS_ID, TERM_CD desc) APPL_TERM_ORDER
from F42 F),
F6 as (
select /*+ PARALLEL(16) INLINE */
APPLCNT_SID,
INSTITUTION_SID,
ACAD_CAR_SID,
STU_CAR_NBR,
ADM_APPL_NBR,
APPL_PROG_NBR,
ACAD_PROG_SID,
ACAD_PLAN_SID,
ACAD_SPLAN_SID,
EFFDT_SID,
EFFSEQ,
F5.SRC_SYS_ID,
PERSON_ID,
INSTITUTION_CD,
ACAD_CAR_CD,
ACAD_PROG_CD,
ACAD_PLAN_CD, 
PLAN_DECLARE_DT,
ACAD_SPLAN_CD,
SPLAN_DECLARE_DT,
TERM_CD,  
ADMIT_TERM_SID,
to_char(APPLCNT_SID)||'|'||to_char(INSTITUTION_SID)||'|'||to_char(ACAD_CAR_SID)||'|'||to_char(STU_CAR_NBR)||'|'||to_char(ADM_APPL_NBR)||'|'||to_char(ADMIT_TERM_SID)||'|'||F5.SRC_SYS_ID APPL_KEY,
EXP_GRAD_TERM_SID,
ADMIT_TYPE_SID,
ACAD_LVL_SID,
ACAD_LOAD_SID,
ACAD_PROG_UM2_SID, 
ACAD_PLAN_UM2_SID, 
ACAD_SPLAN_UM2_SID, 
ACAD_SPLAN2_SID, 
AUDIT_OPRID_SID, 
CAMPUS_SID,
PERSON_ATHL_SID,
PERSON_SRVC_IND_SID,
DUAL_ACAD_PROG_SID,
JOINT_PROG_FLG,
PROG_STAT_SID,
PROG_ACN_SID,
PROG_ACN_RSN_SID,
ACTION_DT_SID,
APPL_DT_SID,
APPL_CNTR_SID,
APPL_MTHD_SID,
APPL_CMPLTN_FLG,        -- Add logic to set completion flag only when completion date >= action date???
APPL_CMPLTN_DT_SID,
APPL_MANUAL_CMPLTN_FLG, 
APPL_MANUAL_CMPLTN_DT, 
MAX_CMPLTN_FLG, 
MIN_CMPLTN_DT_SID, 
APPL_CREATE_DT_SID, 
APPL_CREATION_BY, 
APPL_UPDATE_DT_SID, 
APPL_UPDATED_BY, 
APPL_FEE_AMT, 
APPL_FEE_DT, 
APPL_FEE_PAID, 
APPL_FEE_STATUS, 
APPL_FEE_TYPE, 
APP_FEE_STATUS, 
AUDIT_ACTION, 
AUDIT_DT, 
AUDIT_OPRID, 
EXT_ADM_APPL_NBR, 
WAIVE_AMT, 
FA_PELL_ELIGIBILITY,     -- Apr 2018 
Applied_flag, 
FIN_AID_INTEREST, 
HOUSING_INTEREST, 
LST_SCHL_ATTND_SID,
LST_SCHL_GRDDT_SID,
NOTIFICATION_PLAN,
TERM_BEGIN_DT,        -- Apr 2018 
TERM_END_DT,          -- Apr 2018 
UM_BHE, 
UM_BHE_ENG, 
UM_BHE_SOCSCI, 
UM_BHE_SCI, 
UM_BHE_MATH, 
UM_BHE_ELT, 
UM_BHE_FRLG, 
UM_BHE_CMPLT, 
UM_BHE_EXP_VOCTEC, 
UM_BHE_EXP_ESL, 
UM_BHE_EXP_INTL, 
UM_BHE_PRECOLLEGE, 
UM_BHE_EXP_LD, 
UM_BHE_TRANS_CR, 
UM_BHE_TRANS_GPA,
UM_CA_FIRST_GEN,
UM_CA_TESTING_PLAN,
UM_RA_TA_INTEREST, 
STU_CAR_NBR_SR, 
EVAL_STAT_SID,     
EVALUATN_DT,   
UM_TCA_COMPLETE, 
UM_TCA_CREDITS,
PROG_ACN_CD,
PROG_ACN_RSN_CD,
PROG_STAT_CD,
ADMIT_TYPE_ID,
APPL_STAT_CNT,
case when NO_APPL_CNT > APPL_CNT        -- Always count as applied unless WADM/DUPL, DENY/INC, or RECN/CNOW, etc.
--      and NO_APPL_CNT > COMP_CNT
      and NO_APPL_CNT > DDEF_CNT               
      and NO_APPL_CNT > DEFR_CNT               
     then 0 else 1
 end APPL_CNT,
case when APPL_CNT >= NO_APPL_CNT       -- Count as complete if any decision made and not WADM/DUPL
      and COMP_CNT >= NO_COMP_CNT    -- Fix Feb 2014
      and COMP_CNT >  0             -- Fix Feb 2014
     then 1 else 0 
 end APPL_COMPLETE_CNT,
case when ADMT_CNT >  NO_APPL_CNT      -- Count as admitted if admit counts > no decision count and not WADM/DUPL
      and ADMT_CNT >  APPL_CNT
      and ADMT_CNT >  DENY_CNT
      and ADMT_CNT >  WAIT_CNT
      and ADMT_CNT >= DDEF_CNT
      and ADMT_CNT >  RECN_CNT
      and ADMT_CNT >  NO_DEC_CNT
     then 1 else 0 
 end ADMIT_CNT, 
case when P_ADMT_CNT >  NO_APPL_CNT 
      and P_ADMT_CNT >  APPL_CNT
      and P_ADMT_CNT >  DEC_CNT
      and P_ADMT_CNT >  DEFR_CNT
      and P_ADMT_CNT >  P_DENY_CNT
      and P_ADMT_CNT >  P_WAIT_CNT
     then 1 else 0 
 end P_ADMIT_CNT, 
case when DENY_CNT > NO_APPL_CNT       -- Count as denied if denied count > admit count and not WADM/DUPL
      and DENY_CNT > APPL_CNT
      and DENY_CNT > ADMT_CNT
      and DENY_CNT > WAIT_CNT
      and DENY_CNT > DDEF_CNT
      and DENY_CNT > RECN_CNT
      and DENY_CNT > MATR_CNT
      and DENY_CNT > NO_DEC_CNT
     then 1 else 0 
 end DENY_CNT, 
case when P_DENY_CNT >  NO_APPL_CNT 
      and P_DENY_CNT >  APPL_CNT
      and P_DENY_CNT >  DEC_CNT
      and P_DENY_CNT >  DEFR_CNT
      and P_DENY_CNT >  P_ADMT_CNT
      and P_DENY_CNT >  P_WAIT_CNT
     then 1 else 0 
 end P_DENY_CNT, 
case when WAIT_CNT > NO_APPL_CNT      -- Count as wait if wait count > other counts and not WADM/DUPL
      and WAIT_CNT > APPL_CNT
      and WAIT_CNT > ADMT_CNT
      and WAIT_CNT > CANC_CNT
      and WAIT_CNT > DENY_CNT
      and WAIT_CNT > DDEF_CNT
      and WAIT_CNT > RECN_CNT
      and WAIT_CNT > MATR_CNT
      and WAIT_CNT > DECL_CNT
      and WAIT_CNT > WITH_CNT
      and WAIT_CNT > NO_DEC_CNT
     then 1 else 0 
 end WAIT_CNT, 
case when P_WAIT_CNT >  NO_APPL_CNT 
      and P_WAIT_CNT >  APPL_CNT
      and P_WAIT_CNT >  DEC_CNT
      and P_WAIT_CNT >  DEFR_CNT
      and P_WAIT_CNT >  P_ADMT_CNT
      and P_WAIT_CNT >  P_DENY_CNT
     then 1 else 0 
 end P_WAIT_CNT, 
case when DDEF_CNT >  NO_APPL_CNT     -- Count as pending if pending count > other counts and not WADM/DUPL
      and DDEF_CNT >  APPL_CNT
      and DDEF_CNT >= ADMT_CNT
      and DDEF_CNT >  DENY_CNT
      and DDEF_CNT >  WAIT_CNT
      and DDEF_CNT >  RECN_CNT
      and DDEF_CNT >  MATR_CNT
      and DDEF_CNT >  NO_DEC_CNT
     then 1 else 0 
 end DEFER_DECISION_CNT, 
case when DEFR_CNT >  NO_APPL_CNT     -- Count as defer if defer count > other counts and not WADM/DUPL
      and DEFR_CNT >  APPL_CNT
      and DEFR_CNT >= ADMT_CNT        -- Lowell fix 10/18/10
      and DEFR_CNT >  DENY_CNT
      and DEFR_CNT >  WAIT_CNT
      and DEFR_CNT >  DDEF_CNT
      and DEFR_CNT >  RECN_CNT
      and DEFR_CNT >  MATR_CNT
      and DEFR_CNT >  NO_DEC_CNT
     then 1 else 0 
 end DEFER_ENROLL_CNT, 
case when DEFR_REG_CNT >  NO_APPL_CNT 
      and DEFR_REG_CNT >  APPL_CNT
      and DEFR_REG_CNT >  DEC_CNT 
      and DEFR_REG_CNT >  DEFR_CNT 
--      and DEFR_REG_CNT >  RECN_CNT 
      and DEFR_REG_CNT >  P_ADMT_CNT
      and DEFR_REG_CNT >  P_DENY_CNT
      and DEFR_REG_CNT >  P_WAIT_CNT
     then 1 else 0 
 end DEFER_REGULAR_CNT, 
case when RECN_CNT > NO_APPL_CNT      -- Count as reconsidered if recon count > other counts and not WADM/DUPL
      and RECN_CNT > APPL_CNT
      and RECN_CNT > ADMT_CNT
      and RECN_CNT > DENY_CNT
      and RECN_CNT > WAIT_CNT
      and RECN_CNT > DDEF_CNT
      and RECN_CNT > MATR_CNT
      and RECN_CNT > NO_DEC_CNT
     then 1 else 0 
 end RECONSIDER_CNT, 
case when  DEIN_CNT > NO_APPL_CNT    -- Count as deposited if dein count > 0 and not WADM/DUPL    -- Also include enrolled???
      and (DEIN_CNT > APPL_CNT
      and  DEIN_CNT > NO_DEC_CNT
      and  DEIN_CNT > NO_DEIN_CNT
--      and (TERM_CD = DEIN_TERM_CD or (TERM_CD > DEIN_TERM_CD and PM_CNT > 0 ))        -- Lowell fix 12/16/2010 
      and (TERM_CD = DEIN_TERM_CD or (TERM_CD > DEIN_TERM_CD and PM_CNT > 0 ) or (TERM_CD <> DEIN_TERM_CD and CHKLST_FLAG = 'Y' ))        -- Lowell fix Jan 2017 
       or  ADRV_CNT > ADRV_ADMT_CNT)
     then 1 else 0 
 end DEPOSIT_CNT, 
case when MATR_CNT > NO_APPL_CNT      -- Count as matriculated if matric count > admissions revoke count and not WADM/DUPL
      and MATR_CNT > ADRV_CNT         -- Not counted as matriculated if ADRV and not NOSH
      and MATR_CNT > ADRV_ADMT_CNT    -- Not counted as matriculated if ADRV/NOSH 
      and PROG_STAT_CD = 'AC'          -- Fix Aug 2015 
     then 1 else 0 
 end MATRIC_CNT, 
case when NO_APPL_CNT = 0
      and DECL_CNT > NO_APPL_CNT
      and DECL_CNT > APPL_CNT
      and DECL_CNT > 0
      and DECL_CNT > RECN_CNT
      and DECL_CNT > DENY_CNT
      and DECL_CNT > WAIT_CNT
      and DECL_CNT > ADMT_CNT
      and DECL_CNT > MATR_CNT
     then 1 else 0 
 end DECLINE_CNT, 
case when NO_APPL_CNT = 0
      and WITH_CNT > NO_APPL_CNT 
      and WITH_CNT > APPL_CNT
      and WITH_CNT > 0
      and WITH_CNT > RECN_CNT
      and WITH_CNT > DENY_CNT
      and WITH_CNT > WAIT_CNT
      and WITH_CNT > ADMT_CNT
      and WITH_CNT > MATR_CNT
     then 1 else 0 
 end WITHDRAW_CNT, 
case when NO_APPL_CNT = 0
      and ADRV_CNT > NO_APPL_CNT
      and (ADRV_CNT > MATR_CNT or ADRV_ADMT_CNT > MATR_CNT)
     then 1 else 0 
 end REVOKE_CNT, 
case when ENROLL_CNT > NO_APPL_CNT     -- Count as enrolled if enroll count > zero and not WADM/DUPL -- From union to enrollment data
      and ENROLL_CNT > 0 
      and ENROLL_CNT > (case when ADMT_CNT >= WITH_CNT then 0 else WITH_CNT end)        -- Lowell fix 11/5/10
      and ENROLL_CNT > (case when ADMT_CNT >= DDEF_CNT then 0 else DDEF_CNT end)        -- Lowell fix 11/5/10
      and ENROLL_CNT > (case when ADMT_CNT >= DEFR_CNT then 0 else DEFR_CNT end)        -- Lowell fix 11/5/10
      and ((APPL_COUNT_ORDER = 1 and PROG_STAT_CD = 'AC') or APPL_COUNT_ORDER > 1)
     then 1 else 0
 end ENROLL_CNT,
F5.CREDIT_SUM,
case when (EARLY_CNT >  NO_APPL_CNT 
      and  EARLY_CNT >  APPL_CNT
      and  EARLY_CNT >  REG_CNT
      and  EARLY_CNT >  DEFR_REG_CNT)
       or (DEFR_REG_CNT >  NO_APPL_CNT 
      and  DEFR_REG_CNT >  APPL_CNT
      and  DEFR_REG_CNT >  REG_CNT
      and  DEFR_REG_CNT >  DEC_CNT 
      and  DEFR_REG_CNT >  DEFR_CNT) 
     then 'Early' else 'Regular' 
 end DECISION_CTGRY, 
F5.APPL_COUNT_ORDER,
F5.APPL_TERM_ORDER,
decode(MAX(case when F5.APPL_ORDER = 1 then F5.ADMIT_TERM_SID else 0 end) 
    OVER (PARTITION BY F5.APPLCNT_SID, F5.INSTITUTION_SID, F5.ACAD_CAR_SID, F5.STU_CAR_NBR, F5.ADM_APPL_NBR, F5.SRC_SYS_ID), F5.ADMIT_TERM_SID,'Y','N') MAX_TERM_FLG     -- Added 1/5/2012   
from F5
),
F7 as (
select /*+ PARALLEL(16) INLINE */
APPLCNT_SID, 
INSTITUTION_SID, 
ACAD_CAR_SID, 
STU_CAR_NBR, 
ADM_APPL_NBR, 
APPL_PROG_NBR, 
ACAD_PROG_SID, 
ACAD_PLAN_SID, 
ACAD_SPLAN_SID, 
EFFDT_SID, 
EFFSEQ, 
SRC_SYS_ID, 
PERSON_ID,
INSTITUTION_CD, 
ACAD_CAR_CD,
ACAD_PROG_CD,
ACAD_PLAN_CD, 
PLAN_DECLARE_DT,
ACAD_SPLAN_CD,
SPLAN_DECLARE_DT,
TERM_CD,  
ADMIT_TERM_SID,
APPL_KEY, 
EXP_GRAD_TERM_SID, 
ADMIT_TYPE_SID, 
ACAD_LVL_SID, 
ACAD_LOAD_SID, 
ACAD_PROG_UM2_SID, 
ACAD_PLAN_UM2_SID, 
ACAD_SPLAN_UM2_SID, 
ACAD_SPLAN2_SID, 
AUDIT_OPRID_SID, 
CAMPUS_SID, 
PERSON_ATHL_SID,
PERSON_SRVC_IND_SID,
DUAL_ACAD_PROG_SID, 
JOINT_PROG_FLG, 
PROG_STAT_SID, 
PROG_ACN_SID, 
PROG_ACN_RSN_SID, 
ACTION_DT_SID, 
APPL_DT_SID, 
APPL_CNTR_SID, 
APPL_MTHD_SID, 
APPL_CMPLTN_FLG, 
APPL_CMPLTN_DT_SID, 
APPL_MANUAL_CMPLTN_FLG, 
APPL_MANUAL_CMPLTN_DT, 
MAX_CMPLTN_FLG, 
MIN_CMPLTN_DT_SID, 
APPL_CREATE_DT_SID, 
APPL_CREATION_BY,
APPL_UPDATE_DT_SID,
APPL_UPDATED_BY,
APPL_FEE_AMT, 
APPL_FEE_DT, 
APPL_FEE_PAID, 
APPL_FEE_STATUS, 
APPL_FEE_TYPE, 
APP_FEE_STATUS, 
AUDIT_ACTION, 
AUDIT_DT, 
AUDIT_OPRID, 
EXT_ADM_APPL_NBR, 
WAIVE_AMT, 
FA_PELL_ELIGIBILITY,     -- Apr 2018 
Applied_flag, 
FIN_AID_INTEREST, 
HOUSING_INTEREST, 
LST_SCHL_ATTND_SID, 
LST_SCHL_GRDDT_SID, 
NOTIFICATION_PLAN, 
TERM_BEGIN_DT,        -- Apr 2018 
TERM_END_DT,          -- Apr 2018 
UM_BHE, 
UM_BHE_ENG, 
UM_BHE_SOCSCI, 
UM_BHE_SCI, 
UM_BHE_MATH, 
UM_BHE_ELT, 
UM_BHE_FRLG, 
UM_BHE_CMPLT, 
UM_BHE_EXP_VOCTEC, 
UM_BHE_EXP_ESL, 
UM_BHE_EXP_INTL, 
UM_BHE_PRECOLLEGE, 
UM_BHE_EXP_LD, 
UM_BHE_TRANS_CR, 
UM_BHE_TRANS_GPA, 
UM_CA_FIRST_GEN,
UM_CA_TESTING_PLAN,
UM_RA_TA_INTEREST, 
STU_CAR_NBR_SR, 
EVAL_STAT_SID, 
EVALUATN_DT, 
UM_TCA_COMPLETE, 
UM_TCA_CREDITS, 
PROG_ACN_CD,
PROG_ACN_RSN_CD,
PROG_STAT_CD,
ADMIT_TYPE_ID,
APPL_STAT_CNT, 
(case when APPL_COMPLETE_CNT = 1 or ADMIT_CNT = 1 or DEPOSIT_CNT = 1 or ENROLL_CNT = 1 then 1 else APPL_CNT end) APPL_CNT,  -- Add MATRIC_CNT, DENY_CNT, etc???  
--(case when ADMIT_CNT = 1 or DEPOSIT_CNT = 1 or ENROLL_CNT = 1 then 1 else APPL_COMPLETE_CNT end) APPL_COMPLETE_CNT,  -- Add MATRIC_CNT, DENY_CNT, etc???  
(case when ENROLL_CNT = 1  then 1
      when INSTITUTION_CD = 'UMLOW' and PROG_STAT_CD not in ('AC','AD','PM') then APPL_COMPLETE_CNT 
      when ADMIT_CNT = 1 then 1
      when DEPOSIT_CNT = 1 then 1 
      else APPL_COMPLETE_CNT end) APPL_COMPLETE_CNT,  -- Add MATRIC_CNT, DENY_CNT, etc???  
--(case when DEPOSIT_CNT = 1 or ENROLL_CNT = 1  then 1 else ADMIT_CNT end) ADMIT_CNT,        -- Add MATRIC_CNT???
(case when ENROLL_CNT = 1  then 1
      when INSTITUTION_CD = 'UMLOW' and PROG_STAT_CD not in ('AC','AD','PM') then ADMIT_CNT 
      when DEPOSIT_CNT = 1 then 1 
      else ADMIT_CNT end) ADMIT_CNT,        -- Add MATRIC_CNT???
P_ADMIT_CNT,
DENY_CNT, 
P_DENY_CNT, 
WAIT_CNT, 
P_WAIT_CNT, 
DEFER_DECISION_CNT, 
DEFER_ENROLL_CNT, 
DEFER_REGULAR_CNT,
RECONSIDER_CNT, 
--(case when ENROLL_CNT = 1 then 1 else DEPOSIT_CNT end) DEPOSIT_CNT,     -- Add MATRIC_CNT???  
(case when ENROLL_CNT = 1 then 1 
--      when INSTITUTION_CD = 'UMLOW' and PROG_STAT_CD in ('AC','PM') and ADMIT_TYPE_ID = 'FYR' then 1
      when INSTITUTION_CD = 'UMLOW' and PROG_STAT_CD not in ('AC','AD','PM') then 0
      else DEPOSIT_CNT end) DEPOSIT_CNT,  
MATRIC_CNT,     -- Add ENROLL_CNT??? 
DECLINE_CNT, 
WITHDRAW_CNT, 
REVOKE_CNT, 
case when PROG_STAT_CD not in ('AC')     -- Oct 2017 
     then 0
     else ENROLL_CNT
 end ENROLL_CNT, 
case when PROG_STAT_CD not in ('AC')     -- Oct 2017 
     then 0
     else CREDIT_SUM
 end CREDIT_SUM, 
DECISION_CTGRY, 
APPL_COUNT_ORDER, 
APPL_TERM_ORDER, 
MAX_TERM_FLG 
from F6
),
F8 as (
select /*+ PARALLEL(16) INLINE */
rownum ADM_APPL_SID,
APPLCNT_SID, 
INSTITUTION_SID, 
ACAD_CAR_SID, 
STU_CAR_NBR, 
ADM_APPL_NBR, 
APPL_PROG_NBR, 
ACAD_PROG_SID, 
ACAD_PLAN_SID, 
ACAD_SPLAN_SID, 
EFFDT_SID, 
to_date(EFFDT_SID,'YYYYMMDD') EFFDT, 
EFFSEQ, 
SRC_SYS_ID, 
PERSON_ID,
INSTITUTION_CD, 
ACAD_CAR_CD,
ACAD_PROG_CD,
ACAD_PLAN_CD, 
PLAN_DECLARE_DT,
ACAD_SPLAN_CD,
SPLAN_DECLARE_DT,
TERM_CD ADMIT_TERM_CD,  
ADMIT_TERM_SID,
APPL_KEY, 
EXP_GRAD_TERM_SID, 
ADMIT_TYPE_SID, 
ACAD_LVL_SID, 
ACAD_LOAD_SID, 
ACAD_PROG_UM2_SID, 
ACAD_PLAN_UM2_SID, 
ACAD_SPLAN_UM2_SID, 
ACAD_SPLAN2_SID, 
AUDIT_OPRID_SID, 
CAMPUS_SID, 
PERSON_ATHL_SID,
PERSON_SRVC_IND_SID,
DUAL_ACAD_PROG_SID, 
JOINT_PROG_FLG, 
PROG_STAT_SID, 
PROG_STAT_CD,
PROG_ACN_SID, 
PROG_ACN_RSN_SID, 
to_date((case when ACTION_DT_SID >= 19020101 then ACTION_DT_SID else NULL end),'YYYYMMDD') ACTION_DT,  
to_date((case when APPL_DT_SID >= 19020101 then APPL_DT_SID else NULL end),'YYYYMMDD') APPL_DT,  
APPL_CNTR_SID, 
APPL_MTHD_SID, 
APPL_CMPLTN_FLG, 
to_date((case when APPL_CMPLTN_DT_SID >= 19020101 then APPL_CMPLTN_DT_SID else NULL end),'YYYYMMDD') APPL_CMPLTN_DT,  
APPL_MANUAL_CMPLTN_FLG, 
APPL_MANUAL_CMPLTN_DT, 
to_date((case when APPL_CREATE_DT_SID >= 19020101 then APPL_CREATE_DT_SID else NULL end),'YYYYMMDD') APPL_CREATE_DT,  
APPL_CREATION_BY,
to_date((case when APPL_UPDATE_DT_SID >= 19020101 then APPL_UPDATE_DT_SID else NULL end),'YYYYMMDD') APPL_UPDATE_DT,  
APPL_UPDATED_BY,
APPL_FEE_AMT, 
APPL_FEE_DT, 
APPL_FEE_PAID, 
APPL_FEE_STATUS, 
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'APPL_FEE_STATUS'
        AND X.FIELDVALUE = APPL_FEE_STATUS),'-') APPL_FEE_STATUS_LD,
APPL_FEE_TYPE, 
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'APPL_FEE_TYPE'
        AND X.FIELDVALUE = APPL_FEE_TYPE),'-') APPL_FEE_TYPE_LD,
APP_FEE_STATUS, 
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'APP_FEE_STATUS'
        AND X.FIELDVALUE = APP_FEE_STATUS),'-') APP_FEE_STATUS_LD,
AUDIT_ACTION, 
AUDIT_DT, 
AUDIT_OPRID, 
EXT_ADM_APPL_NBR, 
WAIVE_AMT, 
FA_PELL_ELIGIBILITY,     -- Apr 2018 
Applied_flag, 
FIN_AID_INTEREST, 
decode(HOUSING_INTEREST,'-','',HOUSING_INTEREST) HOUSING_INTEREST, 
NVL((SELECT MIN (X.XLATSHORTNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'HOUSING_INTEREST'
        AND X.FIELDVALUE = HOUSING_INTEREST),'') HOUSING_INTEREST_SD,
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'HOUSING_INTEREST'
        AND X.FIELDVALUE = HOUSING_INTEREST),'') HOUSING_INTEREST_LD,
LST_SCHL_ATTND_SID, 
to_date((case when LST_SCHL_GRDDT_SID >= 19020101 then LST_SCHL_GRDDT_SID else NULL end),'YYYYMMDD') LST_SCHL_GRDDT,  
NOTIFICATION_PLAN, 
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'NOTIFICATION_PLAN'
        AND X.FIELDVALUE = NOTIFICATION_PLAN),'-') NOTIFICATION_PLAN_LD,
TERM_BEGIN_DT,        -- Apr 2018 
TERM_END_DT,          -- Apr 2018 
UM_BHE, 
NVL((SELECT MIN (X.XLATSHORTNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'UM_BHE' 
        AND X.FIELDVALUE = UM_BHE),'-') UM_BHE_SD,
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'UM_BHE' 
        AND X.FIELDVALUE = UM_BHE),'-') UM_BHE_LD,
UM_BHE_ENG, 
UM_BHE_SOCSCI, 
UM_BHE_SCI, 
UM_BHE_MATH, 
UM_BHE_ELT, 
UM_BHE_FRLG, 
UM_BHE_CMPLT, 
UM_BHE_EXP_VOCTEC, 
UM_BHE_EXP_ESL, 
UM_BHE_EXP_INTL, 
UM_BHE_PRECOLLEGE, 
UM_BHE_EXP_LD, 
UM_BHE_TRANS_CR, 
UM_BHE_TRANS_GPA, 
UM_CA_FIRST_GEN,
UM_CA_TESTING_PLAN,
UM_RA_TA_INTEREST, 
NVL((SELECT MIN (X.XLATSHORTNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'UM_RA_TA_INTEREST'
        AND X.FIELDVALUE = UM_RA_TA_INTEREST),'-') UM_RA_TA_INTEREST_SD,     -- Apr 2018 
NVL((SELECT MIN (X.XLATLONGNAME)
       FROM UM_D_XLATITEM_VW X
      WHERE X.FIELDNAME = 'UM_RA_TA_INTEREST'
        AND X.FIELDVALUE = UM_RA_TA_INTEREST),'-') UM_RA_TA_INTEREST_LD,     -- Apr 2018 
STU_CAR_NBR_SR, 
EVAL_STAT_SID, 
EVALUATN_DT, 
UM_TCA_COMPLETE, 
UM_TCA_CREDITS, 
          'Dummy' APPL_CTGRY,
DECISION_CTGRY,
APPL_CNT, 
case when APPL_COMPLETE_CNT = 1 and APPL_COUNT_ORDER = 1 and MAX_CMPLTN_FLG = 'N' and ADMIT_CNT+DENY_CNT+MATRIC_CNT+ENROLL_CNT = 0 then 0 
     when APPL_COMPLETE_CNT = 0 and APPL_COUNT_ORDER = 1 and (MAX_CMPLTN_FLG = 'Y' or (ADMIT_CNT+DENY_CNT+MATRIC_CNT+ENROLL_CNT > 0)) 
                                and APPL_CNT <> 0 and PROG_ACN_RSN_CD <> 'INC' then 1
     else APPL_COMPLETE_CNT end APPL_COMPLETE_CNT,    -- May 2014
ADMIT_CNT, 
P_ADMIT_CNT ADMIT_PREDICT_CNT,
DENY_CNT, 
P_DENY_CNT DENY_PREDICT_CNT,
WAIT_CNT, 
P_WAIT_CNT WAIT_PREDICT_CNT,
DEFER_DECISION_CNT, 
DEFER_ENROLL_CNT, 
DEFER_REGULAR_CNT,
RECONSIDER_CNT, 
DEPOSIT_CNT, 
MATRIC_CNT, 
DECLINE_CNT, 
WITHDRAW_CNT, 
REVOKE_CNT, 
ENROLL_CNT, 
APPL_COUNT_ORDER, 
APPL_TERM_ORDER, 
MAX_TERM_FLG 
from F7)
select  /*+ PARALLEL(16) INLINE */
ADM_APPL_SID,
APPLCNT_SID,
INSTITUTION_SID,
ACAD_CAR_SID,
STU_CAR_NBR,
ADM_APPL_NBR,
APPL_PROG_NBR,
ACAD_PROG_SID,
ACAD_PLAN_SID,
ACAD_SPLAN_SID,
EFFDT,
EFFSEQ,
SRC_SYS_ID,
PERSON_ID,
INSTITUTION_CD,
ACAD_CAR_CD,
ACAD_PROG_CD,
ACAD_PLAN_CD, 
PLAN_DECLARE_DT,
ACAD_SPLAN_CD,
SPLAN_DECLARE_DT,
ADMIT_TERM_CD,
ADMIT_TERM_SID,
APPL_KEY,
EXP_GRAD_TERM_SID,
ADMIT_TYPE_SID,
ACAD_LVL_SID,
ACAD_LOAD_SID,
ACAD_PROG_UM2_SID,
ACAD_PLAN_UM2_SID,
ACAD_SPLAN_UM2_SID,
ACAD_SPLAN2_SID,
AUDIT_OPRID_SID,
CAMPUS_SID,
PERSON_ATHL_SID,
PERSON_SRVC_IND_SID,
DUAL_ACAD_PROG_SID,
JOINT_PROG_FLG,
PROG_STAT_SID,
PROG_ACN_SID,
PROG_ACN_RSN_SID,
ACTION_DT,
APPL_DT,
APPL_CNTR_SID,
APPL_MTHD_SID,
APPL_CMPLTN_FLG,
APPL_CMPLTN_DT,
APPL_MANUAL_CMPLTN_FLG,
APPL_MANUAL_CMPLTN_DT,
APPL_CREATE_DT,
APPL_CREATION_BY,
APPL_UPDATE_DT,
APPL_UPDATED_BY,
APPL_FEE_AMT,
APPL_FEE_DT,
APPL_FEE_PAID,
APPL_FEE_STATUS,
APPL_FEE_STATUS_LD,
APPL_FEE_TYPE,
APPL_FEE_TYPE_LD,
APP_FEE_STATUS,
APP_FEE_STATUS_LD,
AUDIT_ACTION,
AUDIT_DT,
AUDIT_OPRID,
EXT_ADM_APPL_NBR,
WAIVE_AMT,
FA_PELL_ELIGIBILITY,     -- Apr 2018 
FIN_AID_INTEREST,
HOUSING_INTEREST,
HOUSING_INTEREST_SD,
HOUSING_INTEREST_LD,
LST_SCHL_ATTND_SID,
LST_SCHL_GRDDT,
NOTIFICATION_PLAN,
NOTIFICATION_PLAN_LD,
TERM_BEGIN_DT,        -- Apr 2018 
TERM_END_DT,          -- Apr 2018 
UM_BHE,
UM_BHE_SD,
UM_BHE_LD,
UM_BHE_ENG,
UM_BHE_SOCSCI,
UM_BHE_SCI,
UM_BHE_MATH,
UM_BHE_ELT,
UM_BHE_FRLG,
UM_BHE_CMPLT,
UM_BHE_EXP_VOCTEC,
UM_BHE_EXP_ESL,
UM_BHE_EXP_INTL,
UM_BHE_PRECOLLEGE,
UM_BHE_EXP_LD,
UM_BHE_TRANS_CR,
UM_BHE_TRANS_GPA,
UM_CA_FIRST_GEN,
UM_CA_TESTING_PLAN,
UM_RA_TA_INTEREST,
UM_RA_TA_INTEREST_SD,   -- Apr 2018 
UM_RA_TA_INTEREST_LD,   -- Apr 2018 
STU_CAR_NBR_SR,
EVAL_STAT_SID,
EVALUATN_DT,
UM_TCA_COMPLETE,
UM_TCA_CREDITS,
APPL_CTGRY,
          CASE
             WHEN APPL_CNT = 0 THEN '-'
             WHEN APPL_COMPLETE_CNT = 1 THEN 'Complete'
             ELSE 'Incomplete'
          END
             APPLIED_CTGRY,
          CASE
             WHEN APPL_COMPLETE_CNT = 0
             THEN
                '-'
             WHEN ADMIT_CNT = 1
             THEN
                'Admit'
             WHEN DENY_CNT = 1
             THEN
                'Deny'
             WHEN RECONSIDER_CNT = 1
             THEN
                'Reconsider'
             WHEN WAIT_CNT = 1
             THEN
                'Wait'
             WHEN DEFER_DECISION_CNT = 1
             THEN
                'Reconsider'
--             WHEN EXISTS
--                     (SELECT 1
--                        FROM PS_D_PROG_STAT S
--                       WHERE PROG_STAT_SID = S.PROG_STAT_SID
--                         AND PROG_STAT_CD = 'CN')
             WHEN PROG_STAT_CD = 'CN'
             THEN
                'Withdraw'
             ELSE
                DECODE (INSTITUTION_CD,
                        'UMDAR', 'No-decision',
                        'Decision Ready')
          END
             APPL_COMPLETE_CTGRY,
          CASE
             WHEN ADMIT_CNT = 0 THEN '-'
--             WHEN REVOKE_CNT = 1 THEN 'Revoked'
             WHEN DECLINE_CNT = 1 THEN 'Declined'
             WHEN DEFER_ENROLL_CNT = 1 THEN 'Defer'
             WHEN ENROLL_CNT = 1 THEN 'Enroll'
             WHEN DEPOSIT_CNT = 1 THEN 'Deposit'
             ELSE 'No-response'
          END
             ADMIT_CTGRY,
DECISION_CTGRY,
APPL_CNT,
          CASE WHEN APPL_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(APPL_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END APPL_FIRST_CNT,
APPL_COMPLETE_CNT,
          CASE WHEN APPL_COMPLETE_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(APPL_COMPLETE_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END APPL_COMPLETE_FIRST_CNT,
ADMIT_CNT,
          CASE WHEN ADMIT_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(ADMIT_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END ADMIT_FIRST_CNT,
ADMIT_PREDICT_CNT,
DENY_CNT,
          CASE WHEN DENY_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(DENY_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END DENY_FIRST_CNT,
DENY_PREDICT_CNT,
WAIT_CNT,
          CASE WHEN WAIT_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(WAIT_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END WAIT_FIRST_CNT,
WAIT_PREDICT_CNT,
DEFER_DECISION_CNT,
          CASE WHEN DEFER_DECISION_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(DEFER_DECISION_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END DEFER_DECISION_FIRST_CNT,
DEFER_ENROLL_CNT,
          CASE WHEN DEFER_ENROLL_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(DEFER_ENROLL_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END DEFER_ENROLL_FIRST_CNT,
DEFER_REGULAR_CNT,
RECONSIDER_CNT,
          CASE WHEN RECONSIDER_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(RECONSIDER_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END RECONSIDER_FIRST_CNT,
DEPOSIT_CNT,
          CASE WHEN DEPOSIT_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(DEPOSIT_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END DEPOSIT_FIRST_CNT,
MATRIC_CNT,
          CASE WHEN MATRIC_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(MATRIC_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END MATRIC_FIRST_CNT,
DECLINE_CNT,
          CASE WHEN DECLINE_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(DECLINE_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END DECLINE_FIRST_CNT,
WITHDRAW_CNT,
          CASE WHEN WITHDRAW_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(WITHDRAW_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END WITHDRAW_FIRST_CNT,
REVOKE_CNT, 
          CASE WHEN REVOKE_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(REVOKE_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END REVOKE_FIRST_CNT,
ENROLL_CNT,
          CASE WHEN ENROLL_CNT = 1
                AND EFFDT_SID + (EFFSEQ / 100) = (min(decode(ENROLL_CNT,1,EFFDT_SID+(EFFSEQ/100),NULL)) over (partition by APPL_KEY))
               THEN 1
               ELSE 0
          END ENROLL_FIRST_CNT,
APPL_COUNT_ORDER,
APPL_TERM_ORDER,
MAX_TERM_FLG,
Applied_flag
from F8
;


strSqlCommand   := 'SET intRowCount';
intRowCount     := SQL%ROWCOUNT;

commit;

insert into UM_F_ADM_APPL_STAT (
ADM_APPL_SID, APPLCNT_SID, INSTITUTION_SID, ACAD_CAR_SID, STU_CAR_NBR,                                                      -- 5
ADM_APPL_NBR, APPL_PROG_NBR, ACAD_PROG_SID, ACAD_PLAN_SID, ACAD_SPLAN_SID,                                                  -- 5 
EFFDT, EFFSEQ, SRC_SYS_ID,                                                                                                  -- 3
PERSON_ID, INSTITUTION_CD, ACAD_CAR_CD, ACAD_PROG_CD, ACAD_PLAN_CD, PLAN_DECLARE_DT, ACAD_SPLAN_CD, SPLAN_DECLARE_DT, ADMIT_TERM_CD, -- 9
ADMIT_TERM_SID, APPL_KEY, EXP_GRAD_TERM_SID, ADMIT_TYPE_SID, ACAD_LVL_SID, ACAD_LOAD_SID,                                   -- 6 
ACAD_PROG_UM2_SID, ACAD_PLAN_UM2_SID, ACAD_SPLAN_UM2_SID, ACAD_SPLAN2_SID,                                                  -- 4 
AUDIT_OPRID_SID, CAMPUS_SID, PERSON_ATHL_SID, PERSON_SRVC_IND_SID,                                                          -- 4
DUAL_ACAD_PROG_SID, JOINT_PROG_FLG, PROG_STAT_SID, PROG_ACN_SID, PROG_ACN_RSN_SID,                                          -- 5
ACTION_DT, APPL_DT, APPL_CNTR_SID, APPL_MTHD_SID, APPL_CMPLTN_FLG,                                                          -- 5
APPL_CMPLTN_DT, APPL_MANUAL_CMPLTN_FLG, APPL_MANUAL_CMPLTN_DT,                                                              -- 3 
APPL_CREATE_DT, APPL_CREATION_BY, APPL_UPDATE_DT, APPL_UPDATED_BY,                                                          -- 4
APPL_FEE_AMT, APPL_FEE_DT, APPL_FEE_PAID, APPL_FEE_STATUS, APPL_FEE_STATUS_LD, APPL_FEE_TYPE, APPL_FEE_TYPE_LD,             -- 7
APP_FEE_STATUS, APP_FEE_STATUS_LD, AUDIT_ACTION, AUDIT_DT, AUDIT_OPRID,                                                     -- 5 
EXT_ADM_APPL_NBR, WAIVE_AMT, FA_PELL_ELIGIBILITY, FIN_AID_INTEREST, HOUSING_INTEREST, HOUSING_INTEREST_SD, HOUSING_INTEREST_LD,                  -- 7
LST_SCHL_ATTND_SID, LST_SCHL_GRDDT, NOTIFICATION_PLAN, NOTIFICATION_PLAN_LD, TERM_BEGIN_DT, TERM_END_DT,                                               -- 6
UM_BHE, UM_BHE_SD, UM_BHE_LD, UM_BHE_ENG, UM_BHE_SOCSCI, UM_BHE_SCI, UM_BHE_MATH, UM_BHE_ELT, UM_BHE_FRLG, UM_BHE_CMPLT,    -- 10
UM_BHE_EXP_VOCTEC, UM_BHE_EXP_ESL, UM_BHE_EXP_INTL, UM_BHE_PRECOLLEGE, UM_BHE_EXP_LD, UM_BHE_TRANS_CR, UM_BHE_TRANS_GPA,    -- 7
UM_CA_FIRST_GEN, UM_CA_TESTING_PLAN, UM_RA_TA_INTEREST, UM_RA_TA_INTEREST_SD, UM_RA_TA_INTEREST_LD, STU_CAR_NBR_SR, EVAL_STAT_SID, EVALUATN_DT, UM_TCA_COMPLETE, UM_TCA_CREDITS, -- 10
APPL_CTGRY, APPLIED_CTGRY, APPL_COMPLETE_CTGRY, ADMIT_CTGRY, DECISION_CTGRY,                                                -- 5
APPL_CNT, APPL_FIRST_CNT, APPL_COMPLETE_CNT, APPL_COMPLETE_FIRST_CNT,                                                       -- 4
ADMIT_CNT, ADMIT_FIRST_CNT, ADMIT_PREDICT_CNT, DENY_CNT, DENY_FIRST_CNT, DENY_PREDICT_CNT,                                  -- 6
WAIT_CNT, WAIT_FIRST_CNT, WAIT_PREDICT_CNT, DEFER_DECISION_CNT, DEFER_DECISION_FIRST_CNT,                                   -- 5
DEFER_ENROLL_CNT, DEFER_ENROLL_FIRST_CNT, DEFER_REGULAR_CNT, RECONSIDER_CNT, RECONSIDER_FIRST_CNT,                          -- 5
DEPOSIT_CNT, DEPOSIT_FIRST_CNT, MATRIC_CNT, MATRIC_FIRST_CNT,                                                               -- 4
DECLINE_CNT, DECLINE_FIRST_CNT, WITHDRAW_CNT, WITHDRAW_FIRST_CNT, REVOKE_CNT, REVOKE_FIRST_CNT,                             -- 6
ENROLL_CNT, ENROLL_FIRST_CNT, APPL_COUNT_ORDER, APPL_TERM_ORDER, MAX_TERM_FLG, FA_APPLIED_FLAG)                                              -- 5
 Values
   (2147483646, 2147483646, 2147483646, 2147483646, 0,                  -- 5 
    '-', 0, 2147483646, 2147483646, 2147483646,                         -- 5 
    '01-JAN-1900', 1, 'CS90',                                           -- 3 
    '-', '-', '-', '-', '-', NULL, '-', NULL, '-',                      -- 7
    2147483646, '-', 2147483646, 2147483646, 2147483646, 2147483646,    -- 6 
    2147483646, 2147483646, 2147483646, 2147483646,                     -- 4
    2147483646, 2147483646, 2147483646, 2147483646,                     -- 4
    2147483646, '-', 2147483646, 2147483646, 2147483646,                -- 5
    NULL, NULL, 2147483646, 2147483646, '-',                            -- 5
    NULL, '-', NULL,                                                    -- 3 
    NULL, '-', NULL, '-',                                               -- 4
    0, NULL, 0, '-', '-', '-', '-',                                     -- 7
    '-', '-', '-', NULL, '-',                                           -- 5
    '-', 0, '-', '-', '-', '-', '-',                                         -- 7
    2147483646, NULL, '-', '-', trunc(SYSDATE), trunc(SYSDATE),                        -- 6
    '-', '-', '-', '-', '-', '-', '-', '-', '-', '-',                   -- 10
    '-', '-', '-', '-', '-', NULL, NULL,                                -- 7
    '-', '-', '-', '-', '-', 0, 0, NULL, '-', 0,                                  -- 10
    '-', '-', '-', '-', '-',                                            -- 5
    0, 0, 0, 0,                                                         -- 4
    0, 0, 0, 0, 0, 0,                                                   -- 6
    0, 0, 0, 0, 0,                                                      -- 5
    0, 0, 0, 0, 0,                                                      -- 5
    0, 0, 0, 0,                                                         -- 4
    0, 0, 0, 0, 0, 0,                                                   -- 6
    0, 0, 0, 0, '-','-')                                                    -- 5
;

strSqlCommand := 'commit';
commit;

strMessage01    := '# of UM_F_ADM_APPL_STAT rows inserted: ' || TO_CHAR(intRowCount,'999,999,999,999');
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_DETAIL';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_DETAIL
        (
                i_TargetTableName   => 'UM_F_ADM_APPL_STAT',
                i_Action            => 'INSERT',
                i_RowCount          => intRowCount
        );

strMessage01    := 'Enabling Indexes for table CSMRT_OWNER.UM_F_ADM_APPL_STAT';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

strSqlDynamic   := 'alter table CSMRT_OWNER.UM_F_ADM_APPL_STAT enable constraint PK_UM_F_ADM_APPL_STAT';
strSqlCommand   := 'SMT_UTILITY.EXECUTE_IMMEDIATE: ' || strSqlDynamic;
COMMON_OWNER.SMT_UTILITY.EXECUTE_IMMEDIATE
                (
                i_SqlStatement          => strSqlDynamic,
                i_MaxTries              => 10,
                i_WaitSeconds           => 10,
                o_Tries                 => intTries
                );
				
COMMON_OWNER.SMT_INDEX.ALL_REBUILD('CSMRT_OWNER','UM_F_ADM_APPL_STAT');

strSqlCommand := 'SMT_PROCESS_LOG.PROCESS_SUCCESS';
COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_SUCCESS;

strMessage01    := strProcessName || ' is complete.';
COMMON_OWNER.SMT_LOG.PUT_MESSAGE(i_Message => strMessage01);

EXCEPTION
    WHEN OTHERS THEN
        COMMON_OWNER.SMT_PROCESS_LOG.PROCESS_EXCEPTION
                (
                        i_SqlCommand   => strSqlCommand,
                        i_SqlCode      => SQLCODE,
                        i_SqlErrm      => SQLERRM
                );

END UM_F_ADM_APPL_STAT_P;
/
